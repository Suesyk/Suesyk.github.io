<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>个人简历</title>
      <link href="/2025/09/01/resume/"/>
      <url>/2025/09/01/resume/</url>
      
        <content type="html"><![CDATA[<h1 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h1><p><strong>姓名：</strong> 苏煜凯</p><p><strong>报考专业：</strong> 电路与系统</p><p><strong>电话：</strong><a href="tel:18135566773">18135566773</a> </p><p><strong>邮箱：</strong><a href="mailto:Samuel.syk@aliyun.com">Samuel.syk@aliyun.com</a> </p><h1 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h1><p><strong>中北大学 - 本科 - 电子科学与技术</strong><br>2022.09 - 2026.07<br><strong>主修课程：</strong> 半导体物理与器件、电路分析基础、模拟电子技术、数字电子技术、微机原理与接口技术、可编程逻辑器件及应用、信号与系统、系统集成与应用等。</p><h1 id="初试成绩"><a href="#初试成绩" class="headerlink" title="初试成绩"></a>初试成绩</h1><div class="table-container"><table><thead><tr><th style="text-align:center">初试成绩</th><th style="text-align:center">英语</th><th style="text-align:center">政治</th><th style="text-align:center">数学</th><th style="text-align:center">专业课</th><th style="text-align:center">总分</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table></div><h1 id="学术科研"><a href="#学术科研" class="headerlink" title="学术科研"></a>学术科研</h1><h2 id="启程杯项目（负责人）"><a href="#启程杯项目（负责人）" class="headerlink" title="启程杯项目（负责人）"></a><strong>启程杯项目（负责人）</strong></h2><p>2023.03 - 2023.04  </p><ul><li>项目简介：基于 STM32 微控制器设计智能循迹小车，实现黑线快速识别与路径规划，在限定时间内完成标准赛道赛程。  </li><li>项目内容：设计一款基于 STM32 芯片的循迹小车，通过软硬件协同优化，在标准赛道场景下，实现最短时间内自主完成赛程，焊接组装小车部件。  </li><li>项目成果：完成硬件原型开发，实现 30cm/s 稳定巡航速度，最小转弯半径≤15cm，赛道实测成绩：28.5 秒完成标准赛道（含 3 个 90° 弯道 + 2 个 S 弯） </li></ul><h2 id="C8051F020-单片机多路信号采样"><a href="#C8051F020-单片机多路信号采样" class="headerlink" title="C8051F020 单片机多路信号采样"></a><strong>C8051F020 单片机多路信号采样</strong></h2><p>2025.04 - 2025.05  </p><ul><li>项目简介：搭建 8 路电压信号同步采集平台，实现高频（1kHz / 路）循环采样与串口实时传输</li><li>项目内容：基于 C8051F020 单片机设计 8 路电压信号循环采样系统，通过电阻分压网络将 0-5V 输入信号调理至 0-2.4V 以适配 ADC 模块，编写代码实现 1KHz 采样频率的循环采集及串口数据发送并Proteus 仿真调试。  </li><li>项目成果：成功实现 8 路信号 1KHz 循环采样，串口稳定传输数据，仿真验证采样精度符合预期，形成包含硬件设计、代码及调试结果的完整方案。</li></ul><h1 id="实习经历"><a href="#实习经历" class="headerlink" title="实习经历"></a>实习经历</h1><h2 id="电工电子实习"><a href="#电工电子实习" class="headerlink" title="电工电子实习"></a><strong>电工电子实习</strong></h2><p>2024.07  </p><ul><li>项目简介：焊接制作流水灯与收音机。  </li><li>项目内容：绘制电路原理图，制作所需电路板，自主焊接元器件，测试实际使用效果。  </li><li>项目成果：实现收音机接受广播功能，完成流水灯不同闪烁功能。  </li></ul><h1 id="实践经历"><a href="#实践经历" class="headerlink" title="实践经历"></a>实践经历</h1><h2 id="1、班级管理与活动组织"><a href="#1、班级管理与活动组织" class="headerlink" title="1、班级管理与活动组织"></a><strong>1、班级管理与活动组织</strong></h2><p><strong>班长（材料科学与工程学院）、学委（仪器与电子学院）</strong></p><p>2022.09 - 至今  </p><ul><li>大一任材料学院班长，主导班级建设；大二转专业至仪器与电子学院后担任学委，统筹学业衔接与集体融合。</li><li>2023年作为主要负责人之一，参与组织 <strong><a href="https://mp.weixin.qq.com/s/Sp0ELR0CqBV169e0m8DwOw">中北大学第一届 “校友领航” 校友会</a></strong> ，联动校友资源，设计 “经验分享 + 职业沙龙” 双模块流程，邀请 2 位优秀校友线下分享，全校学生共同参与讲座，与母校携手共进。</li></ul><h2 id="2、学生组织与社团管理"><a href="#2、学生组织与社团管理" class="headerlink" title="2、学生组织与社团管理"></a><strong>2、学生组织与社团管理</strong></h2><p><strong>中北大学创业协会 - 团支书 / 办公室部长</strong></p><p>2024.09 - 2025.07  </p><ul><li>统筹 “双创服务” 志愿项目发布，累计组织 11 场志愿活动，覆盖 61 名志愿者，年度信用时数达 158 小时，构建协会标准化志愿服务管理流程。</li><li>搭建协会管理，负责活动审批、报销等流程；支撑 “校友领航” 等双创活动落地，推动协会志愿时数年度增长 101 小时。</li></ul><h2 id="3、中北大学”共享儿女”养老模式创新调研团（成员）"><a href="#3、中北大学”共享儿女”养老模式创新调研团（成员）" class="headerlink" title="3、中北大学”共享儿女”养老模式创新调研团（成员）"></a><strong>3、中北大学”共享儿女”养老模式创新调研团（成员）</strong></h2><p>2024.09 </p><ul><li>中北大学养老模式创新调研团深入太原市朝阳社区亲身体验并探索 “共享儿女” 这一充满温情的养老新模式，为社区空巢老人带去关爱，收获了社区的高度认可和深刻共鸣，并发表<a href="http://zw.china.com.cn/2024-10/29/content_117513323.shtml">国家级新闻媒体报道</a>。</li></ul><h2 id="4、IC设计-amp-智能控制创新实验室（成员）"><a href="#4、IC设计-amp-智能控制创新实验室（成员）" class="headerlink" title="4、IC设计&amp;智能控制创新实验室（成员）"></a><strong>4、IC设计&amp;智能控制创新实验室（成员）</strong></h2><p>2023.09 - 2024.07  </p><ul><li>参与组织实验室 IC 设计培训（含数字前端、验证流程）以及 C语言 、单片机 培训，完成设计红外遥控小车控制系统，实现 PWM 调速与红外解码，完成循迹避障算法调试，通过实验室考核认定。  </li></ul><h1 id="资格证书"><a href="#资格证书" class="headerlink" title="资格证书"></a>资格证书</h1><ul><li>大学英语四级（CET - 4） </li><li>大学英语六级（CET - 6） （暂未）</li><li>中北大学招生与就业工作部先进工作者</li><li>3D四六级证书 </li><li>山西省省级优秀志愿者</li><li>中北大学校级优秀志愿者</li></ul><h1 id="专利成果"><a href="#专利成果" class="headerlink" title="专利成果"></a>专利成果</h1><ul><li>发明专利：一种水上无人机专用浮球（申请号：202420735240.5）</li></ul><h1 id="获奖情况"><a href="#获奖情况" class="headerlink" title="获奖情况"></a>获奖情况</h1><ul><li>&lt; 2025.06 &gt; 第二十七届中国机器人及人工智能大赛新质生产力赛道国级二等奖 </li><li>&lt; 2025.06 &gt; 第二十七届中国机器人及人工智能大赛机器人创新赛国级三等奖</li><li>&lt; 2024.07 &gt; 全国三维数字化创新设计大赛16周年精英联赛(2023-2024)全国三等奖  </li><li>&lt; 2025.02 &gt; 全国三维数字化创新设计大赛年度竞赛省级一等奖  </li><li>&lt; 2025.06 &gt; 全国三维数字化创新设计大赛17周年精英联赛(2024-2025)省级一等奖  </li><li>&lt; 2024.09 &gt; 中国国际大学生创新大赛（互联网+）高教主赛道省级金奖  </li><li>&lt; 2025.07 &gt; 中国国际大学生创新大赛（互联网+）高教主赛道省级银奖  </li><li>&lt; 2024.05 &gt; 第三届全国大学生技术创新创业大赛省级一等奖  </li><li>&lt; 2024.09 &gt; 大学生创新创业训练计划项目省级立项  </li><li>&lt; 2025.06 &gt; 2025年(第18届)中国大学生计算机设计大赛物联网应用赛道省级一等奖  </li><li>&lt; 2025.06 &gt; 第十九届 CIMC“西门子杯”中国智能制造挑战赛自由探索赛道省级一等奖</li><li>&lt; 2025.06 &gt; 第十二届“大唐杯”全国大学生新一代信息通信技术大赛省级三等奖  </li><li>&lt; 2024.12 &gt; 2024年第十八届iCAN大学生创新创业大赛校级一等奖  </li><li>&lt; 2025.04 &gt; 第十五届全国大学生电子商务“创新、创意及创业”挑战赛校级一等奖</li><li>&lt; 2025.09 &gt; 全球校园人工智能算法精英大赛校级一等奖</li><li>&lt; 2026 ————&gt; 第十九届iCAN大学生创新创业大赛创新赛道 （暂未）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人简历 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人简历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>清茗山居——生态悠享乐园</title>
      <link href="/2025/08/01/tea/"/>
      <url>/2025/08/01/tea/</url>
      
        <content type="html"><![CDATA[<h1 id="一、执行总结"><a href="#一、执行总结" class="headerlink" title="一、执行总结"></a>一、执行总结</h1><p>&ensp;&ensp;&ensp;&ensp;本项目的目标是推动农业农村现代化和乡村振兴，通过有机茶叶和生态旅游的结合，打造一个可持续发展的生态农业产业，促进乡村经济的发展。本项目将充分利用当地的自然环境和人文资源，提高农产品的附加值，创造就业机会，推动农业产业结构调整和转型升级。有机茶叶及生态旅游结合的商业模式，具有较高的市场前景和发展潜力。</p><p>&ensp;&ensp;&ensp;&ensp;本项目将充分利用有机茶叶和生态旅游的优势，打造一个以有机茶叶种植、生产和销售为主体，以生态旅游为辅助的产业链，实现“茶产业+旅游业”的有机融合，推动乡村振兴和农业农村现代化。</p><p>&ensp;&ensp;&ensp;&ensp;公司将采取科学有效的多元化经营、选代升级战略、产业融合战略、人才战略、信息战略、安全战略和高绩效的生产、运营、发展等管理制度，打造一支高素质、创新型的具有领导力、协作能力、应变能力、沟通协调能力和资源共享能力的团队，实现项目的长期稳健发展。同时，公司将通过个人出资、银行借贷，风险投资、政府参股的多种融资方式，保证项目的资金流动和运营的稳定性。虽然项目存在一定的产品质量、竞争、政策法规、风投撤出等风险，但公司将采取建立严格质量监督制度、建立产品维护设施、挖掘发展自身产业特色、积极捕捉未来政策信息变化风向、及时调整经营方式、股份转让、股份回购、IPO上市等有效措施，规避风险，保证项目的顺利运营和发展。</p><h1 id="二、公司概况"><a href="#二、公司概况" class="headerlink" title="二、公司概况"></a>二、公司概况</h1><p>&ensp;&ensp;&ensp;&ensp;本公司名称为“阡陌茶旅有限责任公司”，注册资本为4000万元，采用认缴制，股东对所认缴的资本负法律责任。主营业务为有机茶叶种植、收购、加工、销售；农副产品收购、初加工、销售；茶叶及农产品的进出口贸易服务；生态旅游的开发和运营；绿化工程。主要发展“政府+公司+合作社+基地+农户”的产业模式。        </p><p>&ensp;&ensp;&ensp;&ensp;公司的总部位于西南、华南交界地区，管理部门设立董事会、监事会、股东会、战略发展部、公共及政府事务部、财经与审计部、内控与风险管理部、人力资源部、法务部、质量流程部、基础业务部共11个分支机构，其中基础业务部下辖有机茶叶产业园、农业合作社及茶旅文化园。设董事6名，监事3名，股东13名（含政府机构参股），员工人数为150人。其中政府持股51%，12名股东持股49%。</p><p>&ensp;&ensp;&ensp;&ensp;公司在治理层实行集体领导及同股不同权制，董事会具有最高决策权，设立轮值董事长。股东会是公司权力机构，对公司增资、利润分配、选举董事/监事等重大事项作出决策。 董事会是公司战略、经营管理和客户满意度的最高责任机构，承担带领公司前进的使命，行使公司战略与经营管理决策权，确保客户与股东的利益得到维护。公司董事会及董事会常务委员会由轮值董事长主持，轮值董事长在当值期间是公司最高领袖。监事会是公司的最高监督机构，代表股东行使监督权，其基本职权包括领袖管理、业务审视和战略前瞻。</p><p>&ensp;&ensp;&ensp;&ensp;公司预计建立加工生产线5条，建设加工厂房4000余平方米，采购加工机械80套，聘请资深技术人员80人，预计全年产量可达100万斤以上，实现营业收入2000万元以上，创利税300万元以上，增加农民纯收入1000万元。公司预计签订有机茶基地面积6000余亩;建设茶旅文化园面积6500余亩（含有机茶基地）。</p><h1 id="三、项目概述"><a href="#三、项目概述" class="headerlink" title="三、项目概述"></a>三、项目概述</h1><p>&ensp;&ensp;&ensp;&ensp;本项目的主要业务包括有机茶叶种植、加工和销售，以及生态旅游的开发和运营。公司将采用有机种植技术和绿色加工工艺，生产出高品质的有机茶叶产品，按照“大众做有机”的发展思路，坚持有机化发展战略，大力实施测土配方、有机肥替代化肥、有机茶认证等工程，抓好“第一车间”改造，确保源头安全。同时会完善公司有机产品标准体系，加快制定与国际接轨的茶产品质量可追溯体系和茶叶生产技术质量标准化体系，规范生产过程，提升茶叶精深加工水平。 按照“小众走高端”发展思路，开展古茶树种质资源保护、培育和利用，加大古茶树资源保护力度，建立健全茶产品质量追溯体系。</p><p>&ensp;&ensp;&ensp;&ensp;同时，本项目将开发生态旅游资源，包括农家乐、民宿、景区等，为游客提供独特的生态旅游体验。本项目将充分利用当地的自然环境和人文资源，打造一个集茶文化、生态旅游、休闲度假、农业观光为一体的有机茶叶生态产业，在乡村振兴和农业农村现代化的政策指导下，以及政府支持的政策措施，结合当地资源优势，推动有机茶叶及生态旅游产业的发展，为乡村振兴和农业农村现代化提供有力支持。  </p><p>&ensp;&ensp;&ensp;&ensp;公司依托中共中央国务院、省、市、县、乡的乡村振兴及农业扶持政策，积极响应《关于全面深化农村改革加快推进农业现代化的若干意见》《关于创新体制机制推进农业绿色发展的意见》《中共中央 国务院关于做好2023年全面推进乡村振兴重点工作的意见》等中共中央办公厅 国务院办公厅印发的文件，紧紧围绕实施乡村振兴战略，以推进农业供给侧结构性改革为主线，坚持质量兴农、绿色兴农、品牌强农，大力推进茶叶绿色发展和标准化生产，进行乡村振兴地区农业绿色开发。</p><p>&ensp;&ensp;&ensp;&ensp;公司将立足地区资源禀赋，因地制宜选择有资源优势的茶叶产业和旅游产业结合，打造生态旅游及特色有机茶叶结合产业，成立专业合作社，发展“政府+公司+合作社+基地+农户”的产业模式，把贫困地区生态环境优势转化为经济优势，大力发展绿色、有机和地理标志优质特色农产品，创建区域品牌；推进一二三产融合发展，发挥生态资源优势，积极探索“乡村旅游+茶叶产业+休闲农业”的发展方式，大力推动茶树种植、茶叶加工、观光旅游等一二三产协同发展，带动依托于城市周边偏僻区域的商郊商业体，打造农旅融合、茶旅融合、文旅融合，并在企业范围内逐步建立现代化农业生态模式。公司将与政府共同投身乡村建设，将大力建设现代农业产业园，一、二、三产业融合发展先导区全国休闲农业和乡村振兴旅游示范创建项目，农商互联网，国家农村产业融合发展示范园，生态区域循环农业项目。</p><p><img src="/img/tea/1.png" alt=""> </p><h1 id="四、市场分析"><a href="#四、市场分析" class="headerlink" title="四、市场分析"></a>四、市场分析</h1><p>&ensp;&ensp;&ensp;&ensp;随着我国经济社会不断发展，居民生活质量逐渐提升，社会大众文旅消费也呈现出繁荣景象。文化旅游产业蓬勃兴起，极大提升优化我国第三产业发展布局，高效实现经济、生态与社会效益协同发展。现基于乡村振兴战略，通过对我国茶文化旅游发展现状进行剖析，发现存在茶文化旅游形式单一固定、茶文化旅游缺乏文化内涵和茶文化旅游生态特色不足等瓶颈，提出加强茶文化旅游品牌塑造；拓展茶文化旅游特色体验；培育茶文化旅游专业人才等发展策略，以促进乡村振兴背景下我国茶文化旅游高质量发展，为传承千年的中华茶文化注入新时代商业文化意涵。</p><h2 id="4-1-发展历程"><a href="#4-1-发展历程" class="headerlink" title="4.1 发展历程"></a>4.1 发展历程</h2><p>&ensp;&ensp;&ensp;&ensp;“三农”问题是关系国计民生的根本性问题，重农固本，是安民之基。2012年12月，在中央经济工作会议上发表重要讲话，突出强调：“要把解决好三农问题作为全党工作重中之重，必须长期坚持、毫不动摇。”党的报告指出，农业问题是关系国计民生的根本性问题，必须始终把解决好“三农”问题作为全党工作的重中之重，实施乡村振兴战略。2020年中央一号文件提出，今年是全面建成小康社会目标实现之年，是全面打赢脱贫攻坚战收官之年。完成上述两大目标任务，脱贫攻坚最后堡垒必须攻克，全面小康“三农”领域突出短板必须补上。全党务必深刻认识做好2020年“三农”工作的特殊重要性，毫不松懈，持续加力，坚决夺取第一个百年奋斗目标的全面胜利。通过多次考察调研，提出要坚持农业农村优先发展，实施乡村振兴战略，充分体现党中央对于我国“三农”工作高度重视，深入推动我国“三农”发展迈向新时代。中国是茶的故乡，至今已有四千年的发展历史，种茶、饮茶行为在古代中国社会十分普遍。唐宋以来，人们把茶作为日常生活的重要事物。随着时间更迭与文化孕育，逐渐形成茶礼、茶艺等社会道德风尚，饱含丰富的精神意境。与此同时，茶文化还与我国古典文学与市井文化密切相关，百姓通过社会参与对茶文化进行生产建构。根据《全唐诗》记载，四百余首茶诗被收录在册并被后世广为流传，充分印证中华茶文化具有悠久历史与深厚底蕴。</p><h2 id="4-2-概念与发展意义"><a href="#4-2-概念与发展意义" class="headerlink" title="4.2 概念与发展意义"></a>4.2 概念与发展意义</h2><h3 id="4-2-1-概念"><a href="#4-2-1-概念" class="headerlink" title="4.2.1 概念"></a>4.2.1 概念</h3><p>&ensp;&ensp;&ensp;&ensp;中华茶叶历史源远流长，历经千年种植生产，形成了涵盖茶艺、茶道、茶风俗、茶建筑等具有丰富内涵与高品位格调的茶文化资源。中华茶文化融合多元文化思想，兼具经济、社会、宗教、民俗等意识形态，具有极大的传播力与影响力，是中华优秀传统文化的重要组成部分。中华茶文化以其悠久的历史、深厚的文化、丰富的情趣，吸引着海内外诸多游客，为我国茶文化旅游发展奠定丰富的物质文化资源基础。茶文化旅游是现代茶业与旅游业交互融合形成的一种新文化生活方式，通过统筹茶叶与旅游资源，以文化旅游形式介绍茶的发展历史，传播茶的艺术风俗，将茶叶生态环境、茶生产过程与茶文化意涵有机整合，综合开发利用，以形成特色文化氛围与旅游产品。茶文化旅游是物质和精神世界的双重享受，也是日常生活世界的全面更新，满足社会大众休闲需求，带来精神愉悦与思想升华，让人们在茶香中感悟人际和谐与世间大美。</p><h3 id="4-2-2-发展意义"><a href="#4-2-2-发展意义" class="headerlink" title="4.2.2 发展意义"></a>4.2.2 发展意义</h3><p>&ensp;&ensp;&ensp;&ensp;1）优化茶业经济收益稳步增长。当今社会，茶叶市场竞争异常激烈，主要茶叶产区已经通过多元宣传手段推广茶叶。在品牌建设过程中，推广茶叶只是基本环节，核心仍是树立社会大众对茶的忠诚与热爱。茶文化旅游发展可以为茶叶生产企业提供持续性客源，进而带来直接经济效益，这是品牌营销的重要方式。茶文化旅游发展也可以极大促进农副产品销售，通过举办“茶家乐”，可以充分促进水果、蔬菜、家禽、鱼、肉、蛋等地方特色农产品销售。设立茶文化体验馆、茶文化主题餐厅、茶文化民宿，可以丰富第三产业业态，改善服务设施，增强接待能力，实现绿色收入增长。发展茶文化旅游，可以创造更多就业机会，通过农村剩余劳动力利用，实现茶叶产业与旅游产业有机融合。乡村振兴背景下，茶文化旅游将成为国家经济社会新的经济增长点和农村经济稳步增长的新兴动力。</p><p>&ensp;&ensp;&ensp;&ensp;2）促进茶业生态可持续健康发展。茶叶种植有利于丘陵和山地气候调节与水土保持，具有极高的生物学意义和生态价值。从种植到采摘，从生产到饮用，茶完全符合“自然”的社会属性。指出：“我们既要绿水青山，也要金山银山，绿水青山就是金山银山。”生态环境是旅游业健康可持续发展的基础，旅游业被称为“无烟产业”，茶文化旅游低碳特点符合国家“五位一体”整体布局。通过大力推广茶文化旅游，可以引导公众树立低碳消费观念，更加朝着现代、合理、科学和环保的方向发展。让茶叶产区居民参与旅游资源开发与项目规划实施，可以有效提升茶叶产区居民环保意识，使当地居民更加积极参与生态环境保护，从而促进居民对自然资源高度重视，促进茶文化旅游可持续健康发展。</p><p>&ensp;&ensp;&ensp;&ensp;3）提升茶文化旅游产业整体形象。茶文化与旅游紧密融合是新时展农村优质特色产业，提升文化旅游实力的双赢举措。茶文化旅游直接面向市场，具有重要的社会文化功能。因此，在促进社会平稳运行基础上，必须着力解决发展不平衡、发展不足等问题，着力提升发展质量和效率，更好地满足人民在经济、政治、文化、社会和生态方面日益增长的需求。新时代茶文化旅游发展，可以进一步弘扬具有千年历史的中华茶文化，架起自然生态与公众之间的桥梁，满足人们对美好生活的向往，让更多的人认识茶、了解茶、爱上茶，拓展新时代健康生活方式，实现人与自然、人与社会和谐共处。</p><h2 id="4-3-中国茶产业分析"><a href="#4-3-中国茶产业分析" class="headerlink" title="4.3 中国茶产业分析"></a>4.3 中国茶产业分析</h2><h3 id="4-3-1-我国茶产业产能规模"><a href="#4-3-1-我国茶产业产能规模" class="headerlink" title="4.3.1 我国茶产业产能规模"></a>4.3.1 我国茶产业产能规模</h3><p><img src="/img/tea/2.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;近年来，我国茶园面积持续扩大。目前全国主要形成江北、江南、西南、华南四个茶叶主产区。2021年，全国茶园总面积为4896.09万亩，其中主要产茶省中茶园面积最大的省份为贵州和云南，面积前十的省份分别是：贵州、云南、四川、湖北、福建、浙江、安徽、湖南、陕西、河南。而根据“中华人民共和国2020年国民经济和社会发展统计公报”显示，2020年全国茶叶产量为297万吨。</p><h3 id="4-3-2-我国茶产业质量分析"><a href="#4-3-2-我国茶产业质量分析" class="headerlink" title="4.3.2 我国茶产业质量分析"></a>4.3.2 我国茶产业质量分析</h3><p>&ensp;&ensp;&ensp;&ensp;据国家市场监管总局公布的食品安全监督抽检情况分析显示，2020年食品安全监督抽检合格率为98.58%，2021年上半年茶叶及相关制品安全监督抽检合格率为99.35%。目前茶叶仍存在农药残留超标、超量使用食品添加剂等问题。</p><h3 id="4-3-3-我国茶产业链结构"><a href="#4-3-3-我国茶产业链结构" class="headerlink" title="4.3.3 我国茶产业链结构"></a>4.3.3 我国茶产业链结构</h3><p>&ensp;&ensp;&ensp;&ensp;中国茶叶行业基本形成了完整的产业链，上游种植采摘，上游行业的发展直接影响到茶叶产品原材料的供应数量与品质、中游生产加工、下游是终端消费者与茶叶行业深加工以及向后延伸的市场。</p><p>&ensp;&ensp;&ensp;&ensp;2021年，中国茶叶的内销总量为230.19万吨，同比增长10.03万吨，增幅约4.56%；内销总额为3120亿元，同比增长231亿元，增幅约8.0%；内销均价为135.5元/千克，同比增长3.3%。</p><h2 id="4-4-产业存在问题分析"><a href="#4-4-产业存在问题分析" class="headerlink" title="4.4 产业存在问题分析"></a>4.4 产业存在问题分析</h2><h3 id="4-4-1-茶文化旅游形式单一固定。"><a href="#4-4-1-茶文化旅游形式单一固定。" class="headerlink" title="4.4.1 茶文化旅游形式单一固定。"></a>4.4.1 茶文化旅游形式单一固定。</h3><p>&ensp;&ensp;&ensp;&ensp;中国的茶文化旅游尚处于发展初期，许多茶文化旅游产品仅停留在塑造企业形象和具体应用水平上，没有深入分析中华茶文化具体内涵。茶文化旅游主要是短期游览，游客并没有对中华茶文化产生深刻认识。乡村振兴背景下茶文化旅游发展需要尝试拓展体验式文旅产业形态，让游客与茶农一起采摘和煎茶，培养综合型茶艺人才，提高茶文化旅游服务质量，满足游客对中华茶文化优质体验需求。</p><h3 id="4-4-2-茶文化旅游缺乏文化内涵"><a href="#4-4-2-茶文化旅游缺乏文化内涵" class="headerlink" title="4.4.2 茶文化旅游缺乏文化内涵"></a>4.4.2 茶文化旅游缺乏文化内涵</h3><p>&ensp;&ensp;&ensp;&ensp;丰富的文化内涵是提升旅游业人性与品牌价值的核心要素。乡村振兴背景下茶文化旅游发展需要深入挖掘文化内涵，不断为提升旅游产品文化品位做出真正贡献。中华茶文化源远流长，具有浓厚的地域和民族特色，为我国茶文化旅游发展奠定了一定基础。然而目前许多人只是在物质层面对茶叶进行消费，而忽视了茶叶独特的文化内涵与精神功能，茶文化旅游品牌形象不够清晰，文旅融合能力亟待加强。</p><h3 id="4-4-3-茶文化旅游生态特色不足"><a href="#4-4-3-茶文化旅游生态特色不足" class="headerlink" title="4.4.3 茶文化旅游生态特色不足"></a>4.4.3 茶文化旅游生态特色不足</h3><p>&ensp;&ensp;&ensp;&ensp;中华茶文化内涵丰富，但茶文化旅游特色不够清晰，茶文化活动形式仅限于采茶、购茶与品茶，这与悠久丰富的中华茶文化历史渊源极不相称。与此同时，生态环境也是茶文化旅游高质量发展的重要组成部分。一些地区只关心自己的当前利益，缺乏科学合理规划，盲目进行投资发展，造成自然环境人为破坏。由于对茶树自然属性不够了解，互联网人工智能与生态循环开发技术应用不足，进而导致温室效应，碳排放激增，严重影响茶树品质。因此，基于乡村振兴时代背景，政府和企业要深刻把握国家“五位一体”总体布局和“四个全面”战略布局，推动文化旅游和绿色生态健康可持续发展，树立尊重自然、适应自然、保护自然的生态文明理念。大力发展绿色茶文化，加快生态文明体制改革，促进生态文明产业发展，建设美丽中国。</p><h2 id="4-5-公司发展策略分析"><a href="#4-5-公司发展策略分析" class="headerlink" title="4.5 公司发展策略分析"></a>4.5 公司发展策略分析</h2><h3 id="4-5-1-加强茶文化旅游品牌塑造。"><a href="#4-5-1-加强茶文化旅游品牌塑造。" class="headerlink" title="4.5.1 加强茶文化旅游品牌塑造。"></a>4.5.1 加强茶文化旅游品牌塑造。</h3><p>&ensp;&ensp;&ensp;&ensp;要将茶文化真正应用到生态旅游中，必须在发展过程中高度重视旅游品牌的塑造，结合地方实际情况，打造特色鲜明的茶文化旅游主题，给游客留下深刻的印象和记忆。乡村振兴背景下文旅融合高质量发展，必须充分认识茶文化旅游的生态性与社会性，并在发展过程中积极打造特色地方旅游品牌，有效整合文化资源与旅游资源，领悟中华茶文化，创新旅游发展业态，丰富茶文化内涵，使文化意境在生态旅游中得到充分发挥。与此同时，发展茶文化生态旅游还必须深入挖掘茶叶历史渊源与文化脉络，通过文化内涵吸引游客，有效提升中华茶文化传播力。中华茶文化是新时代茶文化旅游发展独具的特色优势，将其有效挖掘，形成品牌效应，能够有效促进乡村振兴，推动新时代生态旅游健康发展。</p><h3 id="4-5-2-拓展茶文化旅游"><a href="#4-5-2-拓展茶文化旅游" class="headerlink" title="4.5.2 拓展茶文化旅游"></a>4.5.2 拓展茶文化旅游</h3><p>&ensp;&ensp;&ensp;&ensp;特色体验体验是创造情感和传递信息的重要方式，也是提高游客满意度和再次访问意愿的重要因素。旅行者可以亲身体验茶叶种植过程并分享旅行感悟，与出行目的地产生情感联系，从而在特定地理空间中形成情感依恋。近年来，国内开始出现特色茶文化旅游度假区，并受到游客的极大青睐。发展特色茶文化旅游，企业首先要思考如何对原有茶园进行改造升级，融入现代生活元素，运用智能化科技手段，使茶园由生产基地升级为游览胜地。目前，基于现代茶文化发展趋势，企业应当拓展茶文化发展业态，创新茶叶产品与茶文化体验服务。在此基础上，要深刻把握中华茶文化传统意涵与社会流行元素，让文化元素带动茶叶消费，形成产业集群与品牌效应，丰富文创型茶产品种类，构建现代茶文化生活方式，努力提升乡村振兴背景下中华茶文化发展动力。</p><h3 id="4-5-3-培育茶文化旅游专业人才"><a href="#4-5-3-培育茶文化旅游专业人才" class="headerlink" title="4.5.3 培育茶文化旅游专业人才"></a>4.5.3 培育茶文化旅游专业人才</h3><p>&ensp;&ensp;&ensp;&ensp;茶文化关注人的精神世界培育与建构，在高等教育人才段，重点挖掘研究中华茶文化发展历史人才，深入挖掘培养新时代茶文化精神意涵人才，基于乡村振兴背景，培育德才兼备、能力兼顾的高水平旅游开发人才，充分发挥中华茶文化教化功能，用心传递、以身示范，将中华茶文化深入全面向社会传递，促进公司及社会对中华茶文化理解认知，为丰富公司中华茶文化时代意涵与价值作出专业贡献。</p><h1 id="五、公司战略"><a href="#五、公司战略" class="headerlink" title="五、公司战略"></a>五、公司战略</h1><p>&ensp;&ensp;&ensp;&ensp;本公司的战略是以有机茶叶种植、加工和销售为主业，同时开发生态旅游资源，实现多元化经营。本公司将充分利用当地的自然环境和人文资源，打造一个集茶文化、生态旅游、休闲度假、农业观光为一体的有机茶叶生态产业。</p><h2 id="5-1-战略前景"><a href="#5-1-战略前景" class="headerlink" title="5.1 战略前景"></a>5.1 战略前景</h2><p>&ensp;&ensp;&ensp;&ensp;根据相关调查数据显示，全球有机消费市场以每年20%-30%的速度增长；中国的有机食品消费市场也正以每年25%的速度增长。纵观国际国内有机茶已经成为茶行业的发展趋势且中国茶行业刚刚进入4.0大健康时代。而近年来，中国旅游业适应市场多样化趋势与一、二、三产业融合发展，不断催生新产品、新业态，拓展旅游产业面，拉长旅游产业链，形成现代旅游产业集群。中国的旅游产业经过30多年的发展，已经发展成为一个多方位、多层面、多维度的综合性集群化现代产业体系。当前，旅游业爆发式的发展时机已经初步成熟。</p><p>&ensp;&ensp;&ensp;&ensp;由此可得有机茶叶和生态旅游是两个快速发展的产业。有机茶叶的市场需求不断增加，消费者对于健康和环保意识的提高，使得有机茶叶成为市场上的热门产品。同时，生态旅游也得到了越来越多的关注和支持，成为人们休闲度假的首选。茶旅融合产业未来可期。</p><h2 id="5-2-基本发展战略"><a href="#5-2-基本发展战略" class="headerlink" title="5.2 基本发展战略"></a>5.2 基本发展战略</h2><p>&ensp;&ensp;&ensp;&ensp;有机茶叶及生态旅游产业园应按以下要求制订与其规模相适应的中长期发展战略:</p><p>&ensp;&ensp;&ensp;&ensp;1) 围绕“乡村旅游+茶叶产业+休闲农业”定位，坚持可持续、包容性、高质量的发展原则;</p><p>&ensp;&ensp;&ensp;&ensp;2) 立足地区资源禀赋，因地制宜选择有资源优势的茶叶产业和旅游产业结合，打造生态旅游及特色有机茶叶结合产业。综合考虑特色资源、环境保护、经济发展、社会进步、茶旅文化、质量建设、健康与安全、审美等各种因素:坚持乡村振兴及农业农村现代化，推进智慧旅游建设，促进和谐可持续发展。</p><p>&ensp;&ensp;&ensp;&ensp;3) 建设项目开发类型.规模与选址等须符合总体规划，通过项目建设可行性研究和环境、社会考察。</p><p>&ensp;&ensp;&ensp;&ensp;4) 坚持“茶旅融合”主题，形成集旅游集散、文化体验、购物娱乐、休闲度假、山水游憩于一体的旅游综合区。考虑项目运营后的经济活动给当地社区带来的长久福祉(包括就业、收入、教育等),并积极带动当地基础设施建设，实现对当地社会和经济利益最大化。</p><h2 id="5-3-迭代升级战略"><a href="#5-3-迭代升级战略" class="headerlink" title="5.3 迭代升级战略"></a>5.3 迭代升级战略</h2><p>&ensp;&ensp;&ensp;&ensp;公司应在注重产品的迭代升级，管理与服务的升级的基础上，改变传统模式，强化流量思维、粉丝思维、平台建设、网红思维等现代新型化营运，注重跨界融合，开发多元化的收入和盈利渠道，实现可持续发展。</p><h2 id="5-4-产业融合战略"><a href="#5-4-产业融合战略" class="headerlink" title="5.4 产业融合战略"></a>5.4 产业融合战略</h2><p>&ensp;&ensp;&ensp;&ensp;根植“泛资源体系”对接发展诉求、依托地方资源及产业基础，构建包括文旅、康旅、农旅、体旅、城旅、工旅 等产业融合发展体系，实现经济效益最大化，支撑旅游区可持续发展。主要是利用茶叶、农业养殖优势，开展研学，亲身体验等活动，做强第一产业融合:围绕有机茶等特色产品，匠心精耕，做精第二产业融合:植入区域文化，实现服务精细化，做细第三产业融合。</p><h2 id="5-5-竞争战略"><a href="#5-5-竞争战略" class="headerlink" title="5.5 竞争战略"></a>5.5 竞争战略</h2><p>&ensp;&ensp;&ensp;&ensp;1) 应开发受季节性波动影响较小的旅游产品，采取淡季促销等方式,增加非旺季旅游产品竞争力,降低旅游季节性波动:根据游客需求与市场变化,创新产品类型。丰富产品供给:挖掘本地特产的资源价值，开 发与推广地方特色产品。</p><p>&ensp;&ensp;&ensp;&ensp;2) 充分体现生态环境质量、整体休闲氛围、新农村建设、品牌形象及市场口碑等要素，突出产业区的核心吸引物的打造和品牌培育，按照景区理念和要求规划建设整个区域，形成“城在景中、景在城中”的旅游新格局， 实现旅游吸引物全域覆盖。</p><p>&ensp;&ensp;&ensp;&ensp;3) 统筹茶叶与旅游资源，以文化旅游形式介绍茶的发展历史，传播茶的艺术风俗，将茶叶生态环境、茶生产过程与茶文化意涵有机整合，综合开发利用，以形成特色文化氛围与旅游产品。重点打造有机茶叶品牌。</p><h2 id="5-6-人才战略"><a href="#5-6-人才战略" class="headerlink" title="5.6 人才战略"></a>5.6 <a href="https://baike.baidu.com/item/人才战略/4951427?fromModule=lemma_inlink">人才战略</a></h2><p>&ensp;&ensp;&ensp;&ensp;培育茶文化旅游专业人才。茶文化关注人的精神世界培育与建构，在高等教育人才段，重点挖掘研究中华茶文化发展历史人才，深入挖掘培养新时代茶文化精神意涵人才，基于乡村振兴背景，培育德才兼备、能力兼顾的高水平旅游开发人才，充分发挥中华茶文化教化功能，用心传递、以身示范，将中华茶文化深入全面向社会传递，促进公司及社会对中华茶文化理解认知，为丰富公司中华茶文化时代意涵与社会价值作出专业贡献。</p><h2 id="5-7-信息战略"><a href="#5-7-信息战略" class="headerlink" title="5.7 信息战略"></a>5.7 信息战略</h2><p>&ensp;&ensp;&ensp;&ensp;一、公司应采用现代信息技术，加强包括资源、环境、经济、社会、文化、旅游信息收集。统计方法包括市场调查、分析、汇总、问卷调查、抽样调查等方法。包括但是不限于以下资料和数据:</p><p>&ensp;&ensp;&ensp;&ensp;1.游客消费支出、不同门类收入、旅游人数;</p><p>&ensp;&ensp;&ensp;&ensp;2.空气、水、土壤、噪声等指标监测数据;</p><p>&ensp;&ensp;&ensp;&ensp;3.能源消耗及来源、水资源消耗及来源、室气体排放量及源头;</p><p>&ensp;&ensp;&ensp;&ensp;4.游客数量、游客构成及客源数据；</p><p>&ensp;&ensp;&ensp;&ensp;二、应加强对收信息的分析，诊断和评估，应基于信息应用，提供营销数据分析、消费和客流趋势分析和预测等，为景区品牌推广策略制定、活动策划、危机公关、新产品研发提供数据支撑。提高旅游区管实现可持续健康发展。</p><p>&ensp;&ensp;&ensp;&ensp;三、加强信息运用和维护，确保信息真实性和及时性，加强信息安全管理。</p><h2 id="5-8-安全战略"><a href="#5-8-安全战略" class="headerlink" title="5.8 安全战略"></a>5.8 安全战略</h2><h3 id="5-8-1-医疗安全"><a href="#5-8-1-医疗安全" class="headerlink" title="5.8.1 医疗安全"></a>5.8.1 医疗安全</h3><p>&ensp;&ensp;&ensp;&ensp;公司应与当地医疗机构建立救助合作关系，建立紧急救援机制，通过全景图、导览图、宣传册等向游客公示救援电话，确保游客能及时得到求助。</p><h3 id="5-8-2交通安全"><a href="#5-8-2交通安全" class="headerlink" title="5.8.2交通安全"></a>5.8.2交通安全</h3><p>&ensp;&ensp;&ensp;&ensp;保持道路交通标志和防护设施完好:旅游区自备的非公路用旅游观光车应证照齐全，安全检验合格，定期维护检查，满足游客运输和行程要求;驾驶员应具备相关资格，确保安全行车。</p><h3 id="5-8-3-游览安全"><a href="#5-8-3-游览安全" class="headerlink" title="5.8.3 游览安全"></a>5.8.3 游览安全</h3><p>&ensp;&ensp;&ensp;&ensp;景区危险区域或不许可游客进入地段、场所应设置醒目警示标志或禁止进入标志，开放夜游的区域还应设置夜明标志和设施，并配备齐全、有效防护设施。</p><h3 id="5-8-4-气象安全管理"><a href="#5-8-4-气象安全管理" class="headerlink" title="5.8.4 气象安全管理"></a>5.8.4 气象安全管理</h3><p>&ensp;&ensp;&ensp;&ensp;旅游区应有气象灾害应急预案，宜利用电子显示屏、手机 APP、微信公众号等动态发布生态气候监测数据，提供气象预警信息发布。</p><h3 id="5-8-5-防汛安全管理"><a href="#5-8-5-防汛安全管理" class="headerlink" title="5.8.5 防汛安全管理"></a>5.8.5 防汛安全管理</h3><p>&ensp;&ensp;&ensp;&ensp;建立防洪工程，制定有针对性的汛期安全工作方案和汛期安全应急预案:应划定量点防汛区域，并设置安全警示标识:建立上下游的水情沟通协 调预警机制:加强雨季安全隐患排查和汛期巡查，重点对河流、山体危岩、危石、步道及护栏等区域进行检查。</p><h1 id="六、营销策略"><a href="#六、营销策略" class="headerlink" title="六、营销策略"></a>六、营销策略</h1><h2 id="6-1-营销市场分析"><a href="#6-1-营销市场分析" class="headerlink" title="6.1 营销市场分析"></a>6.1 营销市场分析</h2><p>&ensp;&ensp;&ensp;&ensp;中国是茶叶原产地和第一生产、消费大国，有上千年的饮茶历史，茶叶已经融入到人们的生活中。喝茶已成为多数中国人的一种生活习惯，茶已成为社会生活中不可缺少的健康饮品和精神饮品，而且，随着人们健康消费观念的普及以及环境保护意识的提高，有机茶正在被越来越人接受、喜爱和追求。</p><p>&ensp;&ensp;&ensp;&ensp;茶市场竞争激烈、种类众多，但目前产业仍有缺陷。一是茶叶生产的标准体系和卫生安全体系建设滞后;二是茶类丰富，产量大，但品牌不大，例如：大众知道有普洱茶，却不了解其品牌。整个普洱茶市场的品牌多却发展乏力，即使在网络上销量好的大益、新益、老仓等品牌的普洱茶其知名度也仅限于网络。</p><p>&ensp;&ensp;&ensp;&ensp;现在的国内茶叶市场暗流涌动，众多茶叶企业亟待破茧而出。但茶叶行业目前多、乱、弱的特点导致了整个行业的无序竞争和低层次竞争，消费者购买缺乏依据和方向。可以说，国内的茶产业是“有名茶，无”。因此，通过生态旅游以及网络营销来推广我们的有机茶叶非常重要。</p><h2 id="6-2-营销产品分析"><a href="#6-2-营销产品分析" class="headerlink" title="6.2 营销产品分析"></a>6.2 营销产品分析</h2><p>&ensp;&ensp;&ensp;&ensp;公司产品为有机茶叶，对于传统的普通茶叶来说，普通茶叶被允许使用农药，极易产生农残。有些茶农会施用植物生长调节剂等激素，以达到高产的效果；为使茶叶增香，也会添加香精，更甚者会采用二次茶进行重新翻炒后添加香精，并且很多普通茶叶是散货散卖，产地来源不明且不新鲜，无生产保证，也没有国家认证防伪标签和任何相关检测。</p><p>&ensp;&ensp;&ensp;&ensp;而本公司的有机茶叶茶叶种植过程严禁施用任何农药，均以物理除虫方式去除有害虫；采用有机肥，如花生麸、豆粕等，种植过程严禁施用化肥；制作过程不加任何添加剂，保证茶的品质达到最原始状态；有机认证将通过国家农业部21项检测，同时有机茶的外包装上均会贴有防伪标签，刮开涂层可在中国有机食品系统查询，对购买者的食品安全及健康都有保障。</p><p>&ensp;&ensp;&ensp;&ensp;有机茶叶对人体也有很多好处，首先，它能降低胆固醇水平，促进心血管健康。其次，茶叶中的多酚类物质能帮助抗氧化，保护我们的肌肤和机体免受环境污染的影响。此外，茶叶中含有大量的维生素和微量元素，可以增强调节免疫力。最后，茶叶中的咖啡因能帮助改善精神状态，提升注意力和学习能力。</p><h2 id="6-3-营销客户定位"><a href="#6-3-营销客户定位" class="headerlink" title="6.3 营销客户定位"></a>6.3 营销客户定位</h2><p>&ensp;&ensp;&ensp;&ensp;从消费习惯来看，随着消费群体进一步细分，多元化的消费将成为茶叶市场的新趋势。茶叶天然、健康的特点以及对茶文化的推广，使茶叶为越来越多的人所接受，茶叶的主要消费人群也从中老年男性为主向各类人群扩散。不同类别的消费者对茶叶的消费需求也存在较大差异，由此衍生出多元化的新需求、新模式。就目前的茶叶市场来说，茶叶消费量不断增加，消费人群也在不断扩大，逐渐由中老年人向年轻人过渡，成为推动茶叶市场发展的主要力量，市场数据显示年龄介于25-45岁之间、收入较高且注重健康的白领消费者是有机茶叶消费者的主要群体。消费金额集中在100到200元之间，其中选择送礼的客户消费金额在200到400元之间。</p><p>&ensp;&ensp;&ensp;&ensp;通过网络对生态旅游热度，以及其受众群体的消费习惯和偏好数据分析，结果显示：年轻家庭、收入较高的都市白领人群以及有时间和能力探索大自然的游客组成了生态旅游的主要受众群体。总的来说，有机茶叶和生态旅游的受众群体及客户定位为收入较高且注重健康的白领消费者、年轻化家庭以及有时间和能力探索大自然的游客。</p><p><img src="/img/tea/4.png" alt=""></p><p><img src="/img/tea/5.png" alt=""></p><h2 id="6-4-营销渠道分析"><a href="#6-4-营销渠道分析" class="headerlink" title="6.4 营销渠道分析"></a>6.4 营销渠道分析</h2><p>&ensp;&ensp;&ensp;&ensp;公司将打造一个生态旅游与有机茶一体的完整链，以有机茶叶及生态旅游结合的商业模式，建设生态旅游景点，提供游客观赏有机茶叶种植的景观，提供有机茶叶采摘体验，提供有机茶叶知识培训，提供有机茶叶产品购买等服务，吸引游客前来观光游览，推动当地有机茶叶及生态旅游产业的发展，带动区域产业带消费，提升乡村经济发展水平，为当地乡村振兴和农业农村现代化提供有力支持。同时也会给周边的农户提供种植技术中出高质量茶叶，得到高回报的收入，农户也可以利用收入投入到旅游业的发展中。</p><p><img src="/img/tea/6.png" alt=""></p><h2 id="6-5-营销策略分析"><a href="#6-5-营销策略分析" class="headerlink" title="6.5 营销策略分析"></a>6.5 营销策略分析</h2><p>&ensp;&ensp;&ensp;&ensp;公司围绕有机茶叶和生态旅游两大产业，制定了一套营销策略。</p><p>&ensp;&ensp;&ensp;&ensp;1.重点推广有机茶叶：加强对有机茶叶的宣传，向消费者传达有机茶叶的独特价值；策划有机茶叶活动，提升消费者对有机茶叶的关注度；开展有机茶叶网络营销，利用社交媒体进行推广宣传。对于茶叶的推广宣传，营销策略如下：</p><p>&ensp;&ensp;&ensp;&ensp;1）开展网上宣传活动，在包括微信、微博、百度贴吧等多个社交媒体上发布宣传文章，并对相关进行流量分析，可以多找一些抖音上有流量的博主宣传推销我们的产品，开展投放广告活动，进行市场拓展。</p><p>&ensp;&ensp;&ensp;&ensp;2）参加线下的有机茶叶展销会，开展茶叶的品鉴活动，吸引更多的潜在消费者来参加，提升茶叶的知名度。 召开线上研讨会，向消费者充分了解有机茶叶的各项优势，增加对有机茶叶的认知，同时开展线上线下同步营销。</p><p>&ensp;&ensp;&ensp;&ensp;3）进行价格定位分析，根据市场上不同层次的消费者所面临的问题，合理定位产品价格，以吸引到更多的消费者，为消费者提供多样化和个性化的选择。</p><p>&ensp;&ensp;&ensp;&ensp;4）利用各种优惠措施将茶叶推广开去，比如推出折扣优惠如“买一送一”、送赠品等形式，以吸引更多的消费者，提升销量，拓展新用户群体，扩大客户群。 同时，为生态旅游组织者提供高效的营销活动方案，提升其订单量。</p><p>&ensp;&ensp;&ensp;&ensp;5）门店推广活动：我们在各大超市杂货店内摆放有机茶叶，并在店内派发宣传单、发放小样，促进有机茶叶的消费。 </p><p>&ensp;&ensp;&ensp;&ensp;6）专业网络推广：我们还运用SEO技术，对有机茶叶进行专业网络推广，提升其在搜索引擎中的曝光率。</p><p>我们将采取多种营销措施，结合有机茶叶和生态旅游的优点，扩大市场份额，实现双倍效益。</p><p>&ensp;&ensp;&ensp;&ensp;2.提升生态旅游业务：</p><p>&ensp;&ensp;&ensp;&ensp;1）不断开发出新的生态旅游路线，把消费者带到更多美丽的自然景观中游玩，在旅游路线旁建造茶室，以便游客休息或者喝茶赏景；</p><p>&ensp;&ensp;&ensp;&ensp;2）丰富生态旅游体验，提供更好的休闲娱乐活动，如提供游客自行茶园采茶服务；对生态旅游地区进行更多的宣传，吸引更多游客前往参观体验。</p><p>&ensp;&ensp;&ensp;&ensp;3)与政府部门合作，制定合理的旅游政策，促进游客对生态旅游的关注。同时结合生态旅游，以支持当地农民和旅游资源，提升消费者体验，促进城乡之间的联动让游客在旅行中更加深入的感受有机茶叶的价值，从而形成一种全新的健康旅游方式。</p><p>&ensp;&ensp;&ensp;&ensp;通过上述营销策略，我们期望能够提升有机茶叶和生态旅游的曝光率，吸引更多消费者来体验健康有机的生活方式，其不仅促进了茶叶和生态旅游的营销，提升了其市场份额，也增强了市场知名度，为企业发展起到了积极的推动作用。</p><h1 id="七、经营管理"><a href="#七、经营管理" class="headerlink" title="七、经营管理"></a>七、经营管理</h1><p>&ensp;&ensp;&ensp;&ensp;本项目的经营管理包括生产管理、销售管理、财务管理、人力资源管理等。</p><h2 id="7-1-相关政策及市场调研"><a href="#7-1-相关政策及市场调研" class="headerlink" title="7.1 相关政策及市场调研"></a>7.1 相关政策及市场调研</h2><p>&ensp;&ensp;&ensp;&ensp;根据《关于创新体制机制推进农业绿色发展的意见》推进农业绿色发展，是贯彻新发展理念、推进农业供给侧结构性改革的必然要求，是加快农业现代化、促进农业可持续发展的重大举措，是守住绿水青山、建设美丽中国的时代担当，对保障国家食物安全、资源安全和生态安全，维系当代人福祉和保障子孙后代永续发展具有重大意义。</p><p>&ensp;&ensp;&ensp;&ensp;国家旅游局规划财务司发布消息称，自2015年下半年国家将旅游项目纳入专项建设基金支持领域以来，首批100亿元专项建设基金已完成审核进入拨付程序，第二批120亿元建设基金的申报工作目前也正式启动。重点支持休闲度假旅游、乡村旅游、文化旅游、研学旅行、旅游小城镇和新产品、新业态项目。</p><p>&ensp;&ensp;&ensp;&ensp;据市场调查，我国是茶叶消费大国，有着悠久的饮茶历史和博大精深的茶文化。目前，我国茶叶人均消费量虽高于世界平均水平，但部分地区仍有待提高。随着经济社会的发展和人民生活水平的提高，对健康、天然的茶叶产品的消费需求量也在逐步提高。因此，我国茶叶市场仍有较广阔的发展空间，未来仍将保持稳定增长。</p><h2 id="7-2-公司运营模式管理"><a href="#7-2-公司运营模式管理" class="headerlink" title="7.2 公司运营模式管理"></a>7.2 公司运营模式管理</h2><ul><li><p>公司主要发展“政府+公司+合作社+基地+农户”的产业运营模式，具体管理分配职责如下：</p></li><li><p>公司积极响应政府政策，发展旅游产业链，建设一批设施标准、管理规范、绿色生态的茶叶生产基地，创响成长性好、竞争力强、特色突出的茶叶品牌，切实转变发展方式，努力提高茶产业质量效益和竞争力，巩固提升产业扶贫成果，构建茶业新发展格局。</p></li><li><p>合作社从事基地种植、生产加工、出口与内销等产业链。教授农户培育出品质优良的茶树，定期组织农户对茶叶基地进行全方面的维护。</p></li><li><p>基地种植有机茶树，建设基础旅游设施。</p></li><li><p>农户负责茶叶采摘，茶树及基础设施的日常维护。</p></li></ul><h2 id="7-3-公司制度管理"><a href="#7-3-公司制度管理" class="headerlink" title="7.3 公司制度管理"></a>7.3 公司制度管理</h2><ul><li><p>建立健全茶叶、茶叶基地旅游管理制度，以种期提升管理运权营效力，规范管理程序、高组织效能。落实相关责任，并建立内部审批制度来限制个人权力，保证公司的决策正确性。</p></li><li><p>建立完善完备的财务报表系统，准确有效地展示本公司的财务状况，提供财会决策的依据。</p></li><li><p>建立有效有规的政策体系，明确任务分工、绩效考核标准和奖惩措施，激励员工积极参与公司管理，为公司发展打造更加有效的环境。</p></li><li><p>建立一套完善的培训体系，不断提升公司员工能力，避免因缺乏知识技能而导致的错误决策，为公司发展提供良好的支撑。</p></li></ul><h2 id="7-4-生产管理"><a href="#7-4-生产管理" class="headerlink" title="7.4 生产管理"></a>7.4 生产管理</h2><ul><li><p>安排人员：负责招募专业的农民作为工人，确定好游客采摘茶叶活动的时间、地点和规模，根据当地经济条件和当前市场行情进行合理安排。 </p></li><li><p>采收：采用严格的质量标准，对茶叶进行采收，保证产品质量，并控制茶叶的最大采收量，以免影响茶叶生长。相关部门提出采摘任务的详细要求，并确保采摘的茶叶符合质量标准。按照规定的采摘流程，给游客进行安全培训，严格遵守相关规定。为游客办理采摘手续，收取茶叶，并对游客的采摘行为进行监督。</p></li><li><p>加工：按照不同茶叶的品种，进行不同的加工方法，并严格控制加工时间，以保证产品最佳质量和风味。</p></li><li><p>包装：以精美的包装形式将茶叶包装，以符合消费者的需求，使之能够长期储存，同时注意茶叶的质量不受外界环境的影响。</p></li><li><p>销售：根据市场营销趋势，制定合理的价格策略；采取积极的销售策略，如线上线下相结合；延长茶产业链，如将茶深加工做成茶饮料等。</p></li></ul><h2 id="7-5-销售管理"><a href="#7-5-销售管理" class="headerlink" title="7.5 销售管理"></a>7.5 销售管理</h2><ul><li><p>通过与政府合作，打造具有当地特色的茶产品，提高本公司茶产品的知名度和信誉度。给当地居民优惠政策，吸引当地居民支持本公司的茶产品，并通过他们加大宣传力度。</p></li><li><p>进行广泛的人才招聘组建一支茶叶、茶产品及茶叶采摘体验销售团队，该团队由多位专业销售经理和推广人员组成。</p></li><li><p>针对当季市场茶叶的需求量，制定相应的售卖计划；与当地商业协会联系，邀请各大商家参加茶叶促销活动，并和供应商进行沟通协商，确保茶叶采购的质量和数量；根据茶叶销售的情况，不定期更新库存； 通过宣传吸引游客前往茶叶基地体验茶叶采摘服务，同时促进茶叶基地旅游业发展。</p></li><li><p>对不同类别的茶叶进行分析，根据实际销售情况调整价格，确保公司的利润目标得到实现。</p></li><li><p>主动发掘新的市场需求，定期检查市场竞争状况， 并组织及时有效的客户服务，确保茶叶的销售及售后服务质量。</p></li></ul><h2 id="7-6-财务管理"><a href="#7-6-财务管理" class="headerlink" title="7.6 财务管理"></a>7.6 财务管理</h2><ul><li><p>根据茶叶，茶叶基地旅游产业的收入、开支情况，制定一套财务管理制度，以保证财务管理的严格执行，促使茶产业及其相关产业的正常运行。</p></li><li><p>审核财务报表，确保数据准确无误，确保公司资金支出合理。</p></li><li><p>建立财务管理团队，对每一笔支出的内容，原因及相关数据进行审核，并且将出纳、会计等财务工作人员的管理职能规范化，以便更好地控制财务风险。</p></li><li><p>根据公司的业务发展定义财务结构，归纳有效的财务报表；分析企业销售额及利润情况，形成相应的预算体系；制定财务管理规范，包括资金使用、报销以及财务报表复核等；优化财务流程，完善财务审批制度； 建立完整的税务筹划制度；结合网络财务平台，实现财务管理的智能化；通过实施集中管理，提升企业财务水平。</p></li><li><p>定期对厂内财务收支状况进行检查，督促厂方落实财务管理计划，确保茶叶收入的正常运行。与厂方协商，制定茶叶价格调整计划，促进茶产业长期可持续发展。</p></li></ul><h2 id="7-7-人力资源管理"><a href="#7-7-人力资源管理" class="headerlink" title="7.7 人力资源管理"></a>7.7 人力资源管理</h2><ul><li><p>7.7.1对茶产业的当前人力资源状况进行分析，了解茶产业的人力资源需求情况；制定一套详细的人力资源管理制度，规范员工招聘、薪酬激励、考勤管理、绩效考核、休假安排等各个方面的工作流程。 </p></li><li><p>7.7.2设置招聘门槛，要求求职人员对茶叶文化有一定的了解和认识，以便更好弘扬公司文化以及客户解答有关茶产业方面的问题。</p></li><li><p>7.7.3建立完备的员工考核体系，对员工绩效进行定期考核；组织开展岗位职责培训，提升茶产业人力资源管理能力；负责解决茶产业人力资源管理中出现的问题，提出优化的建议。</p></li><li><p>7.7.4建立完善的激励机制。完善薪酬福利激励，除去员工基本工资，还可加上绩效工资；工资制度优化，设立年终奖金，各种福利，专项奖金等来激励提高员工的工作积极性。</p></li></ul><h1 id="八、团队管理"><a href="#八、团队管理" class="headerlink" title="八、团队管理"></a>八、团队管理</h1><ul><li>团队是现代企业管理中战斗的核心，企业追求组织要持续成长、绩效要持续提高。绩效要持续提高，企业就须推动组织的持续成长。只有组织持续成长，企业才能持续取得高绩效。组织要持续成长，企业就要推动各级工作团队创建“高绩效团队”。本项目的团队管理包括领导力、协作能力、应变能力、沟通协调能力和资源共享能力。</li></ul><h2 id="8-1-团队能力"><a href="#8-1-团队能力" class="headerlink" title="8.1 团队能力"></a>8.1 团队能力</h2><h3 id="8-1-1-团队领导能力"><a href="#8-1-1-团队领导能力" class="headerlink" title="8.1.1 团队领导能力"></a>8.1.1 团队领导能力</h3><p>&ensp;&ensp;&ensp;&ensp;公司领导层应具备较高的领导力和战略思维能力，能够制定并实施科学有效的发展战略和管理制度，带领团队实现公司的长期目标。领导力首先是指个人管理能力，其次是团队管理能力，能有效的分配任务并督促员工完成，优秀的领导带来高效、和谐的工作氛围，最终使公司取得更高绩效。</p><h3 id="8-1-2-团队协作能力"><a href="#8-1-2-团队协作能力" class="headerlink" title="8.1.2 团队协作能力"></a>8.1.2 团队协作能力</h3><p>&ensp;&ensp;&ensp;&ensp;公司团队成员应具备良好的协作能力，能够有效地沟通、协调和合作，实现团队的协同作业和目标的共同实现。团队强调的是协同工作，所以团队的工作气氛很重要，它直接影响团队的合作能力。团队的效率在于每个成员配合的默契。团队的每一位成员需要主动去寻找团队其他成员的优秀品质，由此团队的协作就会变得很顺畅，工作效率就会提高。</p><h3 id="8-1-3-团队应变能力"><a href="#8-1-3-团队应变能力" class="headerlink" title="8.1.3 团队应变能力"></a>8.1.3 团队应变能力</h3><p>&ensp;&ensp;&ensp;&ensp;公司团队成员应具备较高的应变能力，应变能力是当代人应当具有的基本能力之一。在当今社会中，公司需要面对和处理比过去成倍增长的信息，迅速地分析这些信息，是公司把握时代脉搏、公司持续发展的关键。此需要团队具有良好的应变能力。</p><h3 id="8-1-4-团队沟通协调能力"><a href="#8-1-4-团队沟通协调能力" class="headerlink" title="8.1.4 团队沟通协调能力"></a>8.1.4 团队沟通协调能力</h3><p>&ensp;&ensp;&ensp;&ensp;公司团队成员应具备良好的沟通协调能力。沟通协调是通过情感、态度、思想、观点等各种信息的交流，来控制、激励和协调他人的活动，使之相互配合，从而建立良好协作关系。沟通协调贯穿于工作的各个环节，无论制定计划、做出决策，还是进行监督、控制和处理各种人际关系，都离不开沟通协调。沟通有利于团队在工作中获取信息，发挥出自身的潜能，有利于提高我们的工作效率，发挥出单位的整体效能。</p><h3 id="8-1-5-团队资源共享能力"><a href="#8-1-5-团队资源共享能力" class="headerlink" title="8.1.5 团队资源共享能力"></a>8.1.5 团队资源共享能力</h3><p>&ensp;&ensp;&ensp;&ensp;团队作为一个整体，需要整体的综合能力。资源共享作为团队工作中不可缺少的一部分，可以很好的评估团队的凝聚力和团队的协作能力，也是一个团队能力的客观提现。故提高团队的资源共享度是可以让团队健康发展，稳定发展的基础。但同时公司将采取有效措施，规避风险，保证项目的顺利运营和发展。</p><h2 id="8-2-团队构成"><a href="#8-2-团队构成" class="headerlink" title="8.2 团队构成"></a>8.2 团队构成</h2><p>&ensp;&ensp;&ensp;&ensp;1）战略发展部:主要进行市场分析，全面主持公司战略发展工作，负责收集整理与公司发展有关所需的经济信息资料、政策法规；</p><p>&ensp;&ensp;&ensp;&ensp;2）人力资源部：主要进行团队的管理，深入了解公司各部门的业务进展及团队人员情况，整合内部资源、提供人力资源解决方案; 负责人才选拔与评估，通过与各部门负责人的沟通协作，有效发掘招聘、培训等需求，有效开展人力资源招聘、培训、考核等工作; 负责员工绩效管理、人才规划、内部激励，员工考核评估等工作;</p><p>&ensp;&ensp;&ensp;&ensp;3）公司及政府事务部：研究相关政策并制定发展战略， 协助企业关系维护并提信引导，协调和拓展各部门关系，处理企业突发性事件，提供并组织项目申报的咨询工作，提出建议并进行总结汇报；</p><p>&ensp;&ensp;&ensp;&ensp;4）财经审计部：进行财务分析，总负责各个项目及大小活动的成本计算，成本节约，盈利计算，盈利分配，团队资金存用，团队项收入记录，管理融资方案；</p><p>&ensp;&ensp;&ensp;&ensp;5）法务部：参与起草、审核企业重要的规章制度，对企业规章制度的合法性负责，制定标准的合同文本，审核企业各类技术、经济合同，参与重大合同的起草、谈判工作，监检查合同的履行情况，参与企业的兼并、收购、投资、租赁、资产转让、招投标等重大经济活动，提出法律建议，维司的合法权益，代表公司处理各类诉讼或非诉讼法律事务，维护公司的合法权益。</p><p>&ensp;&ensp;&ensp;&ensp;6）质量流程部：审核企业质量控制流程及制度规范，并监督检查质量执行情况，评估供应商质量体系，选择合适的供应商，负责规划、组织和协调质量检验工作。</p><p>&ensp;&ensp;&ensp;&ensp;7）基础业务部：负责有机茶叶产业园、农业合作社及茶旅文化园的具体运营及其他各项基础建设管理。</p><p>&ensp;&ensp;&ensp;&ensp;8）后勤管理部：负责公司附属资产的清理统计，协助其他部门做好业务工作，负责现有服务开发项目的日常管理、监督、指导、考核工作。</p><h2 id="8-3-管理机制"><a href="#8-3-管理机制" class="headerlink" title="8.3 管理机制"></a>8.3 管理机制</h2><p>&ensp;&ensp;&ensp;&ensp;1) 公司全体员工必须遵守公司章程，遵守公司的各项规章制度和决定。<br>&ensp;&ensp;&ensp;&ensp;2) 公司倡导树立“一盘棋”思想，禁止任何部门、个人做有损公司利益、形象、声誉或破坏公司发展的事情。</p><p>&ensp;&ensp;&ensp;&ensp;3）公司通过发挥全体员工的积极性、创造性和提高全体员工的技术、管理、经营水平，不断完善公司的经营、管理体系，实行多种形式的责任制，不断壮大公司实力和提高经济效益。</p><p>&ensp;&ensp;&ensp;&ensp;4）公司提倡全体员工刻苦学习科学技术和文化知识，为员工提供学习、深造的条件和机会，努力提高员工的整体素质和水平，造就一支思想新、作风硬、业务强、技术精的员工队伍。</p><p>&ensp;&ensp;&ensp;&ensp;5）公司实行“岗薪制”的分配制度，为员工提供收入和福利保证，并随着经济效益的提高逐步提高员工各方面待遇；公司为员工提供平等的竞争环境和晋升机会；公司推行岗位责任制，实行考勤、考核制度，评先树优，对做出贡献者予以表彰、奖励。</p><p>&ensp;&ensp;&ensp;&ensp;6）公司提倡求真务实的工作作风，提高工作效率；提倡厉行节约，反对铺张浪费；倡导员工团结互助，同舟共济，发扬集体合作和集体创造精神，增强团体的凝聚力和向心力。</p><h2 id="8-4-公司奖惩制度"><a href="#8-4-公司奖惩制度" class="headerlink" title="8.4 公司奖惩制度"></a>8.4 公司奖惩制度</h2><p>&ensp;&ensp;&ensp;&ensp;为严明纪律，奖励先进，处罚落后，调动员工积极性，提高工作效益和经济效益，特制订本制度。对员工的奖惩实行以精神鼓励为主、经济奖惩为辅的原则。本制度适于公司全体员工。公司后勤管理部负责监督本制度的贯彻实施。 本制度适用于未注明条款的其他各项规章制度。对下列表现之一的员工，应当给予奖励：</p><p>&ensp;&ensp;&ensp;&ensp;1. 遵纪守法，执行公司规章制度，思想进步，文明礼貌，团结互助，事迹突出；</p><p>&ensp;&ensp;&ensp;&ensp;2. 一贯忠于职守、积极负责，廉洁奉公，全年无出现事故；</p><p>&ensp;&ensp;&ensp;&ensp;3. 完成计划指标，经济效益良好；</p><p>&ensp;&ensp;&ensp;&ensp;4.积极向公司提出合理化建议，为公司采纳；</p><p>&ensp;&ensp;&ensp;&ensp;5.全年无缺勤，积极做好本职工作；</p><p>&ensp;&ensp;&ensp;&ensp;6.维护公司利益，为公司争得荣誉，防止或挽救事故与经济损失有功；</p><p>&ensp;&ensp;&ensp;&ensp;7.坚持自学，不断提高业务水平，任职期内改进生产工艺，提高生产效率的。</p><p>&ensp;&ensp;&ensp;&ensp;8.其他对公司作出贡献</p><p>对下列表现的员工，应当给予处罚：</p><p>&ensp;&ensp;&ensp;&ensp;1.违反国家法规、法律、政策和公司规章制度，造成经济损失或不良影响的；</p><p>&ensp;&ensp;&ensp;&ensp;2．违反劳动纪律、经常迟到、早退、旷工、消极怠工，没完成重大生产任务或工作任务的；</p><p>&ensp;&ensp;&ensp;&ensp;3．擅离职守，不服从工作安排和调动、指挥，或无理取闹，影响生产秩序、工作秩序的；导致事故，使公司蒙受重大损失；</p><p>&ensp;&ensp;&ensp;&ensp;4.泄露公司秘密；</p><p>&ensp;&ensp;&ensp;&ensp;5.工作不负责，损坏设备、工具，浪费原材料、能源，造成经济损失的；</p><p>&ensp;&ensp;&ensp;&ensp;6．撕毁、遗失经管之重要文件、机件、物件或工具；违反公司规定带进出物品；</p><p>&ensp;&ensp;&ensp;&ensp;7 .擅自变更工艺方法致使公司蒙受重大损失；</p><p>&ensp;&ensp;&ensp;&ensp;8．拒绝听从主管人员合理指挥监督；挑动是非，破坏团结，损害他人名誉或领导威信，影响恶劣的；</p><p>&ensp;&ensp;&ensp;&ensp;9.玩忽职守，违章操作或违章指挥，造成事故或经济损失的；</p><h2 id="8-5-团队人才培养方案"><a href="#8-5-团队人才培养方案" class="headerlink" title="8.5 团队人才培养方案"></a>8.5 团队人才培养方案</h2><h3 id="8-5-1-明确培养目标"><a href="#8-5-1-明确培养目标" class="headerlink" title="8.5.1 明确培养目标"></a>8.5.1 明确培养目标</h3><p>&ensp;&ensp;&ensp;&ensp;由过去培养基础扎实的专业型人才，转向培养知识面宽、能力强、素质高、适应能力强的复合型创业人才。积极培育茶文化旅游专业人才，重点挖掘研究中华茶文化发展历史人才，深入挖掘培养新时代茶文化精神意涵人才，基于乡村振兴背景，培育德才兼备、能力兼顾的高水平旅游开发人才。</p><h3 id="8-5-2-探索培养模式"><a href="#8-5-2-探索培养模式" class="headerlink" title="8.5.2 探索培养模式"></a>8.5.2 探索培养模式</h3><p>&ensp;&ensp;&ensp;&ensp;积极开展学习考察，开展与高校联合培养计划。8.5.3在全面发展员工各方面潜力的基础上，根据员工本身的优势，重点培养某一方面的才能，如组织潜力方面，及创新方面的人才。</p><h1 id="九．财务分析"><a href="#九．财务分析" class="headerlink" title="九．财务分析"></a>九．财务分析</h1><h2 id="9-1-创办资金来源"><a href="#9-1-创办资金来源" class="headerlink" title="9.1 创办资金来源"></a>9.1 创办资金来源</h2><p>&ensp;&ensp;&ensp;&ensp;公司注册资本4000万，控股总和为100%。政府出资2040万，控股51%，12个股东出资1960万，控股49%。其中重庆中旅集团投资800万元，控股20%。四川万景融汇集团投资500万元，控股12.5%。，其他10个股东出资410万，总控股16.5%，银行借贷250万，控股6.25%。</p><p>表1：股东出资表</p><div class="table-container"><table><thead><tr><th>股东</th><th>初始出资额</th><th>股权</th></tr></thead><tbody><tr><td>政府</td><td>2040万</td><td>51%</td></tr><tr><td>重庆中旅集团</td><td>800万</td><td>20%</td></tr><tr><td>四川万景融汇集团</td><td>500万</td><td>12.50%</td></tr><tr><td>张子颖</td><td>30万</td><td>0.75%</td></tr><tr><td>张致浩</td><td>20万</td><td>0.5%</td></tr><tr><td>任钰茹</td><td>30万</td><td>0.75%</td></tr><tr><td>罗海燕</td><td>40 万</td><td>1%</td></tr><tr><td>刘婷</td><td>40万</td><td>1%</td></tr><tr><td>罗元婷</td><td>40万</td><td>1%</td></tr><tr><td>沈庆新</td><td>80万</td><td>2%</td></tr><tr><td>吴吉鸿</td><td>80万</td><td>2%</td></tr><tr><td>股东A</td><td>30万</td><td>0.75%</td></tr><tr><td>股东B</td><td>20万</td><td>0.5%</td></tr></tbody></table></div><h3 id="9-1-1-营销收入预测"><a href="#9-1-1-营销收入预测" class="headerlink" title="9.1.1 营销收入预测"></a>9.1.1 营销收入预测</h3><h4 id="9-1-1-1-业务来源"><a href="#9-1-1-1-业务来源" class="headerlink" title="9.1.1.1 业务来源"></a>9.1.1.1 业务来源</h4><p>&ensp;&ensp;&ensp;&ensp;1.主要业务来源：有机茶叶种植、收购、加工、销售；农副产品收购、初加工、销售；茶叶及农产品的进出口贸易服务。</p><p>&ensp;&ensp;&ensp;&ensp;2、次要业务来源：开发生态旅游资源，包括农家乐、民宿、景区等，为游客提供独特的生态旅游体验。</p><h4 id="9-1-1-2-收入预测"><a href="#9-1-1-2-收入预测" class="headerlink" title="9.1.1.2 收入预测"></a>9.1.1.2 收入预测</h4><p>​          表2：预计2024年收入详情表</p><div class="table-container"><table><thead><tr><th>产品名称</th><th>单价</th><th>销售量</th><th>盈利（元）</th></tr></thead><tbody><tr><td>A茶叶</td><td>70</td><td>20,000.00</td><td>1,400,000.00</td></tr><tr><td>B茶叶</td><td>85</td><td>24,000.00</td><td>2,040,000.00</td></tr><tr><td>C茶叶</td><td>135</td><td>17,500.00</td><td>2,362,500.00</td></tr><tr><td>D 茶叶</td><td>200</td><td>15,000.00</td><td>3,000,000.00</td></tr><tr><td>E茶叶</td><td>300</td><td>10,000.00</td><td>3,000,000.00</td></tr><tr><td>Ｆ茶叶</td><td>400</td><td>5,000.00</td><td>2,000,000.00</td></tr><tr><td>G特色农产品</td><td>25</td><td>50,000.00</td><td>1,250,000.00</td></tr><tr><td>H特色农产品</td><td>35</td><td>25,000.00</td><td>875,000.00</td></tr><tr><td>I特色农产品</td><td>30</td><td>14,000.00</td><td>420,000.00</td></tr><tr><td>J特色农产品</td><td>20</td><td>24,000.00</td><td>480,000.00</td></tr><tr><td>生态观光体验票</td><td>35</td><td>12,000.00</td><td>420,000.00</td></tr><tr><td>采茶炒茶体验票</td><td>35</td><td>12,000.00</td><td>420,000.00</td></tr><tr><td>民宿</td><td>120</td><td>12,000.00</td><td>1,440,000.00</td></tr><tr><td>农家乐</td><td>240</td><td>12,000.00</td><td>2,880,000.00</td></tr><tr><td>总计</td><td></td><td></td><td>21,987,500.00</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;假设每年订单量增加15%，则2025年收入为25285625.00元，2026年收入为29078468.75元</p><h4 id="9-1-1-3-支出预测"><a href="#9-1-1-3-支出预测" class="headerlink" title="9.1.1.3 支出预测"></a>9.1.1.3 支出预测</h4><p>成本支出预测:</p><p>&ensp;&ensp;&ensp;&ensp;1)机器购买、人员薪酬、厂房建设，土地承包，办公地和线下门店租赁。</p><p>&ensp;&ensp;&ensp;&ensp;2)其他费用主要包括技师培训费，机器维护费、推广费、装修费，管理费。</p><p>表3：主要成本支出预测表(含固定资产)</p><div class="table-container"><table><thead><tr><th>项目</th><th>数量</th><th>2023年</th><th>2024年</th><th>2025年</th></tr></thead><tbody><tr><td>机器购买</td><td>80套</td><td>500万</td><td>-</td><td>-</td></tr><tr><td>人员薪酬</td><td>50人</td><td>300万</td><td>300万</td><td>300万</td></tr><tr><td>生产线</td><td>5个</td><td>1000万</td><td>-</td><td>-</td></tr><tr><td>土地承包</td><td>6000亩</td><td>180万</td><td>180 万</td><td>180万</td></tr><tr><td>总成本费用</td><td></td><td>1980万</td><td>480万</td><td>480万</td></tr></tbody></table></div><p>​              表4：管理费用及销售费用表</p><div class="table-container"><table><thead><tr><th>项目</th><th>行次</th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td></td><td></td><td>(单位:元)</td><td>(单位:元)</td><td>(单位:元)</td></tr><tr><td>管理人员薪酬</td><td>1</td><td>120,000.00</td><td>165,000.00</td><td>181,500.00</td></tr><tr><td>机器维修费</td><td>2</td><td>100,000.00</td><td>100,000.00</td><td>100,000.00</td></tr><tr><td>线下门店租金</td><td>3</td><td>72,000.00</td><td>72,000.00</td><td>72,000.00</td></tr><tr><td>技工培训费</td><td>4</td><td>50,000.00</td><td>50,000.00</td><td>50,000.00</td></tr><tr><td>门店装修费</td><td>5</td><td>35,000.00</td><td>-</td><td>-</td></tr><tr><td>推广费</td><td>6</td><td>30,000.00</td><td>30,000.00</td><td>30,000.00</td></tr><tr><td>水电费</td><td>7</td><td>24,000.00</td><td>24,000.00</td><td>24,000.00</td></tr><tr><td>工作室装修费</td><td>8</td><td>20,000.00</td><td>-</td><td>-</td></tr><tr><td>购买办公用品</td><td>9</td><td>10,000.00</td><td>10,000.00</td><td>10,000.00</td></tr><tr><td>业务招待费</td><td>10</td><td>5,000.00</td><td>5,000.00</td><td>5,000.00</td></tr><tr><td>总计</td><td></td><td>466,000.00</td><td>456,000.00</td><td>472,500.00</td></tr></tbody></table></div><p>表5：财务费用表</p><div class="table-container"><table><thead><tr><th>项目</th><th>行次</th><th>2024年计划数(单位:元)</th><th>2025年计划数(单位:元)</th><th>2026年计划数(单位:元)</th></tr></thead><tbody><tr><td>利息</td><td>1</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr><tr><td>合计</td><td>2</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr></tbody></table></div><p>注：①银行贷款基准利率为4. 9%</p><p>表6：2023年购买固定资产表</p><div class="table-container"><table><thead><tr><th>固定资产名称</th><th>单价(单位:元)</th><th>数量</th><th>金额合计(单位:元)</th><th>折旧年限(单位:年)</th><th>每年折旧(单位:元)</th><th>预计净残值(单位:元)</th></tr></thead><tbody><tr><td>办公电脑</td><td>6,000.00</td><td>6台</td><td>36,000.00</td><td>3</td><td>11,400.00</td><td>1,800.00</td></tr><tr><td>办公座椅</td><td>110.00</td><td>15张</td><td>1,650.00</td><td>5</td><td>313.50</td><td>82.50</td></tr><tr><td>办公桌</td><td>420.00</td><td>3张</td><td>1,260.00</td><td>5</td><td>239.40</td><td>63.00</td></tr><tr><td>打印机</td><td>1,500.00</td><td>1台</td><td>1,500.00</td><td>3</td><td>475.00</td><td>75.00</td></tr><tr><td>空调</td><td>2,100.00</td><td>1台</td><td>2,100.00</td><td>5</td><td>399.00</td><td>105.00</td></tr><tr><td>投影仪</td><td>5,000.00</td><td>1台</td><td>5,000.00</td><td>3</td><td>1,583.00</td><td>251.00</td></tr><tr><td>合计</td><td></td><td></td><td>47,510.00</td><td></td><td>14,409.90</td><td>2,376.50</td></tr></tbody></table></div><h2 id="9-2-三大报表"><a href="#9-2-三大报表" class="headerlink" title="9.2 三大报表"></a>9.2 三大报表</h2><p> 财务假设：</p><p>&ensp;&ensp;&ensp;&ensp;①会计年度：每年公历1月1日-12月31日为一个会计年度；</p><p>&ensp;&ensp;&ensp;&ensp;②记账本位币：以人民币为记账本位币；</p><p>&ensp;&ensp;&ensp;&ensp;③企业按小规模纳税人纳税（按年度缴纳），所得税税率为25%；</p><p>&ensp;&ensp;&ensp;&ensp;④起初资金一步到位，在期初就将资金用于对固定资产的购买和对无形资产的投入，且每年对无形资产的更新迭代都投入一定的资金。在第一年年末就开始对固定资产提折旧（直线法提折旧，折旧年限3年），对无形资产进行摊销（直线法，摊销年限3年）。</p><p>&ensp;&ensp;&ensp;&ensp;⑤提取净利润的15%作为盈余公积。</p><p>表7：预测利润表</p><div class="table-container"><table><thead><tr><th>项目</th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td>一、营业收入</td><td>21,987,500.00</td><td>25,285,625.00</td><td>29,078,468.75</td></tr><tr><td>减：主要成本支出</td><td>19,800,000.00</td><td>4,800,000.00</td><td>4,800,000.00</td></tr><tr><td>税金及附加</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>管理费用及销售费用</td><td>466,000.00</td><td>456,000.00</td><td>472,500.00</td></tr><tr><td>财务费用</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr><tr><td>资产减值损失</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>投资收益</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>资产处置收益</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>其他收益</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>二、营业利润</td><td>1,574,500.00</td><td>19,882,625.00</td><td>23,658,968.75</td></tr><tr><td>加：营业外收入</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>减：营业外支出</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>三、利润总额</td><td>1,574,500.00</td><td>19,882,625.00</td><td>23,658,968.75</td></tr><tr><td>减：所得税费用</td><td>393,625.00</td><td>4,970,656.25</td><td>5,914,742.19</td></tr><tr><td>四、净利润</td><td>1,180,875.00</td><td>14,911,968.75</td><td>17,744,226.56</td></tr></tbody></table></div><p>表8：资产负债表</p><div class="table-container"><table><thead><tr><th>项目</th><th>2023年</th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td>流动资产：</td><td></td><td></td><td></td><td></td></tr><tr><td>货币资金</td><td>23,200,000.00</td><td>23,500,000.00</td><td>24000,000.00</td><td>24,000,000.00</td></tr><tr><td>应收账款</td><td>0.00</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>存货</td><td>0.00</td><td>5,000,000.00</td><td>7,000,000.00</td><td>7,500,000.00</td></tr><tr><td>流动资产合计</td><td>23,200,000.00</td><td>28,000,000.00</td><td>30,500,000.00</td><td>31,500,000.00</td></tr><tr><td>固定资产</td><td>16,800,000.00</td><td>16,047,510.00</td><td>16,033,100.10</td><td>16,018,690.20</td></tr><tr><td>无形资产</td><td>0.00</td><td>50,000.00</td><td>50,000.00</td><td>50,000.00</td></tr><tr><td>非流动资产合计</td><td>16,800,000.00</td><td>16,097,510.00</td><td>16,033,100.10</td><td>16,068,690.20</td></tr><tr><td>资产合计</td><td>40,000,000.00</td><td>44,097,510.00</td><td>46,583,100.10</td><td>47,568,690.20</td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td>流动负债：</td><td></td><td></td><td></td><td></td></tr><tr><td>应付账款</td><td>0.00</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>应付职工薪酬</td><td>0.00</td><td>3,178,897.00</td><td>3,171,874.60</td><td>3253183.8.</td></tr><tr><td>应交税费</td><td>0.00</td><td>5,496,875.00</td><td>6,321,406.25</td><td>7,269,617.18</td></tr><tr><td>其他应付款</td><td>0.00</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr><tr><td>流动负债合计</td><td>0.00</td><td>8,822,772.00</td><td>9,640,280.85</td><td>7,416,617.18</td></tr><tr><td>非流动负债：</td><td></td><td></td><td></td><td></td></tr><tr><td>长期借款</td><td>3,000,000.00</td><td>3,000,000.00</td><td>3,000,000.00</td><td>3,000,000.00</td></tr><tr><td>非流动负债合计</td><td>3,000,000.00</td><td>3,000,000.00</td><td>3,000,000.00</td><td>3,000,000.00</td></tr><tr><td>负债合计</td><td>3,000,000.00</td><td>11,822,772.00</td><td>12,640,280.85</td><td>10,416,617.18</td></tr><tr><td>所有者权益：</td><td></td><td></td><td></td><td></td></tr><tr><td>实收资本</td><td>17,400,000.00</td><td>17,400,000.00</td><td>17,400,000.00</td><td>17,400,000.00</td></tr><tr><td>盈余公积</td><td>0.00</td><td>118,087.50</td><td>1,491,196.88</td><td>1,774,422.65</td></tr><tr><td>未分配利润</td><td>0.00</td><td>1,062,787.50</td><td>13,420,771.20</td><td>15,969,803.00</td></tr><tr><td>所有者权益合计</td><td>17,400,000.00</td><td>18,580,875.00</td><td>32,311,968.08</td><td>35,144,225.65</td></tr><tr><td>负债及所有者权益合计</td><td>40,000,000.00</td><td>35,980,875.00</td><td>49,711,968.08</td><td>52,544,225.65</td></tr></tbody></table></div><p>注：</p><p>表9：现金流量表</p><div class="table-container"><table><thead><tr><th>单位：元</th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>项目</td><td>行次</td><td>2024年</td><td>2025年</td><td>2026年</td></tr><tr><td>一、经营活动产生的现金流量</td><td>1</td><td>21,987,500.00</td><td>25,285,625.00</td><td>29,078,468.75</td></tr><tr><td>销售商品、提供劳务收到的现金</td><td>2</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>收到的税费返还</td><td>3</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>收到的其他与经营活动有关的现金</td><td>4</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>经营活动现金流入小计</td><td>5</td><td>21,987,500.00</td><td>25.285,625.00</td><td>29,078,468.75</td></tr><tr><td>购买商品、接受劳务支付的现金</td><td>6</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>支付给职工以及为职工支付的现金</td><td>7</td><td>3,178,897.00</td><td>3.171,874.60</td><td>3,253,183.80</td></tr><tr><td>支付的各项税费</td><td>8</td><td>1,649,062.00</td><td>1,896,218.75</td><td>2,180,851.56</td></tr><tr><td>支付其他与经营活动有关的现金</td><td>9</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>经营活动现金流出小计</td><td>10</td><td>8,675,772.00</td><td>9,493,280.85</td><td>10,522,800.98</td></tr><tr><td>经营活动产生的现金流量净额</td><td>11</td><td>13,311,728.00</td><td>15,792,344.15</td><td>18,555,667,77</td></tr><tr><td>二、 投资活动产生的现金流量</td><td>12</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>收回投资收到的现金</td><td>13</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>取得投资收益收到的现金</td><td>14</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>处置固定资产、无形资产和其他长期资产收回的现金净额</td><td>15</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>处置子公司及其他营业单位收到的现金净额</td><td>16</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>收到其他与投资活动有关的现金</td><td>17</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>投资活动现金流入小计</td><td>18</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>购建固定资产、无形资产和其他长期资产支付的现金</td><td>19</td><td>16,047,510.00</td><td>0.00</td><td>0.00</td></tr><tr><td>投资支付的现金</td><td>20</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>取得子公司及其他营业单位支付的现金净额</td><td>21</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>支付其他与投资活动有关的现金</td><td>22</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>投资活动现金流出小计</td><td>23</td><td>16,097,510.00</td><td>50,000.00</td><td>50,000.00</td></tr><tr><td>投资活动产生的现金流量净额</td><td>24</td><td>-16,097,510.00</td><td>-50,000.00</td><td>-50,000.00</td></tr><tr><td>三、筹资活动产生的现金流量</td><td>25</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>吸收投资收到的现金</td><td>26</td><td>13,000,000.00</td><td>0.00</td><td>0.00</td></tr><tr><td>取得借款收到的现金</td><td>27</td><td>3,000,000.00</td><td>0.00</td><td>0.00</td></tr><tr><td>收到其他与筹资活动有关的现金</td><td>28</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>筹资活动现金流入小计</td><td>29</td><td>16,000,000.00</td><td>0.00</td><td>0.00</td></tr><tr><td>偿还债务支付的现金</td><td>30</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>分配股利、利润或偿付利息支付的现金</td><td>31</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr><tr><td>支付其他与筹资活动有关的现金</td><td>32</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>筹资活动现金流出小计</td><td>33</td><td>147,000.00</td><td>147,000.00</td><td>147,000.00</td></tr><tr><td>筹资活动产生的现金流量净额</td><td>34</td><td>15,853,000.00</td><td>-147,000.00</td><td>-147,000.00</td></tr><tr><td>四、汇率变动对现金的影响</td><td>35</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>五、现金及现金等价物净增加额</td><td>36</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>加：期初现金及现金等价物余额</td><td>37</td><td>0.00</td><td>0.00</td><td>0.00</td></tr><tr><td>六、期末现金及现金等价物余额</td><td>38</td><td>13,067,218.00</td><td>15,595,344.15</td><td>18,358,667.77</td></tr></tbody></table></div><p>单位：元</p><p>注：</p><p>&ensp;&ensp;&ensp;&ensp;①“支付给职工以及为职工支付的现金“”科目包括技术人员薪酬、管理人员薪酬、销售人员薪酬；</p><p>&ensp;&ensp;&ensp;&ensp;②“支付的各项税费”科目包括增值税、企业所得税等；</p><p>&ensp;&ensp;&ensp;&ensp;③“支付其他与经营活动有关的现金”科目包括除去管理人员薪酬、固定资产折旧，销售人员薪酬的管理费用、销售费用。</p><p>&ensp;&ensp;&ensp;&ensp;④小规模纳税人，在购建固定资产时取得的增值税发票不得进行进项抵扣。</p><h2 id="9-3-财务指标分析"><a href="#9-3-财务指标分析" class="headerlink" title="9.3 财务指标分析"></a>9.3 财务指标分析</h2><h3 id="9-3-1-盈利能力分析"><a href="#9-3-1-盈利能力分析" class="headerlink" title="9.3.1 盈利能力分析"></a>9.3.1 盈利能力分析</h3><p>&ensp;&ensp;&ensp;&ensp;①销售净利率 = (净利润/ 销售收入净额）  100%</p><p>​          表11：销售净利率表</p><div class="table-container"><table><thead><tr><th></th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td>净利润</td><td>1,180,875.00</td><td>14,911,968.75</td><td>17,744,226.56</td></tr><tr><td>销售收入净额</td><td>21,987,500.00</td><td>25,285,625.00</td><td>29,078,468.75</td></tr><tr><td>销售净利率</td><td>5.37%</td><td>58.97%</td><td>61%</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;销售净利率的指标越大说明企业销售的盈利能力越强。销售第一年由于成本支出较高、收入能力较弱，销售净利率较低，由上表可知，销售净利率未来三年保持良好的持续增长，表示七盈利能力良好且逐年增强。</p><p>&ensp;&ensp;&ensp;&ensp;②销售毛利率 = (销售毛利 / 营业收入）  100%</p><p>表12：销售毛利率表</p><div class="table-container"><table><thead><tr><th></th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td>销售毛利</td><td>3,670,000.00</td><td>16,000,006.00</td><td>18,800,000.00</td></tr><tr><td>营业收入</td><td>21,987,500.00</td><td>25,285,625.00</td><td>29,078,468.75</td></tr><tr><td>销售毛利率</td><td>62.00%</td><td>63.00%</td><td>65.00%</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;销售毛利率是销售净利率的基础，该指标越大，表示盈利能力越强。由表可知，销售毛利率未来三年呈上升趋势，表示其盈利能力逐年增强。</p><p>&ensp;&ensp;&ensp;&ensp;③总资产收益率</p><p>表13：总资产收益率表</p><div class="table-container"><table><thead><tr><th></th><th>2024年</th><th>2025年</th><th>2026年</th></tr></thead><tbody><tr><td>息税前利润</td><td>21,987,500.00</td><td>25,285,625.00</td><td>29,078,468.75</td></tr><tr><td>平均总资产</td><td>35,980,875.00</td><td>49,711,968.08</td><td>52,544,225.65</td></tr><tr><td>总资产收益率</td><td>61.11%</td><td>50.86%</td><td>55.34%</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;总资产收益率是反映企业资产综合利用效果的核心指标，也是作为衡量总资产盈利能力的重要指标。</p><p>表14：资产负债率表</p><div class="table-container"><table><thead><tr><th></th><th>2021年</th><th>2022年</th><th>2023年</th></tr></thead><tbody><tr><td>负债总额</td><td>1069715.03</td><td>1194553.5</td><td>1281973.4</td></tr><tr><td>资产总额</td><td>1335460.1</td><td>1835310.2</td><td>2167288.3</td></tr><tr><td>资产负债率</td><td>80.1%</td><td>65.1%</td><td>59.15%</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;资产负债率=(负债总额/资产总额)100%</p><p>&ensp;&ensp;&ensp;&ensp;由表可知，资产负债率逐年降低，说明长期偿债能力逐渐较强。</p><p>财务指标分析总结：</p><p>&ensp;&ensp;&ensp;&ensp;①短期偿债能力逐年增强，且流动比率远高于2，表明公司的短期偿债能力很强，公司所面临的短期流动性风险很小。</p><p>&ensp;&ensp;&ensp;&ensp;②总资产收益率、销售毛利率逐年上升趋势，表示其盈利能力逐年增强。</p><p>&ensp;&ensp;&ensp;&ensp;③资产负债率在未来三年逐年下降，表明公司的负债较少，长期偿债能力较强。</p><h3 id="9-3-2-财务可行性分析"><a href="#9-3-2-财务可行性分析" class="headerlink" title="9.3.2 财务可行性分析"></a>9.3.2 财务可行性分析</h3><h4 id="9-3-2-1-投资回收期"><a href="#9-3-2-1-投资回收期" class="headerlink" title="9.3.2.1 投资回收期"></a>9.3.2.1 投资回收期</h4><p>表15： 投资回收期表</p><div class="table-container"><table><thead><tr><th>年份</th><th>各年营业利润</th><th>各年净现金流量</th><th>累计净现金流量</th></tr></thead><tbody><tr><td>2023年</td><td></td><td>-40,000,000.00</td><td>-40,000,000.00</td></tr><tr><td>2024年</td><td>21,987,500.00</td><td>13,067,218.00</td><td>13,067,218.00</td></tr><tr><td>2025年</td><td>25,285,625.00</td><td>15,595,344.15</td><td>15,595,344.15</td></tr><tr><td>2026年</td><td>29,078,468.75</td><td>18,358,667.77</td><td>18,358,667.77</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;投资回收期 = (40,000,000-21,987,500.00) /13,067,218.00= 1.39（年），计算的投资回收期为1.39年。现金流量的回收速度快，投资回收期短，投资风险较小，因此该投资方案可行。</p><h4 id="9-3-2-2-投资净现值"><a href="#9-3-2-2-投资净现值" class="headerlink" title="9.3.2.2 投资净现值"></a>9.3.2.2 投资净现值</h4><p>NVP = Σ(CI - CO)  t / (1 + i)^t</p><p>&ensp;&ensp;&ensp;&ensp;NPV是净现值，CI是各年收益，CO是各年支出，t是指时间，i是基准收益率（净现值的基准收益率一般为10%），CI-CO是指净现值流量。</p><p>&ensp;&ensp;&ensp;&ensp;当NPV＞0时，该项目可行；当NPV＜0时，该项目不可行。根据公式可以算出NPV =NPV远大于零，说明此项投资在投资期内，具有较强的盈利能力，因此投资方案可行。</p><h4 id="9-3-2-3-内部收益率"><a href="#9-3-2-3-内部收益率" class="headerlink" title="9.3.2.3 内部收益率"></a>9.3.2.3 内部收益率</h4><p>&ensp;&ensp;&ensp;&ensp;内部收益率，是一项投资渴望达到的报酬率，一般情况下，内部收益率大于基准收益率时，该项目是可行的。由上述计算所得的内部收益率可知，内部收益率指标为38%大于行业基准收益率10%，说明该项目具有财务可行性，且此项投资在投资期内，具有较强的盈利能力。</p><p>财务可行性分析总结：</p><p>&ensp;&ensp;&ensp;&ensp;①该项目投资回收期为1.39年，现金流量的回收速度快，投资回收期短，投资风险较小，因此该投资方案可行；</p><p>&ensp;&ensp;&ensp;&ensp;②NPV远大于零，说明此项投资在投资期内，具有较强的盈利能力，因此投资方案可行；</p><p>综上分析，该投资方案可行。</p><h1 id="十、融资方案"><a href="#十、融资方案" class="headerlink" title="十、融资方案"></a>十、融资方案</h1><h2 id="10-1-注册资本"><a href="#10-1-注册资本" class="headerlink" title="10.1 注册资本"></a>10.1 注册资本</h2><p>&ensp;&ensp;&ensp;&ensp;公司成立初期主要采取政府出资、银行借款和自筹资金的方式进行融资，采用认缴制，股东对所认缴的资本负法律责任;其中政府出资20400000元，银行贷款2500000元（年化利率 2.9%，先息后本），其他股东共出资17100000元；控股总和为100%，公司中采取同股不同权制，团队决策上有相对的领导者，要是出现决策分歧问题时，轮值董事长行使最高决策权。初始股权结构如下：</p><p>表17：初始股权结构表</p><div class="table-container"><table><thead><tr><th>股东</th><th>初始出资额</th><th>股权</th></tr></thead><tbody><tr><td>政府</td><td>2040万</td><td>51%</td></tr><tr><td>重庆中旅集团</td><td>800万</td><td>20%</td></tr><tr><td>四川万景融汇集团</td><td>500万</td><td>12.50%</td></tr><tr><td>张子颖</td><td>30万</td><td>0.75%</td></tr><tr><td>张致浩</td><td>20万</td><td>0.5%</td></tr><tr><td>任钰茹</td><td>30万</td><td>0.75%</td></tr><tr><td>罗海燕</td><td>40 万</td><td>1%</td></tr><tr><td>刘婷</td><td>40万</td><td>1%</td></tr><tr><td>罗元婷</td><td>40万</td><td>1%</td></tr><tr><td>沈庆新</td><td>80万</td><td>2%</td></tr><tr><td>吴吉鸿</td><td>80万</td><td>2%</td></tr><tr><td>股东A</td><td>30万</td><td>0.75%</td></tr><tr><td>股东B</td><td>20万</td><td>0.5%</td></tr></tbody></table></div><h3 id="10-1-1-自有资金—股权融资"><a href="#10-1-1-自有资金—股权融资" class="headerlink" title="10.1.1 自有资金—股权融资"></a>10.1.1 自有资金—股权融资</h3><p>&ensp;&ensp;&ensp;&ensp;公司将利用股东自有资金进行项目投资，以保证项目的运营和发展。公司注册资本4000万，控股总和为100%。政府出资2040万，控股51%，12个股东出资1960万，控股49%。其中重庆中旅集团投资800万元，控股20%。四川万景融汇集团投资500万元，控股12.5%。，其他10个股东出资410万，总控股16.5%。</p><h3 id="10-1-2-银行贷款—债务融资"><a href="#10-1-2-银行贷款—债务融资" class="headerlink" title="10.1.2 银行贷款—债务融资"></a>10.1.2 银行贷款—债务融资</h3><p>&ensp;&ensp;&ensp;&ensp;公司将通过银行贷款的方式获得资金支持，以满足项目的投资和运营需求。根据《国务院办公厅关于有效发挥政府性融资担保基金作用切实支持小微企业和“三农” 发展的指导意见》中，坚持聚焦支小支农融资担保业务聚焦重点对象。各级政府性融资担保、再担保机构要重点支持单户担保金额500万元及以下的小微企业和“三农”主体，优先为贷款信用记录和有效抵质押品不足但产品有市场、项目有前景、技术有竞争力的小微企业和“三农”主体融资提供担保增信。<br>&ensp;&ensp;&ensp;&ensp;切实降低小微企业和“三农”综合融资成本。引导降费让利。各级政府性融资担保、再担保机构要在可持续经营的前提下，适时调降再担保费率，引导合作机构逐步将平均担保费率降至1%以下。其中，对单户担保金额500万元及以下的小微企业和“三农”主体收取的担保费率原则上不超过1%五、强化财税正向激励加大奖补支持力度。中央财政要对扩大实体经济领域小微企业融资担保业务规模、降低小微企业融资担保费率等工作成效明显的地方予以奖补激励。有条件的地方可对单户担保金额500万元及以下、平均担保费率不超过1%的担保业务给予适当担保费补贴，提升融资担保机构可持续经营能力。初期将由政府牵头向农村商业银行借贷250万元（年化利率 2.9%，先息后本），为期5年。经由各项补贴政策，最终还款金额预计不超过300万。后期预计共借贷1000万维持公司现金流运营及农商互联网，国家农村产业融合发展示范园，生态区域循环农业项目等项目的建设，也用于现代农业产业园，一、二、三产业融合发展先导区全国休闲农业和乡村振兴旅游示范创建项目的深层次发展。</p><h3 id="10-1-3-风险投资"><a href="#10-1-3-风险投资" class="headerlink" title="10.1.3 风险投资"></a>10.1.3 风险投资</h3><p>&ensp;&ensp;&ensp;&ensp;公司将合理评估企业价值。实事求是，把优势充分地展现出来，对劣势提出切实可行的改进方案，并提供一份完备的商业计划书。商业计划书将向风险投资公司证明企业的能力，展示项目的优劣，反映出创业思路和周密的计划以及管理素质，同时体现对风险投资公司的负责态度。由政府牵头获取重庆中旅集团、四川万景融汇集团投资，预计重庆中旅集团投资800万元，四川万景融汇集团投资500万元。</p><h2 id="10-2-发展资金"><a href="#10-2-发展资金" class="headerlink" title="10.2 发展资金"></a>10.2 发展资金</h2><p>&ensp;&ensp;&ensp;&ensp;在经营初期5年内，暂不需要再次融资，在发展中期，出于战略考虑和公司发展情况，可能根据需要进行再次融资。为保证融资资金使用期限长且没有定期偿付的财务压力，同时增加企业的资信和实力，我们采用股权融资方式预计融资2000万资金。通过对公司进行估值，预计出让10%的股份取得1500万的资金。再次融资后预期股权结构如下：</p><p>表18：融资后预期股权结构表</p><div class="table-container"><table><thead><tr><th>股东姓名</th><th>初始股权</th><th>重组股权</th></tr></thead><tbody><tr><td>政府</td><td>51%</td><td>46%</td></tr><tr><td>重庆中旅集团</td><td>20%</td><td>15%</td></tr><tr><td>四川万景融汇集团</td><td>12.5%</td><td>12.5%</td></tr><tr><td>未来股东</td><td>无</td><td>10%</td></tr><tr><td>张子颖</td><td>0.75%</td><td>0.75%</td></tr><tr><td>张致浩</td><td>0.5%</td><td>0.5%</td></tr><tr><td>任钰茹</td><td>0.75%</td><td>0.75%</td></tr><tr><td>刘婷</td><td>1%</td><td>1%</td></tr><tr><td>罗海燕</td><td>1%</td><td>1%</td></tr><tr><td>罗元婷</td><td>1%</td><td>1%</td></tr><tr><td>吴吉鸿</td><td>2%</td><td>2%</td></tr><tr><td>沈庆新</td><td>2%</td><td>2%</td></tr><tr><td>股东A</td><td>0.75%</td><td>0.75%</td></tr><tr><td>股东B</td><td>0.5%</td><td>0.5%</td></tr></tbody></table></div><h2 id="10-3-政策补贴资金"><a href="#10-3-政策补贴资金" class="headerlink" title="10.3 政策补贴资金"></a>10.3 政策补贴资金</h2><p>&ensp;&ensp;&ensp;&ensp;本项目从根本上走的是乡村振兴发展路线，直接参与乡村建设，将企业的优势转化为乡村发展的动能；发挥企业的枢纽型功能，通过搭桥梁、建平台，与政府共同投身乡村建设，将大力建设现代农业产业园，一、二、三产业融合发展先导区全国休闲农业和乡村振兴旅游示范创建项目，农商互联网，国家农村产业融合发展示范园，生态区域循环农业项目。预计各项目补贴如下：</p><p>表19：预计项目补贴表</p><div class="table-container"><table><thead><tr><th>建设项目</th><th>预计补贴</th></tr></thead><tbody><tr><td>现代农业产业园（省级）</td><td>3000万</td></tr><tr><td>一、二、三产业融合发展先导区全国休闲农业和乡村振兴旅游示范创建项目</td><td>2500万</td></tr><tr><td>农商互联网</td><td>1000万</td></tr><tr><td>国家农村产业融合发展示范园</td><td>5000万</td></tr><tr><td>区域生态循环农业项目</td><td>1000万</td></tr><tr><td>绿色循环高效特色农业促进项目</td><td>1800万</td></tr></tbody></table></div><p>&ensp;&ensp;&ensp;&ensp;预计补贴共计共1亿4300万，其中预计先获得现代农业产业园，一、二、三产业融合发展先导区全国休闲农业和乡村振兴旅游示范创建项目政策补贴，用于公司运营及其他后续项目发展。</p><h1 id="十一、风险投资"><a href="#十一、风险投资" class="headerlink" title="十一、风险投资"></a>十一、风险投资</h1><h2 id="11-1-产品质量风险"><a href="#11-1-产品质量风险" class="headerlink" title="11.1 产品质量风险"></a>11.1 产品质量风险</h2><p>&ensp;&ensp;&ensp;&ensp;有机茶叶及生态旅游的商业模式对有机茶叶的质量要求越来越高。例如在产品制造过程中使用劣质原料，添加有毒物质的情况 ；为延长产品保质期，超量使用食品添加剂，滥用非食品加工用化学添加剂，加工食品过程中使用劣质原料等各种会造成食品质量的问题。产品有质量问题，会严重影响公司的声誉和市场地位。同时还有在产品各个阶段可能对产品质量产生影响的因素。</p><h3 id="11-1-1-气候自然因素的影响"><a href="#11-1-1-气候自然因素的影响" class="headerlink" title="11.1.1 气候自然因素的影响"></a>11.1.1 气候自然因素的影响</h3><p>&ensp;&ensp;&ensp;&ensp;我们的产业模式是有机茶叶和生态旅游的结合，因此自然因素对我们的影响很大，有很多不确定的自然因素影响原料的产量和质量。因此在本项目在运营过程中，无法对 经营产品的数量等做准确的估计，从而在资金的分配上和市场调节上，难以达到高效的配置，达到预期的效果。</p><p>&ensp;&ensp;&ensp;&ensp;应对策略：可以在有机茶叶种植基地添加温室大棚并配备卷帘机，一来可以起到保温的效果，预防寒潮等气象灾害带来的突然性降温；二来有了卷帘机在保温的前提下可以保证我们的茶叶可以有稳定的光照。</p><h3 id="11-1-2-仓库的货损"><a href="#11-1-2-仓库的货损" class="headerlink" title="11.1.2 仓库的货损"></a>11.1.2 仓库的货损</h3><p>&ensp;&ensp;&ensp;&ensp;由于物流配送的需要以及像疫情等不确定因素，我们的货物可能会在物流仓库堆放积压，结合我们货物本身的特点，在存储过程中必然会带来一定的货损（例如产品保质期以及变质的问题），对这个情况的妥善处理是必须要考虑的问题。</p><p>&ensp;&ensp;&ensp;&ensp;应对策略：对物流配送进行周密计划，使得订单可以以最快的速度发出，保证产品的新鲜程度；其次在仓库设立专业的仓储室，用来应对未来的特殊情况。</p><h3 id="11-1-3-对产品原料生产过程的监控"><a href="#11-1-3-对产品原料生产过程的监控" class="headerlink" title="11.1.3 对产品原料生产过程的监控"></a>11.1.3 对产品原料生产过程的监控</h3><p>&ensp;&ensp;&ensp;&ensp;因为我们的品牌形象就是有机食品，要严抓质量问题。所以，我们所销售的产品一定要完全符合我们对外宣传的标准，做到言行合一，这是我们对消费者的保证也利于我们产品品牌效应的树立。否则将对我们的形象大大折扣，也会危及公司的生存， 因此我们必须安排人员对全部生产过程进行有效的监控，从源头抓牢质量问题。</p><h2 id="11-2-竞争风险"><a href="#11-2-竞争风险" class="headerlink" title="11.2 竞争风险"></a>11.2 竞争风险</h2><p>&ensp;&ensp;&ensp;&ensp;竞争关系在各行各业都是存在的，我们应该做的是发现自己的优势和劣势，同时要认识到竞争对手的优势，我们要二者相结合去看待问题，这会让我们在竞争路上走得更远。</p><p>竟争风险大体如下：</p><p>&ensp;&ensp;&ensp;&ensp;1）竞争对手的针对性行为（如降价、产品的升级换代等）； </p><p>&ensp;&ensp;&ensp;&ensp;2）自身产品不完美而造成的顾客缺失</p><p>&ensp;&ensp;&ensp;&ensp;3）为了竞争的最后胜利双方进行恶性竞争。</p><p>应对策略：</p><p>&ensp;&ensp;&ensp;&ensp;1）我们应树立超前意识，积极寻找并抓住市场的最新切入点，在保证自身产品质量的前提下，不断开发具有特色的新产品，不断在技术上领先建立技术壁垒，进而提高企业的竞争力增强抗风险能力</p><p>&ensp;&ensp;&ensp;&ensp;2)企业将保持和客户的紧密联系，保证销量的稳定和增长，同时规划给予客户的信用融资，既要尽量的争取更多客户，也要考虑应收账款的回收率，防止发生巨额损失，在必要时要求对方以资产作抵押或提供担保人，同时给予客户现金折扣及商品折扣等优惠条件。户，也要考虑应收账款的回收率，防止发生巨额损失，在必要时要求对方以资产作抵押或提供担保人，同时给予客户现金折扣及商品折扣等优惠条件。</p><p>&ensp;&ensp;&ensp;&ensp;3)竞争双方投入力量和成本越多，竞争规模就越大，市场竞争风险就越大。对于竞争主体来说，必然会形成巨大的经营压力，我们应该精进企业的经营管理，提高具有比较准确时效性的决策水平，规避风险损失，提高经营效益。</p><h2 id="11-3-政策风险"><a href="#11-3-政策风险" class="headerlink" title="11.3 政策风险"></a>11.3 政策风险</h2><p>&ensp;&ensp;&ensp;&ensp;有机茶叶及生态旅游结合的商业模式同样受政策影响巨大，拥有政策优势存在的情况下会非常有益对我们的商业模式。有政策的支持发展不但会在销路上有门槛的降低，并且在产品的出口以及原料的进口的海关出会降低甚至是免除关税的福利，这会大大降低我们的成本。最重要的是，国家的政策支持就是我们品牌效应树立的助推剂，我们可以借着政策的东风扩展我们的产品市场。</p><p>&ensp;&ensp;&ensp;&ensp;同时还一些不确定性，简单地讲就是一些对政策有极大依赖的投资项目，公司如果不能及时考虑好撤退、转向或是减少对政策的依赖，一旦政策调整，都将面临难堪的境地。如下：</p><p>&ensp;&ensp;&ensp;&ensp;1）国家政策、国家宏观经济政策、政治政策、环保政策、知识产权保护政策等的变动以及各地区相关政策的变动会直接影响到企业融资、产品销售、原材料供应、技术保密与发展、人员招聘等方面；</p><p>&ensp;&ensp;&ensp;&ensp;2)另外其他国家的政策也可能会影响我们,因为我们原材料的产量减少，原材料出口国提高价格，也会加重我们企业的成本负担，这都是政策变动带来的问题。</p><p>&ensp;&ensp;&ensp;&ensp;应对策略：公司设立有关条款要严格遵守国家法律法规，一切以不违反国家政策为前提；公司将会与行业协会保持联系，加强对有关政策法规的关注和分析，并及时调整公司的经营战略和销售策略；企业要有一定对未来政策信息变化风向的捕捉，从而做出一定的应对措施，增强企业生存的兼容性。</p><h2 id="11-4-风投撤出风险"><a href="#11-4-风投撤出风险" class="headerlink" title="11.4 风投撤出风险"></a>11.4 风投撤出风险</h2><p>&ensp;&ensp;&ensp;&ensp;公司如果通过风险投资获得了资金支持，必须面对风投撤出的风险。如果公司无法按时到达风投的预期目标，或者市场环境发生变化，可能会导致风投方撤资，对公司的经营和发展带来重大影响。</p><p>&ensp;&ensp;&ensp;&ensp;所谓风险投资退出,是指风险企业发展到一定阶段以后,风险投资者认为有必要是时候将风险资本从风险企业中退出,因而选择一定的方式(公开上市、出售或回购、清算)通过资本市场将风险资本撤出,以求实现资本增值或者降低损失,为介入下一个项目做准备。高收益是通过风险投资成功的退出而实现的,可行的退出机制是风险投资成功的关键。以下是关于风投撤出的情况，公司可以对应这些进行相应的对策来解决问题。</p><h3 id="11-4-1-撤出时间"><a href="#11-4-1-撤出时间" class="headerlink" title="11.4.1 撤出时间"></a>11.4.1 撤出时间</h3><p>&ensp;&ensp;&ensp;&ensp;一般来说，公司未来投资的收益先知高于公司的市场价值时是风险投资撤出的最佳时机。经过几年，公司经过了导入期和成长期，产品在市场上已有相当的知名度，发展趋势很好，同时公司在国内建立了良好的形象，收益价值可能大于其市场价值，在成熟期退出可获得丰厚的回报。</p><h3 id="11-4-2-撤出方式"><a href="#11-4-2-撤出方式" class="headerlink" title="11.4.2 撤出方式"></a>11.4.2 撤出方式</h3><p>&ensp;&ensp;&ensp;&ensp;1)股份转让：风险资本家撤出资本的途径转让股份给公司内部人员、同行业企业、产业新加人（经公司主要负责人同意）等，从而实现资本的顺利退出。</p><p>&ensp;&ensp;&ensp;&ensp;2)股份上市（IPO）：上市是企业风险退出的最优方式，但是国家对企业上市的标准要求是非常高的，我们在短期内难以达到。虽然国家正在尽力建立要求水平较低的上市板块，但我们要求采取此种方式难度仍然很大。其优点在于投资收益高，企业获得大量现金流入，增强流动性，提高公司知名度及形象，且可以留住核心人员及吸引人才加入。</p><p>&ensp;&ensp;&ensp;&ensp;3)股份回购：公司创始人可以用自己的在公司所获得的部分利润来回购风险投资商的股份，从而使风险投资顺利退出。其优点在于符合风险资本循环，投资者可正在任意时期将自己拥有的投资</p><p>&ensp;&ensp;&ensp;&ensp;4)破产清算：如果创业公司经营不善，其他退出方式无法实现的情况下，风投公司只得采取破产清算的方式尽量减少损失。方法是宣布破产后，投资人把创业公司中值钱的资产卖掉，提取属于自己的部分现金以抵消前期的投资。</p><p>&ensp;&ensp;&ensp;&ensp;应对策略：资金链是公司的命脉。资金链管理能够确保安全的、连续的现金流，只有这样才能保证企业正常的经营活动。资金链管理在保证主链的资金充分宽余之外，还必须有相当的融资能力，在每个循环后要有增值，确保利润最大化。资金链的畅通是企业的关键。面对风投撤资的风险，首先要做的是与投资人进行商谈，是否可以说服投资人，是否还可补救从而挽救现状；如果是没有商谈成功，投资人依旧选择撤资，公司就快速准备下一轮的融资，让公司得到新的资金链从而正常运行。最后重新制定计划，重新审视公司的经营和前景，认真分析投资人撤资的原因，这也是公司自我发展的一次好机会，可以及时发现自己的问题，为了未来公司的发展打下好的基础。</p>]]></content>
      
      
      <categories>
          
          <category> 阡陌茶旅 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阡陌茶旅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>传承华夏语 共筑强国梦 ——暑期“三下乡”社会实践活动</title>
      <link href="/2025/07/16/country/"/>
      <url>/2025/07/16/country/</url>
      
        <content type="html"><![CDATA[<h1 id="传承华夏语-共筑强国梦-——暑期“三下乡”社会实践活动"><a href="#传承华夏语-共筑强国梦-——暑期“三下乡”社会实践活动" class="headerlink" title="传承华夏语 共筑强国梦 ——暑期“三下乡”社会实践活动"></a>传承华夏语 共筑强国梦 ——暑期“三下乡”社会实践活动</h1><p>2025-07-16 16:59      来源：周口网   &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;链接到：<a href="https://cnews.chinadaily.com.cn/a/202507/16/WS68776f42a3106af2b3c7471a.html">周口网</a></p><p>&ensp;&ensp;&ensp;&ensp;为激发基层群众学习普通话的内生动力，促进城乡文化交融互鉴，2025年6月28日至7月11日，长治学院化学系“化语星火”实践团队在负责人张静琪的带领下开展了为期14天的“推普助力乡村振兴”社会实践活动，助力乡村振兴。</p><p>&ensp;&ensp;&ensp;&ensp;团队在初期分为两组展开行动：第一组为儿童开设趣味普通话课堂，通过生动活泼的教学方式，重点教授日常礼貌用语；第二组深入走访村民，结合精心设计的问卷调查，全面掌握各年龄段村民的普通话水平现状。在走访过程中，团队成员不仅向村民发放普通话宣传手册，还耐心讲解普通话学习的重要性，并通过趣味化学实验演示激发村民尤其是青少年的参与热情，为后续工作的顺利开展奠定了坚实基础。</p><p><img src="https://cds.chinadaily.com.cn/dams/capital/image/202507/16/68776f186b8efd9fa641d651_m.jpg" alt="img"></p><p>&ensp;&ensp;&ensp;&ensp;在青少年实验课程中，团队先引导他们观看科普视频，然后帮助他们用普通话描述实验现象和原理，使他们的表达从最初的生涩逐渐变得流畅自如。课程还创新性地展示方言与普通话的关联性，结合水垢实验等生活化场景教授专业词汇，极大地激发了学生的学习兴趣。</p><p>&ensp;&ensp;&ensp;&ensp;针对成年学员，团队开设专门课程，强调普通话在就业和发展中的重要性，通过生活中的化学知识演示教学、模拟实验室场景角色扮演、音频回放纠音等多元化方式，有效提升了学员的发音准确度。</p><p>&ensp;&ensp;&ensp;&ensp;针对儿童常见的平翘舌发音问题，团队设计了绕口令强化训练课程，并开展一对一纠音指导，鼓励孩子们将方言词汇转化为普通话表达，有效提升了他们的语言交流自信心。同时，团队巧妙结合金属变化现象讲解化学原理，通过互动式教学既巩固了知识要点，又培养了孩子们的科学思维能力。</p><p>&ensp;&ensp;&ensp;&ensp;对于中老年群体，团队重点指导”线上挂号”等生活场景中的常用表达，帮助他们实现实用化的流畅交流；在开展焰色实验时，特别引导学生用普通话完整陈述实验过程，全面提升了他们的观察能力、语言表达能力和逻辑思维能力。</p><p><img src="https://cds.chinadaily.com.cn/dams/capital/image/202507/16/68776f196b8efd9fa641d653_m.jpg" alt="img"></p><p>&ensp;&ensp;&ensp;&ensp;此外，团队还组织学员系统复习普通话语法知识，结合实际生活场景进行表达训练；举办化学家故事会，用标准的普通话讲述科学家的励志故事，让孩子们深刻感受到普通话在文化传播中的重要作用。</p><p>&ensp;&ensp;&ensp;&ensp;在活动最后阶段，团队开展入户普通话水平测试和个性化答疑，并在全面复盘后制定了长期帮扶计划，确保活动成果得到持续巩固和深化。</p><p>&ensp;&ensp;&ensp;&ensp;十四天的躬身实践，使队员们完成了从校园学子到社会服务者的蜕变，也深刻体会到语言作为文化纽带对乡村振兴的战略价值。团队负责人张静琪表示:“作为新时代的青年学子，我们深知这只是一个开始。未来的路还很长，或许充满艰辛，但只要我们怀着赤子之心，脚踏实地，就一定能为乡村振兴贡献自己的一份力量。正如我们的队名”化语星火”所寓意的：用化学的专业知识，以语言为纽带，让点点星火，照亮乡村振兴之路。这段珍贵的实践经历，将永远铭刻在我们的青春记忆里，激励着我们继续向前。”</p><p><img src="https://cds.chinadaily.com.cn/dams/capital/image/202507/16/68776f1a6b8efd9fa641d655_m.jpg" alt="img"></p><p>&ensp;&ensp;&ensp;&ensp;当看到孩童们字正腔圆的朗诵、村民们流畅使用手机政务功能时，实践队员们不仅真切感受到”小推普”撬动”大振兴”的杠杆效应，而且更加明晰新时代青年的责任担当，认识到乡村振兴既要”富口袋”更要”富脑袋”，团队更在攻坚克难中锻造了”聚是一团火，散作满天星”的协作精神。  “化语星火”团队将以此次活动为起点，持续发挥专业优势，在推广国家通用语言文字、服务乡村振兴的道路上笃行不怠，让青春之花绽放在祖国最需要的地方。<br>(长治学院 “化语星火”实践团队  张静琪)</p>]]></content>
      
      
      <categories>
          
          <category> 媒体报道 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 媒体报道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“渊鸿”水空智巡系统——突破介质边界的水空两栖智能巡检设备</title>
      <link href="/2025/07/07/plane/"/>
      <url>/2025/07/07/plane/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-执行总结"><a href="#第一章-执行总结" class="headerlink" title="第一章 执行总结"></a><strong>第一章 执行总结</strong></h1><h2 id="1-1-执行概要"><a href="#1-1-执行概要" class="headerlink" title="1.1 执行概要"></a><strong>1.1 执行概要</strong></h2><p>&ensp;&ensp;&ensp;&ensp;随着社会的发展，环境问题日益突出，监测手段多，但是成本高，效率低本项目设计了一种基于自主设计的水陆空三栖无人机的环境监测系统。目前传统的环境监测手段主要以空气监测站、人工定期巡查、视频监控等方式的。存在占地面积大、检测成本高、数据反馈不及时以及浪费大量的人力资源，导致在较高监测成本的情况下污染物超标排放和偷排现象时有发生等缺陷。本项目通过对无人机的两栖改进、算法的优化设计以及便捷的可视化软件的研发，已申请多项实用新型专利及发明型专利，软件方面已获取四项软件著作权。该产品不仅实现了高效实时的两栖环境监测，且极大的降低了系统的购置及运维成本，势必成为环境执法的利器。下图为系统展示图。</p><p><img src="/img/plane/image1.png" alt="图1.1 两栖环境监测系统渲染图"></p><h3 id="1-1-1-创新性"><a href="#1-1-1-创新性" class="headerlink" title="1.1.1  创新性"></a><strong>1.1.1  创新性</strong></h3><p>&ensp;&ensp;&ensp;&ensp;(1)通过对水陆空三栖无人机的起落架进行机械结构的改造，配合相应控制系统设计，实现了水面起降和滑行功能；</p><p>&ensp;&ensp;&ensp;&ensp;(2)使用低密度、高强度材料作为无人机起落脚架，自主设计的流线型外形通过有限元分析验证具有较低的阻力。配合全包外壳的防水处理和水样采集模块机翼和浮球中分别添加特殊气体传感器、温湿度传感器、灰尘传感器和水质传感器等就可以实现远比空中飞行节能的水面滑行模式、水样采集功能及远程实时环境监测能力；</p><p>&ensp;&ensp;&ensp;&ensp;(3)无人机外侧装有无线充电线圈，电量不足20%时，自动停靠最近的光伏充电充电中继站，中继站通过三目摄像头引导无人机进行自主充电；</p><p>&ensp;&ensp;&ensp;&ensp;(4)本团队自主研发了所有的软件、APP以及网页。它们能够将无人机采集到的数据进行可视化处理和实时显示，使环境监测数据的可读性更强，极大程度地优化了用户体验；</p><p>&ensp;&ensp;&ensp;&ensp;(5)采用自主改进优化的算法模型处理庞杂的环境数据信息。利用了多种智能算法以及机器学习中的KNN与岭回归算法以及LSTM长短期记忆神经网络进行疑似污染源的标定以及短期数据预测，大大提高了环境数据处理的效率、提高了数据反映的实时性；</p><p>&ensp;&ensp;&ensp;&ensp;(6)在续航时间、飞行距离、覆盖范围等方面采用图论的经纬度距离算法，具有很强的可行性，减少能源的消耗。经过对污染源的预标定和自动规划后，本系统能够实现无人机的定点定时自动巡检，实现自动化智能巡检，极大地节省了人力物力资源。</p><h3 id="1-1-2-创意性"><a href="#1-1-2-创意性" class="headerlink" title="1.1.2  创意性"></a><strong>1.1.2  创意性</strong></h3><p>&ensp;&ensp;&ensp;&ensp;(1)产品应用自主设计的水陆空三栖无人机及多样化的可视化软件配合使用，实现空中大气环境监测及水质环境监测，可有效解决现有环境监测存在的问题。属于行业首创，旨在打击环境乱偷排漏排的问题，成为环境执法的利器。</p><p>&ensp;&ensp;&ensp;&ensp;(2)在整个系统单品的基础上推出面向大众的公众号举报服务。通过与环境执法部门建立合作，收集居民的举报信息并做出区域污染源精确定位并实时反馈给环保部门，方便环保部门迅速给出措施。</p><p>&ensp;&ensp;&ensp;&ensp;(3）产品可根据不同的用户需求添加不同的传感器模块，为用户提供了极大地开放性，任何组织、个人都可以接入本系统，同时对本产品的外围代码进行开源，使得有能力的用户可以按照需求修改代码，可以丰富产品的多样性，使得用户之间可以产生所谓”差异化”，可以满足用户使用上的个性化。</p><h2 id="1-2-产品技术"><a href="#1-2-产品技术" class="headerlink" title="1.2  产品技术"></a><strong>1.2  产品技术</strong></h2><p>&ensp;&ensp;&ensp;&ensp;基于两栖无人机依托的环境监测系统，致力于打造生态环境的”智”造者。系统一共涉及三个主模块：无人机机体、硬件模块和软件模块。硬件模块又包括定位模块、功能控制模块、飞行控制系统模块、通信模块四个子模块。软件模块包括无人机控制软件、上机位软件、手机终端和网页，基于这些技术团队已申请多项实用新型专利、发明型专利和四项软件著作权。</p><p><img src="/img/plane/image2.png" alt="图1.2.1 初代起落架在淡水湖和空中试验"></p><h3 id="1-2-1-两栖无人机机械结构"><a href="#1-2-1-两栖无人机机械结构" class="headerlink" title="1.2.1  两栖无人机机械结构"></a><strong>1.2.1  两栖无人机机械结构</strong></h3><p>&ensp;&ensp;&ensp;&ensp;无人机机体为四旋翼飞行器，其上可搭载各种传感器，用于不同场景下的环境监测。无人机的‌机身采用轻质材料制造，‌以减轻重量同时保持足够的强度和刚度，‌承受飞行过程中的各种载荷。‌机身内部设有电池舱、‌传感器舱和数据传输设备等组件。‌‌翼面是产生升力的关键部分，采用四翼结构，具有较高的升力系数和较低的阻力系数，‌以提供足够的升力和稳定的飞行。采用无刷电机，‌具有高效、‌低噪音和长寿命的特点。‌螺旋桨的设计具有足够的推力和稳定的飞行特性，‌同时考虑到安全性和节能性的要求。起落架机械结构进行了改进，不仅可以空中飞行，还拥有水面起降和水面滑行功能，无人机已受理实用新型专利，整套系统已受理发明型专利。</p><h3 id="1-2-2-硬件模块"><a href="#1-2-2-硬件模块" class="headerlink" title="1.2.2  硬件模块"></a><strong>1.2.2  硬件模块</strong></h3><p>&ensp;&ensp;&ensp;&ensp;无人机主要由STM32和DJINAZA控制定位模块、功能控制模块、飞行控制系统模块、以及通信模块四个部分。其中水质监测模块实现了对水质的PH、浊度、电导率以及水温的实时监测；大气监测模块实现了对大气的PM2.5、CO2、温湿度等指标的实时监测；通信模块实现了功能控制模块所采集的数据与地面站之间的实时数据传输；飞行控制模块实现了无人机稳定安全运动，并且能够自由的在空中飞行、水面起降和水面滑行三种模式之间切换。</p><h3 id="1-2-3-软件模块"><a href="#1-2-3-软件模块" class="headerlink" title="1.2.3  软件模块"></a><strong>1.2.3  软件模块</strong></h3><p>&ensp;&ensp;&ensp;&ensp;（1）上机位软件：使用基于Python语言开发，基于 PyQt，Matplotlib、GraphTree等开源库。将无人机采集到的实时环境监测数据显示，包括PM2.5浓度值、二氧化碳浓度值、外部温度、水质温度值等关键数据进行可视化，使用柱状图等方式呈现。</p><p>&ensp;&ensp;&ensp;&ensp;（2）无人机控制软件：基于 QGroundControl(以下简称为QGC)进行二次开发而成。该地面站可通过无线数传将机载计算机以及飞行控制的信息传回地面站PC/移动端，实现对无人机的精准降落以及航点规划等，也可通过地面站控制机载stm32控制板，进而控制云台实现目标追踪或机械臂精准控制，也可通过地面站搭配机载HDMI图传实现实时视频广播等等。</p><p>&ensp;&ensp;&ensp;&ensp;（3）通过使用JavaScript和Java开发的网页与手机应用程序，无人机实时监测的环境数据得以在手机应用和网页平台上进行可视化展示。这一功能极大地提升了用户获取环境信息的便捷性，并允许相关机构迅速作出响应和迅速处理。此外，岭回归算法被应用于短期预测污染趋势，而图传技术则确保了数据的实时传输。</p><h2 id="1-3市场描述"><a href="#1-3市场描述" class="headerlink" title="1.3市场描述"></a><strong>1.3市场描述</strong></h2><p>&ensp;&ensp;&ensp;&ensp;中国有世界上最多的生产制造企业。人口众多，环境污染严重。当前，我国多地区面临大气环境质量改善的巨大压力。针对大气污染治理，环境保护部副部长翟青日前在国务院新闻办举行的新闻发布会上指出，中国正在从国家宏观战略层面对大气污染防治进行科学的顶层设计，提出”一揽子”环境政策和经济政策，分区施策，分阶段推动。长期以来，环境污染的监督管理、环保执法都缺乏监督手段，超标排放和偷排现象时有发生，环境监察工作任务重、难度大。由于大气污染具有涉及区域范围较大、区域之间污染物传输量大、污染源种类多、污染因子复杂等特点，环境监管难度非常大。地方政府需要一套快速、高效的监测系统进行实时监控，克服人工、视频、监测站等监管存在的数据支撑不足等问题，实现精准监控，以满足大气污染治防治需求。本监测系统覆盖大气和水质，能够实现全方位的环境监测，配合自主设计的算法以及软件，能够有效解决环境监测问题，属于行业内首创，核心竞争力较强。</p><h2 id="1-4项目总结"><a href="#1-4项目总结" class="headerlink" title="1.4项目总结"></a><strong>1.4项目总结</strong></h2><p>&ensp;&ensp;&ensp;&ensp;环境问题是任何时刻都不可忽视的，本团队研发的产品旨在解决目前环境偷排漏排的问题，严厉打击此番行为，为环境部门的执法提供强有力的技术支持，成为环境保障的有力武器。通过与政府部门合作，减少偷排漏排的现象，加强环境监查力度，打造”智能”生态。同时，我们的产品还能够提供详尽的数据分析报告，并且为政府制定更加科学合理的环保政策提供有力依据，推动环保法规的完善与执行，极大地提升了环境监查的效率和精准度，以及环境保护措施的更有效实施方案推动和完善。在”智能”生态的打造过程中，我们注重技术与人文的深度融合。此外还预实行”产教结合”自主培养新型环境监测方式的监测团队，使得团队成员创新思维得到极大提升，达到引领创新产业发展的目的。</p><h1 id="第二章-产品与研发"><a href="#第二章-产品与研发" class="headerlink" title="第二章 产品与研发"></a><strong>第二章 产品与研发</strong></h1><h2 id="2-1设计纲领"><a href="#2-1设计纲领" class="headerlink" title="2.1设计纲领"></a><strong>2.1设计纲领</strong></h2><p>&ensp;&ensp;&ensp;&ensp;对环境监测区域网格化细分，形成一个多层次综合性的监测系统，利用水陆空三栖无人机采集到各类环境指标值，通过数据预处理后，得到整体区域综合环境指标，存储到数据库层的相应数据库中。各客户可以在网页、APP直观的浏览到监测数据的地表高精度三维重效果动态显示图，实现了用户的多平台在线浏览环境监测数据信息。</p><p>&ensp;&ensp;&ensp;&ensp;应急环境执法方面，辅助区域内环境执法监察大队，全面应用”互联网+执法”系统，及时精准定位污染源，可以不断地提高执法系统应用能力和保障水平，推进应急管理体系和能力现代化，确保执法系统应用工作取得实效。</p><p>&ensp;&ensp;&ensp;&ensp;开发基于以上设计要领，构建群众举报、问题发现、综合分析、追因溯源、预测预报、成效评估全链条的监测与评价体系，助力《”十四五”生态环境监测规划》全面落实。</p><h2 id="2-2-功能详解"><a href="#2-2-功能详解" class="headerlink" title="2.2 功能详解"></a><strong>2.2 功能详解</strong></h2><p>（1）全天候同时监测大气及水质环境</p><p><img src="/img/plane/image3.png" alt="图2.1 摄像头全天候取证影"></p><p>&ensp;&ensp;&ensp;&ensp;本监测系统搭载在特殊的自主结构改造的两栖无人机上，通过在无人机上搭载不同种类模块化气体传感器，以及在水面滑行的流线型浮球中搭载模块化水质监测传感器，直接对水质样本进行检测，实现同时监测大气以及水质环境。在无人机上白天搭载OV7725摄像头，夜间搭载红外热成像摄像头，无人机适应在不同天气状况拍照取证。</p><p>（2）模块化设计</p><p>&ensp;&ensp;&ensp;&ensp;传感器采用模块化设计，每个传感器模块独立可拆卸替换。无人机可以在不同领域执行不同种类的污染物含量监测任务时，搭载不同种类的传感器，既减轻了无人机的飞行重量，又增加了监测污染物的种类。飞行器的每个模块皆可独立工作或协同工作，高级协同由中央控制器完成（某些情况下也可不使用），初级协同时不需经过中央控制器协调。</p><p>（3）无人机水陆空三栖使用</p><p>&ensp;&ensp;&ensp;&ensp;无人机机械结构通过特殊改造，使其能够实现空中飞行以及水面滑行；自主设计了高海况下水上无人机自主着水控制系统，避免了舵面对海浪高频扰动的过度补偿，能够通过DJINAZA飞行控制器在空中飞行、水面起降和水面滑行三种模式之间自动切换，极大提高了作业范围和续航能力。</p><p>（4）地面太阳能无线充电中继站</p><p>&ensp;&ensp;&ensp;&ensp;通过GPS定位无人机飞行到地面中继站附近；固定在地面中继站上的摄像头对无人机进行Kalman滤波、定位捕捉、背景差分等操作；结合无人机和地面中继站回传的差分信息，确定无人机的精确位置，引导无人机自主降落。中继站四周安装大小合适的太阳能板，日照时间段给蓄电池充电，且中继站里安装无线充电线圈，并可对无人机进行无线充电。</p><p>（5）特征数据提取处理</p><p>&ensp;&ensp;&ensp;&ensp;从公众关注角度讲，大多数人只需要一个综合的污染指标，太过繁杂的环境数据反而难以被普遍接受；其次，在实际应用时环境数据采集量较大，如果直接对原始数据利用机器学习算法进行处理会占用大量硬件资源并花费很多时间，无法满足环境数据实时性显示的要求。因此我们首先选择了通过PCA主成分提取法以及Q型聚类算法对这几类环境数据进行了主成分的提取，用综合性变量来解释环境数据的大部分特征。</p><p>（6）基于机器学习的污染源预测和路径规划</p><p>&ensp;&ensp;&ensp;&ensp;自主改进的二边逐项修正法迭代求取疑似污染源的位置，自行改进的自适应滤波算法以及基于机器学习的KNN、岭回归和LSTM长短期记忆神经网络进行污染数据的短期预测。实现对预标定区域进行常规巡检；实时监测污染物浓度动态变化，调整飞行路径；有效提高环境检测效率以及节省电能、节能减排的功能和作用。</p><p>（7）移动设备端软件</p><p>&ensp;&ensp;&ensp;&ensp;自主研发的APP能够实时展示环境监测数据，它配备了全面的水陆空三栖无人机移动区域可视化功能，并集成了基于机器学习的预测技术。</p><p>（8）数据可视化软件以及网页显示网页</p><p>&ensp;&ensp;&ensp;&ensp;数据可视化软件使用Python语言开发，可视化网页使用 HTML开发，基于PyQt，Matplotlib、GraphTree等开源库。将无人机采集到的实时环境监测数据显示，包括PM2.5浓度值、二氧化碳浓度值、外部温度值、水质温度值等关键数据进行可视化，使用柱状图等方式呈现。</p><p>（9）上位机控制软件</p><p>&ensp;&ensp;&ensp;&ensp;水陆空三栖无人机的上位机控制软件基于QGroundControl(以下简称为QGC)进行二次开发而成。该地面站可通过无线数传将机载计算机以及飞行控制的信息传回地面站PC/移动端，实现对无人机的精准降落以及航点规划等，也可通过地面站控制机载stm32控制板，进而控制云台实现目标追踪，也可通过地面站搭配机载HDMI图传实现实时视频广播等。</p><h2 id="2-3-产品可行性分析"><a href="#2-3-产品可行性分析" class="headerlink" title="2.3 产品可行性分析"></a><strong>2.3 产品可行性分析</strong></h2><p>&ensp;&ensp;&ensp;&ensp;我们的团队开发的产品源自于一项大学生创新创业项目科研课题———“双碳精灵”，它是社区环境监测领域的先锋。融合了人工智能技术，目前正受到国内外学者的广泛关注和研究。该产品建立在扎实的学术研究之上，采用了科学的分析方法和数学模型，并通过机器学习技术不断优化这些模型，旨在为用户提供卓越的使用体验。产品实现了多维度的环境监测，将监测区域细分为网格，使监测数据可视化，并支持多平台访问，从而协助环境执法和应急监测工作。它实现了环境的实时监测和应急响应，有效解决了”违法者行动比执法者快一步”的问题。</p><p>1.替代传统的环境监测模式</p><p>&ensp;&ensp;&ensp;&ensp;本产品能够完全取代传统的环境监测方法，并且具备实时预测和两栖监测等传统环境监测所不具备的独特优势。环境监测成为当今社会日益关注的一个问题，市场也是日益火爆，环境监测仪器的销量持续增长，数据图如下所示，可以看出本产品作为有效的环境监测仪器定会深受大众的欢迎。</p><p><img src="/img/plane/image4.png" alt="图2.2 2020-2025年环境监测产品营收"></p><p>2.有效解决环境监测取证难行业痛点问题</p><p>&ensp;&ensp;&ensp;&ensp;目前国内环保执法的一大痛点就是”违法者行动比执法者快一步”，这是由于传统的固定站环境数据收集———专家分析———通知相关部门的模式速度太慢，违法的污染物偷排者往往能够在执法人员赶来前就完成设备停工与卸载。而本项目针对这一大痛点给出了一套完整的实时环境监测方案，利用无人机的灵活、高效数据收集以及服务端智能算法的实时分析，能够有效解决调查取证难的行业痛点问题。</p><p>3.有效降低环境监测成本高的问题</p><p>&ensp;&ensp;&ensp;&ensp;本项目自研率高，有效降低项目成本，依托全国大学生创新创业实验计划，共使用项目经费12000元和市面上的产品进行对比，优势十分明显。下图是本产品同其他品牌无人机环境监测费用对比。</p><p><img src="/img/plane/image5.png" alt="图2.3 环境监测费用对比"></p><p>4.有效提高无人机的续航时间</p><p>&ensp;&ensp;&ensp;&ensp;本项目的水陆空三栖无人机往往需要飞行到一些环境较为恶劣的地方进行样本采集，在这种恶劣环境下极容易发生故障或因电量不足需要及时充电，一旦无人机失联或者因电量不足无法召回将产生不可估量的损失，更加影响气象中心的情况数据传输，对环境监测产生影响。太阳能无线充电中继站恰能解决此类问题，可以在无人机监测地带沿线布置中继站，无人机根据电量及路线自主选择最优中继站地点进行自动磁场耦合式无线充电，进而实现较长时间自动飞行，降低人工运维成本。</p><p><img src="/img/plane/image6.png" alt="图2.4 项目整体架构图"></p><h2 id="2-4-设计方案"><a href="#2-4-设计方案" class="headerlink" title="2.4 设计方案"></a><strong>2.4 设计方案</strong></h2><p>&ensp;&ensp;&ensp;&ensp;本项目水陆空全方位立体式环境监测系统主要由水陆空三栖无人机、自动寻光式光伏板无线充电地面中继站平台、智能数据算法构架、多终端融合可视化及控制平台四个部分组成。</p><p><img src="/img/plane/image7.png" alt="图2.5 硬件部分组成图" style="width: 70%; max-width: 600px;"></p><p>&ensp;&ensp;&ensp;&ensp;无人机硬件部分由STM32和DJINAZA组成，控制着水质监测模块、大气监测模块、通信模块、无人机控制模块四个部分。其中水质监测模块实现了对水质的浊度、温度的实时监测；大气监测模块实现了对大气的PM2.5、二氧化碳、温度等指标的实时监测；通信模块实现了功能控制模块所采集的数据与地面站之间的实时数据传输；飞行控制模块实现了无人机稳定安全运动，并且能够自由的在空中飞行、水面起降和水面滑行三种模式之间切换。</p><p>&ensp;&ensp;&ensp;&ensp;自动寻光式光伏板无线充电地面中继站平台搭载了起降平台，同时机载计算机为树莓派3B+，通过树莓派搭建<br>OpenCV环境，运行计算机视觉相关的代码，读取处理”三目摄像头”搜集的信息，然后计算出无人机的空间坐标位置。最后实现树莓派和&amp;龙&amp;芯1c主控板之间的串口。通过主控板控制树莓派的运行，读取树莓派传输的数据。对其位置做出调整。</p><p>&ensp;&ensp;&ensp;&ensp;电机模块集成了电机及其控制电路，旨在实现龙芯1c主控板对大功率电机的小信号控制功能。该模块通过驱动大功率电机，确保无人机回收舱系统关键活动单元的高效运作，进而保障无人机的稳定性能。</p><p>通过实施全面的水天一体化监测系统，我们能够有效识别和定位污染源，为环境保护和治理提供有力的数据支持和指导，这正是将绿水青山转化为金山银山理念落到实处的生动例证。</p><p><img src="/img/plane/image8.png" alt="图2.6 软件部分组成图" style="width: 70%; max-width: 600px;"></p><p>&ensp;&ensp;&ensp;&ensp;软件系统由三个主要部分构成：上位机、网页端以及移动应用程序（APP)。上位机采用PyQt5进行开发，网页端则基于JavaScript构建，而移动应用程序则是利用Java开发的。这三种平台均能展示采集的数据，为用户提供便捷的途径，以实时查看监测结果。</p><p>&ensp;&ensp;&ensp;&ensp;软件将无人机采集到的数据进行可视化处理并实时显示，使环境监测数据的可读性强，极大程度上提高了用户体验；将采集到的数据结合无人机的位置信息,利用图论进行数学建模，并使用机器学习中的KNN和岭回归算法进行预测；采用Scrapy爬虫爬取谷歌地图并呈现，清楚的呈现环境监测系统所监控区域；使用C#语言进行无人机控制的上位机开发，实现了安全、有效地控制。当无人机在无线电信号接收范围内，操作者在系统运行稳定后进行C#语言编程，让无人机飞行至指定区域采集pm2.5、温度、CO2等样本，然后对传感器打开进行信号接收并转化为数据检测，最终结果由电脑记录，当电脑显示数据接收成功时可操纵其返回；返回后及时处理信息，则可命令其反复几次进行阶段性数据检测，或者到不同区域进行检测，以达到其对环境进行检测的目的，预防和治理环境。本文设计的无人机环境监测系统可充分为社会利用，为环境监测工作人员提供方便，实时监测环境，为大众提前进行天气及恶劣环境的预警，有利于大众的社会生活，也有利于全社会的文明绿色经济发展。</p><p><img src="/img/plane/image9.png" alt="图2.7 软件功能图"></p><p>&ensp;&ensp;&ensp;&ensp;本设计结构合理、智能化程度高、可靠性强，经过测试已达到预期目标，展现出显著的实用价值和社会科学意义。</p><h3 id="2-4-1-硬件架构"><a href="#2-4-1-硬件架构" class="headerlink" title="2.4.1 硬件架构"></a><strong>2.4.1 硬件架构</strong></h3><p>&ensp;&ensp;&ensp;&ensp;系统中，硬件部分主要由STM32微控制器和DJINAZA组件构成，它们共同协作，控制着四个关键模块：水质监测模块、大气监测模块、通信模块以及无人机控制模块。水质监测模块负责实时监测水的浊度和温度这两个重要指标，确保水质的清洁度和适宜性;大气监测模块则对大气中的多种污染物进行实时监测，包括PM10、PM2.5、二氧化氮、二氧化硫、二氧化碳以及温度等关键指标，为环境质量评估提供准确数据;通信模块的作用是确保功能控制模块所采集到的各种数据能够实时、高效地传输到地面站，从而实现数据的即时共享和分析。这一模块的高效运作对于整个系统的实时监控和远程控制至关重要。无人机控制模块确保无人机能够稳定、安全地进行飞行操作的关键。它不仅支持无人机在空中自由飞行，还能够实现水面起降和水面滑行这两种模式的灵活切换，大大增强了无人机的应用范围和灵活性。通过这些模块的协同工作，整个系统能够全面、实时地监测和控制水质和大气质量，同时确保无人机在各种环境下的稳定运行，为环境监测和数据采集提供了强大的技术支持。</p><h4 id="2-4-1-1-基于STM32的飞行器功能模块控制系统"><a href="#2-4-1-1-基于STM32的飞行器功能模块控制系统" class="headerlink" title="2.4.1.1 基于STM32的飞行器功能模块控制系统"></a><strong>2.4.1.1 基于STM32的飞行器功能模块控制系统</strong></h4><p><img src="/img/plane/image10.png" alt="图2.8 RCT6最小系统原理图"></p><p>&ensp;&ensp;&ensp;&ensp;本项目的主控器采用的是战舰STM32F103开发板的V3版本,负责管理包括DHT11温湿度传感器、ATK-S1216F8-BDGPS+北斗定位模块、GP2Y1010AU灰尘传感器以及气压计在内的多个模块。通过UCOSII任务调度机制，这些模块被有效地整合在一起。选择STM32F103RCT6型号的高性能芯片，其工作电压范围为2.0V至3.6V，而外围电路电压则为5V。该芯片内部搭载了32位的Cortex-M3内核，能够达到最高72MHz的时钟频率。其程序存储器ROM容量为256kB，数据RAM为48kB，支持多种通信接口，如串口、SPI、I2C等。单片机的最小系统配置如图所示。</p><h4 id="2-4-1-2-飞行控制系统"><a href="#2-4-1-2-飞行控制系统" class="headerlink" title="2.4.1.2 飞行控制系统"></a><strong>2.4.1.2 飞行控制系统</strong></h4><p>&ensp;&ensp;&ensp;&ensp;本设计采用了轻量级的NAZA飞行控制系统，其具有卓越的鲁棒性，能够很好地适应各种异常环境。</p><p><img src="/img/plane/image12.png" alt="图2.10 着水过程分析展示"></p><p>&ensp;&ensp;&ensp;&ensp;无人机的着陆过程中防止其着水后与海浪的撞击,将整个着水过程分为直线下滑段、末端拉平段、飘落段和水面滑行段。</p><ol><li>直线下滑段</li></ol><p>&ensp;&ensp;&ensp;&ensp;从高度H2开始预先规划好一条参考轨迹,使水上无人机能够稳定而快速的到达近水面。此阶段要稳定其空速,并进行高度跟踪控制。快速的由空中下降至水面，检测时间少一点，环境治理早一点。</p><ol><li>末端拉平段</li></ol><p>&ensp;&ensp;&ensp;&ensp;当高度下降到H1时,进入末端拉平段,水上无人机沿指数轨迹下滑。为了避免着水时的剧烈撞击,此阶段保持较低的油门开度,减小到达水面时的速度。接触水面速度慢一点，水花迸溅小一点，检测精度高一点，环境治理更公正。</p><ol><li>飘落段</li></ol><p>&ensp;&ensp;&ensp;&ensp;当高度降至H0时，便进入了飘落阶段。在这个阶段，发动机将被关闭，以便进一步降低速度。为了确保在接触水面时能够以最佳角度入水，必须执行姿态控制。</p><p>（4）水面滑行段</p><p>&ensp;&ensp;&ensp;&ensp;此阶段水上无人机开始沿水面滑行。刚着水的一段时间,速度仍比较快,应当保持其姿态稳定,避免与水面的撞击;当速度减慢后,应当使其进行波面跟随,避免被剧烈的海浪再次抛起。 据此设计了一种 基于无源理论的非线性高海况下的起降控制系统。</p><p><img src="/img/plane/image13.png" alt="图2.11 水上无人机自主着水控制系统框图"></p><p>&ensp;&ensp;&ensp;&ensp;本项目设计了一种高海况下水上无人机自主着水控制系统.该系统包含速度控制子系统和姿态控制子系统.速度控制子系统由速度动态逆控制器和油门切换模块组成,姿态控制子系统由海浪滤波器、俯仰角反步控制器、高度PID控制、俯仰角切换模块和T--S模糊推理模块组成。其中,俯仰角反步控制器采用指令滤波的反步法设计,引入对控制量的幅值、速率和带宽的限制,有效地缓解了高海况下的舵面饱和问题；海浪滤波器采用基于无源理论的非线性状态观测器设计,能有效滤除输出姿态角信号中的海浪高频扰动,并对低频状态进行重构,避免了舵面对海浪高频扰动的过度补偿。根据对水上无人机着水过程的分析,设计了自主着水控制系统。系统框图如图2.11所示。</p><p><img src="/img/plane/image14.png" alt="图2.12 水上无人机自主着水控制系统框图"></p><p>&ensp;&ensp;&ensp;&ensp;由图2.11可以看出,整个控制系统可分为速度控制子系统和姿态控制子系统.速度控制子系统包含速度动态逆控制器和油门切换模块;姿态控制子系统包含海浪滤波器、俯仰角反步控制器、高度PID控制器、俯仰角切换模块和T—S模糊推理模块。</p><h4 id="2-4-1-3-北斗定位模块"><a href="#2-4-1-3-北斗定位模块" class="headerlink" title="2.4.1.3 北斗定位模块"></a><strong>2.4.1.3 北斗定位模块</strong></h4><p>&ensp;&ensp;&ensp;&ensp;ATK-S1216F8-BDGPS/北斗模块，模块核心采用SkyTraq公司的S1216F8-BD模组，具有167个通道，追踪灵敏度高达-165dBm，输出频率最高可达20Hz。</p><p><img src="/img/plane/image15.png" alt="图2.13 模块流程图"></p><p>&ensp;&ensp;&ensp;&ensp;具有以下特点：1.兼容性强；2.操作方便；3.适应能力强；4.位置信息精度控制在3米以内，完全满足污染物分布栅格图和数据预测的精度要求。</p><p><img src="/img/plane/image16.png" alt=""><br><img src="/img/plane/image17.png" alt="图2.14 通信流程图"></p><h4 id="2-4-1-4-水陆空三栖无人机结构设计"><a href="#2-4-1-4-水陆空三栖无人机结构设计" class="headerlink" title="2.4.1.4 水陆空三栖无人机结构设计"></a><strong>2.4.1.4 水陆空三栖无人机结构设计</strong></h4><p>&ensp;&ensp;&ensp;&ensp;水陆空三栖无人机在整体机械机构上，采用高强度轻质材料，如玻纤、玻纤维、改性塑料、改性PVC、树脂、铝合金等。无人机所有的设备都是以模块化形式安装在机架机身上面，所以优秀的机架设计可以让其他各个元器件安装合理,坚固稳定，拆装方便。</p><p><img src="/img/plane/image18.png" alt="图2.15 无人机的整机模型展示" style="width: 70%; max-width: 600px;"></p><p>&ensp;&ensp;&ensp;&ensp;产品通过对无人机起落架进行机械结构的改造，配合相应控制系统设计，实现了水面起降和滑行功能。下图为水陆空三栖无人机的机械结构实物图。</p><p><img src="/img/plane/image19.png" alt="图2.16 两栖无人机的机械结构"></p><p>&ensp;&ensp;&ensp;&ensp;如图所示，本设计采用四旋翼的结构，以保障采集环境数据及样本时的稳定性。通过低密度、高强度材料作为无人机起落脚架，配合一系列的防水处理和水样采集模块，就可以实现远比空中飞行节能的水面滑行模式、水样采集功能及远程实时环境监测能力。机翼和浮球中分别添加特殊气体传感器、温湿度传感器、灰尘传感器和水质传感器等，同时拥有水面滑行能力和空中飞行能力。</p><p>&ensp;&ensp;&ensp;&ensp;无人机四旋翼下装有四个流线型的漂浮球，且浮球和旋翼连接处独特设计了一种弹簧式卡扣，当其从空中飞往水面滑行时，卡扣松动，使得四个流线型浮球能够在水中随着滑行保持统一的方向，减少在水面行进的阻力。当其从水面飞往空中时，卡扣锁死，使得浮球固定位置不会随风转动，减少了对飞行平衡状态的干扰，避免造成一系列的安全问题。</p><p><img src="/img/plane/image20.png" alt="图2.17 流线型浮球结构以及机械连接结构设计渲染图"></p><p>&ensp;&ensp;&ensp;&ensp;第二代水面起落架正在设计之中，这一代起落架的设计思路是以电机推动辅助支架从无人机中探出，能够更加稳定的在水面起降与滑行，而空中飞行模式中可以将水面起落架收拢，降低空气阻力。</p><h4 id="2-4-1-5-自动追光式太阳能板无线充电地面中继站"><a href="#2-4-1-5-自动追光式太阳能板无线充电地面中继站" class="headerlink" title="2.4.1.5 自动追光式太阳能板无线充电地面中继站"></a><strong>2.4.1.5 自动追光式太阳能板无线充电地面中继站</strong></h4><p>&ensp;&ensp;&ensp;&ensp;通过GPS定位无人机飞行到地面中继站附近；固定在地面中继站上的摄像头对其进行Kalman滤波、定位捕捉、背景差分等操作；结合无人机和地面中继站回传的差分信息，确定其的精确位置，引导其自主降落。起降平台机载计算机为树莓派3B+，通过树莓派搭建OpenCV环境，运行计算机视觉相关的代码，读取处理”三目摄像头”搜集的信息，然后计算出无人机的空间坐标位置。最后实现树莓派和龙芯1c主控板之间的串口通信。</p><p>&ensp;&ensp;&ensp;&ensp;通过主控板控制树莓派的运行，读取树莓派传输的数据。对无人机的飞行做出调整。电机模块由电机和电机控制电路组成，实现龙芯1主控板小信号控制大电机的功能，以大功率电机带动无人机回收舱系统的主要活动单元，保证其稳定的工作性能。校正模块是通过无人机回收舱内部的机械结构，实现对已经降落到无人机回收舱中的无人机位置的机械校正，对降落后的无人机进行位置姿态的微调方便后续的充电补给功能。中继站四周安装大小合适太阳能板，日照时间段给蓄电池充电，且中继站里安装无线充电线圈，可对无人机进行磁场耦合式无线充电。起降平台自动充电能分为机械式自动充电和无显示自动充电，可以有效提高其的续航功能和监测效果。</p><p><img src="/img/plane/image21.png" alt="图2.18 中继站渲染图图2.19中继站实物外观图"></p><p>&ensp;&ensp;&ensp;&ensp;(1)磁场耦合式自动充电：通过对无人机充电接口的改装，在其降落校正后的地点安装受主控板控制的机械式自动充电装置，对其的电量进行补给。</p><p>&ensp;&ensp;&ensp;&ensp;(2)无线式自动充电装置：通过改装无人机充电接口（安装无线充电的接收极），然后在其回收舱的降落平台上安装无线充电的发射极，实现对其电量的非接触式补给。</p><p>(3)自动寻光式太阳能板：</p><p><img src="/img/plane/image22.png" alt="图2.20 自动寻光太阳能板结构模型" style="width: 70%; max-width: 600px;"></p><p>&ensp;&ensp;&ensp;&ensp;为了充分的利用太阳能，提高太阳能的利用率，我们对太阳能光伏板进行了太阳能追踪系统的设计。根据下表的实验检测数据可得，在相同时间，相同条件下采用自动追踪设备要比采用固定安装设备的发电效率高。我们对同一天中的8：00am、12:00pm、16:00pm三个太阳光照明显不同的时间点进行了数据对比，对比发现8：00am的能量接受率相差26.5%、12:00pm的能量接受率相差3.3%、16:00pm的能量接受率相差52%。</p><p><img src="/img/plane/image23.png" alt="图2.21 自动寻光测试数据图"></p><p>&ensp;&ensp;&ensp;&ensp;我们结合光电检测追踪和视日运动轨迹追踪两种追踪方式，吸收二者的长处，使太阳能追踪系统运行更加稳定和精确。即先通过函数计算出太阳位置，控制电机转动，再通过倾角传感器检测太阳能电池板的水平角和倾仰角，如果达到了预设值，说明太阳能电池板垂直于阳光直射方向，此时系统接受太阳光的效率最高；如果和预设值差异较大，则控制电机转动，修正位置。系统运行时，通过倾角传感器反馈的数据，太阳能电池板的高度角与方位角测量结果和查询的天文数据进行对比，多次调试使最大误差不超过5度。</p><p align="center">表 2.1 自动寻光测试数据</p><div class="table-container"><table><thead><tr><th style="text-align:center"><div style="width:200px">测试时间段</div></th><th style="text-align:center"><div style="width:120px">8:00am</div></th><th style="text-align:center"><div style="width:120px">12:00pm</div></th><th style="text-align:center"><div style="width:120px">16:00pm</div></th></tr></thead><tbody><tr><td style="text-align:center">同强度光照时间</td><td style="text-align:center">86.7s</td><td style="text-align:center">74.1s</td><td style="text-align:center">74.1s</td></tr><tr><td style="text-align:center">产生能量 (最佳安装角度)</td><td style="text-align:center">489.988564J</td><td style="text-align:center">389.440895J</td><td style="text-align:center">293.837531J</td></tr><tr><td style="text-align:center">产生能量 (自动寻光)</td><td style="text-align:center">620.018404J</td><td style="text-align:center">402.466344J</td><td style="text-align:center">446.681531J</td></tr></tbody></table></div><h3 id="2-4-2-深度数据分析算法架构"><a href="#2-4-2-深度数据分析算法架构" class="headerlink" title="2.4.2 深度数据分析算法架构"></a><strong>2.4.2 深度数据分析算法架构</strong></h3><p>&ensp;&ensp;&ensp;&ensp;主要使用了输入参数PM2.5、PM10、大气温湿度、SO2、CO2浓度等环境污染指标+GPS地理位置数据，下图为环境数据的处理流程概览图。</p><p><img src="/img/plane/image24.png" alt="图2.22 环境数据处理流程"></p><h4 id="2-4-2-1-数据处理"><a href="#2-4-2-1-数据处理" class="headerlink" title="2.4.2.1 数据处理"></a><strong>2.4.2.1 数据处理</strong></h4><p>无人机收集到的环境数据为 $Ω_n = {(x_1,y_1,z_1),…,(x_n,y_n,z_n)}$，其中 $z_i \in \mathbb{R}^3$。</p><p>&ensp;&ensp;&ensp;&ensp;其中,xi.,yi,zi等分别为在第n个地点在第i期时间序列中获得的PM2.5、PM10、大气温度、湿度等数据，直接将这些数据表达出来固然可以反映环境污染情况并能用于污染情况预测和污染源测算，但是出于两点考虑：首先，从公众关注角度讲，大多数人只需要一个综合的污染指标，太过繁杂的环境数据反而难以被普遍接受；其次，在实际应用时环境数据采集量较大，如果直接对原始数据利用机器学习算法进行处理会占用大量硬件资源并花费很多时间，无法满足环境数据实时性显示的要求。因此我们首先选择了PCA分析算法对这几类环境数据进行了主成分的提取，用综合性变量来解释环境数据的大部分特征。算法处理思路如下：</p><p>&ensp;&ensp;&ensp;&ensp;因为温湿度、PM2.5、PM10浓度等数据的量纲差异性以及难以避免的多重共线性问题，因此我们首先利用主成分估计法，将原来的环境数据集变换到主成分空间中，选择代表性最好的主成分变量作为新的污染程度值。对于一个取样地点的全部环境数据首先进行数据标准化处理后获得了变量集：</p><p><img src="/img/plane/image260.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;X是第k类传感器数据的i维时间列向量。通过基变换公式行内公式：$Y = P \cdot X$获得变换到主成分空间的样本数据集Y，其中P为k维基向量，接下来利用协方差矩阵的特征向量获得具有最大可分性的基向量P。利用协方差特征值公式：</p><script type="math/tex; mode=display">C=\frac{1}{m}(PX)(PX)^{T}=\frac{1}{m}(PXX)^{T}P^{T}</script><p>&ensp;&ensp;&ensp;&ensp;获得了协方差矩阵，其中对角元素是各变量自身的方差，其他元素是不同变量之间的协方差，此时通过求解使矩阵C对角化的P即为使主成分具有最大可分性的基向量。利用拉格朗日函数有</p><p><img src="/img/plane/image262.png" alt=""></p><p>对P求导可以获得：</p><p><img src="/img/plane/image261.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;对C进行特征分解，对求得的特征值排序后即可获得基向量P，PX即为降维后的主成分向量。</p><p><img src="/img/plane/image35.png" alt="图2.23 各主成分变量所占比重分布图"></p><p>&ensp;&ensp;&ensp;&ensp;从图表2.23中可以观察到，第一主成分变量占据了83.5%的比重，它足以阐释环境污染的程度。因此，我们选择第一主成分变量1作为衡量环境污染状况的新指标。</p><h4 id="2-4-2-2-数据短期预测"><a href="#2-4-2-2-数据短期预测" class="headerlink" title="2.4.2.2 数据短期预测"></a><strong>2.4.2.2 数据短期预测</strong></h4><p>&ensp;&ensp;&ensp;&ensp;尽管无人机的数据采集速度高达12km²/h，远超人工实地监测，但各个样本点的数据依旧存在时间上的差异。因此，我们首先采用自适应滤波算法对环境数据进行短期预测，这样不仅可以直接应用于环境污染状况的评估，而且还可以利用预测误差进一步预测污染源的位置分布。对某一样本点的卡尔曼自适应滤波算法的分析公式如下:</p><p><img src="/img/plane/image264.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;式中，t+1为预测数据的时间点，w为观测数据权重，y为数据观测值。该公式是通过对不同时间点的环境数据观测值进行初步赋权进而获得了短期内的环境数据预测值。</p><p>通过下式：</p><p><img src="/img/plane/image263.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;对样本数据的权重进行动态调整，- $w<em>i$  ,$w_i’$ 分别为调整前后的数据权重，k为学习常数，$$ e</em>{i+1} $$为预测数据误差值。其中，新权值是旧权值与误差调整项之和,而通过调整学习常数k来决定权值调整的快慢，根据数据采集量和计算时间要求调整。通过对观测值权重的多次迭代调整，最终会获得一组令预测误差趋于稳定的权值，由此获得精度较高的同期环境预测数据。图2.24为环境污染指标的观测值与预测折线图。</p><p><img src="/img/plane/image40.png" alt="图2.24 环境质量变化折线图"></p><p><img src="/img/plane/image45.png" alt="图2.25 数据汇总及缺失处理"></p><p>&ensp;&ensp;&ensp;&ensp;由于数据中存在中文字符，以及一些缺失值（少量），我们做法比较常规，基本就是均值填充以及LabelEncoding的方式。</p><p><img src="/img/plane/image46.png" alt="图2.26 CNN-LSTM模型建立"></p><p>&ensp;&ensp;&ensp;&ensp;本文采用CNN-LSTM模型进行六项污染物浓度模型预测，使用该混合模型的效果会好于单个LSTM的模型，下图是我整个搭建模型的结构图，由于本文属于时序预测，因此使用的是一维CNN-LSTM长短期记忆卷积神经网络。</p><p><img src="/img/plane/image47.png" alt="图2.27 训练与验证集误差图"></p><p><img src="/img/plane/image48.png" alt="图2.28 CNN-LSTM长短期记忆卷积神经网络预测结果"></p><p>从预测结果图中可以清晰地看出，该模型展现了低偏差和低方差的特性，显示出良好的预测拟合度。</p><h4 id="2-4-2-3-污染源位置推定"><a href="#2-4-2-3-污染源位置推定" class="headerlink" title="2.4.2.3 污染源位置推定"></a><strong>2.4.2.3 污染源位置推定</strong></h4><p>&ensp;&ensp;&ensp;&ensp;首先采用图论原理，利用经纬度的距离计算公式：</p><script type="math/tex; mode=display">S = 2R \arcsin\sqrt{\sin^2\left(\frac{\Delta\phi}{2}\right) + \cos\phi_1\cos\phi_2\sin^2\left(\frac{\Delta\lambda}{2}\right)}</script><p>&ensp;&ensp;&ensp;&ensp;获取到各取样点的物理距离，每一个取样点抽象为图的顶点，取样点<script type="math/tex">v_i</script>和<script type="math/tex">v_j</script>两两之间连线作为边<script type="math/tex">e_{ij}</script>，各点距离通过归一化处理作为顶点之间的边权<script type="math/tex">w_{ij}</script>，获得了网络N=(V,E,W)。</p><p>&ensp;&ensp;&ensp;&ensp;选取空气污染主成分变量最高的20处地点，利用TSP近似算法中的二边逐项修正法通过多次迭代获得污染从源头散播到各位置的最短路径，获得的最优以及近似最优起点就是污染物偷排重点监察位置。</p><p>&ensp;&ensp;&ensp;&ensp;针对一个选定的污染扩散起点k，算法首先先求出一个初始哈密尔顿圈(包含所有顶点的回路)</p><p><img src="/img/plane/image265.png" alt=""></p><p>然后从C中删去边$v<em>i v</em>{i+1}$和$v<em>j v</em>{j+1}$，添加边$v<em>i v_j$和$v</em>{i+1}v_{j+1}$，获得了新的哈密顿圈</p><p><img src="/img/plane/image256.png" alt=""></p><p>若<script type="math/tex">w(v_i v_j) + w(v_{i+1}v_{j+1}) < w(v_i v_{i+1}) + w(v_j v_{j+1})</script>，可说明<script type="math/tex">C_{ij}</script>的污染扩散路径优于C，则使用Cij代替C，依此按照这一过程进行迭代，获得污染扩散的最大概然路径，其污染扩散总权重为<script type="math/tex">D_K = \sum W_{ij}</script>，选取<script type="math/tex">D_{k}</script>的最小值以及最小值附近的几个点，就得到了疑似污染源。</p><h4 id="2-4-2-4-数据聚类处理"><a href="#2-4-2-4-数据聚类处理" class="headerlink" title="2.4.2.4 数据聚类处理"></a><strong>2.4.2.4 数据聚类处理</strong></h4><p>&ensp;&ensp;&ensp;&ensp;初步获得的环境数据量仍然较大，而且数据噪声也比较明显，直接进行运算不但运算时间过久，而且往往容易被数据噪声导向局部最优解以致于获得错误的污染源预测点。因此，我们使用机器学习中的支持Q型聚类算法将环境数据简化为多种典型环境污染程度以便后续运算。</p><p>&ensp;&ensp;&ensp;&ensp;经过上一步的数据同步处理获得了简化后环境数据的主成分。</p><p>&ensp;&ensp;&ensp;&ensp;由于各指标数据量纲不同且数值差异很大，所以本项目采用了马哈拉诺比斯距离来消除跨量纲聚类的影响，计算公式如下：</p><script type="math/tex; mode=display">d(A_i,A_j) = \sqrt{(A_i - A_j)^T \Sigma^{-1} (A_i - A_j)}</script><p>其中<script type="math/tex">A_i</script>,是<script type="math/tex">A_j</script>不同位置的高维数据点，D是协方差函数，然后通过不同样本点之间的距离特征进行分类。图2.29是我们对300条环境数据进行Q型聚类的结果，从途中每一条水平线都代表一种聚类结果，而多种聚类结果可以聚类为更高一级的聚类结果，从图中可以看出，细分聚类有30种，简化聚类大致可分为10种，这大大简化了环境数据量。</p><p><img src="/img/plane/image71.png" alt="图2.29 应用机器学习的Q型聚类初步结果图"></p><h3 id="2-4-3-多终端融合可视化操作平台"><a href="#2-4-3-多终端融合可视化操作平台" class="headerlink" title="2.4.3 多终端融合可视化操作平台"></a><strong>2.4.3 多终端融合可视化操作平台</strong></h3><p><img src="/img/plane/image72.png" alt="图2.30 软件整体架构图"></p><p>&ensp;&ensp;&ensp;&ensp;软件功能架构图如上所示。无人机到达指定地点后通过不同的传感器收集PM2.5、PM10、CO2、S02、温湿度等环境数据，然后传入到所构建的云服务端。采集到的多项环境监测指标进行数学建模，利用PCA分析给定一个量的主指标，即环境综合质量指标，再利用自适应滤波算法对环境数据短期预测，经过一定次数的迭代运行，找到最精密的预测数据。</p><p>&ensp;&ensp;&ensp;&ensp;初步获得的环境数据量仍然较大，而且数据噪声也比较明显，直接进行运算不但运算时间过久，而且往往容易被数据噪声导向局部最优解以致于获得错误的污染源预测点。因此，我们使用机器学习中的支持Q型聚类算法将环境数据简化为多种典型环境污染程度以便后续运算。经过上一步的数据同步处理获得了由于各指标数据量纲不同且数值差异很大，所以本项目采用马哈拉诺比斯距离来消除跨量纲聚类的影响。</p><h4 id="2-4-3-1-数据可视化软件"><a href="#2-4-3-1-数据可视化软件" class="headerlink" title="2.4.3.1 数据可视化软件"></a><strong>2.4.3.1 数据可视化软件</strong></h4><p>&ensp;&ensp;&ensp;&ensp;数据可视化软件使用Python语言进行开发，并且基于PyQt，Matplotlib、GraphTree等开源库。将无人机采集到的实时环境监测数据显示，包括PM2.5浓度值、二氧化碳浓度值、外部温度值、水质温度值等关键数据进行可视化。且自身携带的摄像头会拍下一定数量的图片，通过WiFi模块传入单帧图像，将本帧图像去除背景并且处理成高对比度的黑白图像输出，并对传入的背景图进行灰度化处理；同时进行高斯滤波和卡尔曼滤波，对传入坐标进行滤波处理，减少坐标点抖动，最终得出具体精确的坐标点,即物体的几何中心。首先利用经纬度的距离算法,然后利用TSP近似算法中的二边逐项修正法通过多次迭代获得污染从源头散播到各位置，污染扩散的最大概然最短路径，获得的最优以及近似最优起点就是污染物偷排重点监察位置。</p><p><img src="/img/plane/image73.png" alt="图2.31 地面站试路径规划"></p><p><img src="/img/plane/image74.png" alt="图2.32 可视化软件绘制的太原市不同区域污染物网格化细分图"></p><p>&ensp;&ensp;&ensp;&ensp;设计思路是遵循MVC的标准，即是为模型(model)－视图(view)－控制器(controller)，使用一种业务逻辑、数据、界面显示分离的方法组织代码，将业务逻辑聚集到一个部件里面，在改进和个性化定制界面及用户交互的同时，不需要重新编写业务逻辑。规范化处理了上位机软件的设计标准，明确了设计思路。有数据,仍然不够,环境监督和环境监督的执行是非常时间敏感的。非法走私企业可能只发生在一定时期内,甚至只是某一时刻。这是难以获取证据和难以执行法律的原因之一。</p><p><img src="/img/plane/image75.png" alt="图2.33 无人机采集到的数据反馈到终端"></p><p>&ensp;&ensp;&ensp;&ensp;无人机的气体传感器在大气污染调查工作中会得到大量的实测数据,传统利用Excel进行数据分析与管理的办法不仅无法直观展现污染物的空间分布形态,测量数据需要多个工作日的处理和分析才能得出相关结论,很难为下一步监测管理和治理提供决策支持。所以我们采用软件将数据直接导出，如图2.33所示。</p><p><img src="/img/plane/image76.png" alt="图2.34 3D可视化软件主界面展示"></p><p>&ensp;&ensp;&ensp;&ensp;如图2.34，设计时我们将3D的城市地形图置于xy平面，在垂直的z轴所包罗的空间中绘制出详细的环境数据信息，投射到xoz平面上的z轴表示的是区域的海拔高度，投射到yoz平面上的是污染物具体的数据大小，而图中的不同分层代表了不同污染物的情况，通过曲线的形式将各种污染物变化情况实时展现在右侧展板上。</p><p><img src="/img/plane/image77.png" alt="图2.35 3D可视化软件制作的平面化效果展示"></p><p><img src="/img/plane/image78.png" alt="图2.36 3D可视化软件制作的立体效果展示"></p><p>&ensp;&ensp;&ensp;&ensp;数据可视化处理可以充分利用数据中隐含的空间相关性,揭示气体污染物的迁移和转化规律,帮助研究人员,监测机构,科学直观地解释和分析大气污染情况,高效快速的检测方法可以被跟随。一系列治理措施为支持和节省劳动力成本提供了基础。</p><p><strong>2.4.3.2 数据可视化网页端</strong></p><p><img src="/img/plane/image79.png" alt="图2.37 可视化网页监测图"></p><p><img src="/img/plane/image80.png" alt="图2.38 可视化网页成果展示图"></p><p>&ensp;&ensp;&ensp;&ensp;网页由JavaScript开发，通过柱状图，折线图，饼状图三种形式进行展示无人机实时反馈到基站的数据。UI界面将根据scrapy爬虫得到的区域的百度地图展示其所在区域，右半部分是多种环境分析的曲线图，以及饼状未来浓度变化情况预测图。</p><h4 id="2-4-3-3-无人机地面控制软件"><a href="#2-4-3-3-无人机地面控制软件" class="headerlink" title="2.4.3.3 无人机地面控制软件"></a><strong>2.4.3.3 无人机地面控制软件</strong></h4><p>&ensp;&ensp;&ensp;&ensp;上位机控制软件功能丰富，主工具栏上面提供对不同方面的控制，包括：系统监测、飞控设置、航线规划、传感器校正等方面进行控制。展现并控制无人机多种的状态信息，包括地面速度、高度、IMU信息，磁罗盘信息，电池信息，遥测信号强度等等。也可通过地面站上的一键返航按钮实现自动返回起飞点。右上角的仪表板在无人机起飞后会实时更新当前飞行参数信息。QGC也可通过无人机飞行控制的UDP通讯协议连接支持RTP和RTSP视频流接收器，同时接收多路视频信号，实现软件飞行控制操作人员和地面分析人员各自享有一路视频，互不干扰，最大程度上提高其作业效率。</p><p><img src="/img/plane/image81.png" alt="图2.39 上位机控制软件展示图" style="width: 70%; max-width: 600px;"></p><p>&ensp;&ensp;&ensp;&ensp;软件利用了Dronecode开发，这是一个开源无人机航空操作系统，基于Linux开发，可以根据VTOL，固定翼，直升机以及多旋翼等特性进行二次开发。QGC也可根Dronecode进行定制型开发，也可通过MAVLink协议与无人机天空端通信。</p><p>&ensp;&ensp;&ensp;&ensp;Dronecode框架与ROS类似，其模块化设计可经修改后作为ROS节点运行，同时辅助其他软件包（例如guidanceSDK，onboardSDK以及lidarSDK等等）实现机载计算机全自动控制，也可将Dronecode在Gazebo仿真环境下进行仿真与测试，确定无人机各项功能是否有异常等等。</p><p>&ensp;&ensp;&ensp;&ensp;Dronecode源码主要语言为C++，可以使用插件扩展SDK，以添加任何其他所需的MAVLinkAPI，也可通过API扩展dronecode从而实现遥测等功能。</p><h4 id="2-4-3-4-地面站航点规划"><a href="#2-4-3-4-地面站航点规划" class="headerlink" title="2.4.3.4 地面站航点规划"></a><strong>2.4.3.4 地面站航点规划</strong></h4><p>&ensp;&ensp;&ensp;&ensp;QGC地面站可用于为无人机自主规划航线，空中作业时可自动飞向目标地点指定高度，从而减轻飞手的任务，提高作业效率。如上图所示，该截图显示了一个任务规划，该计划从规划起始位置起飞，飞过指定三个航点，然后落在最后一个航路点。</p><p><img src="/img/plane/image82.png" alt="图2.40 地面站航迹编辑操作"></p><p>&ensp;&ensp;&ensp;&ensp;对于本项目使用的无人机，上位机软件上映射一个通道用于无人机一键返航。当操作者触发此通道按键时，无人机将调用GPS确定当前位置，并将起飞点（地面站若开启返航点刷新则以地面站GPS位置为准）与当前位置进行比较从而确定返航方向并自动规划返航航线，也可通过设置返航高度，在高精度气压计的监测下实现无人机定高返航，同时配合Guidance视觉避障模块实现无人机返航过程的安全。QGC地面站可通过终端命令的方式通过数传实时修改无人机的航线，实现精准规划作业轨迹，提高了无人机自动化作业的效率。</p><p>&ensp;&ensp;&ensp;&ensp;终端可输入航路点和其他命令，也可以用地面站的功能映射创建任务（Autogrid），飞行器会来回在规划的任务区域飞行进行拍照收集照片，实现无人机的程序化自动控制。DefaultAlt（默认高度）：进入新航路点的默认高度，同时也是返航时候的飞行器的飞行高度，返航时如果飞行器没有达到这个高度，会先升高到这个默认的高度再返回，如果高过这个高度，飞机会保持当前高度飞到返航的位置，下降着陆。Verifyheight（验证高度）：就是地面站用谷歌地图拓扑数据调整你想期望的在每个航路点的高度去反映离地面的高度。因此如果规划的航路点在一个小山上，选择的验证高度在地面站上，设置的高度将会加上小山的高度，使用这种方式将会保证无人机不撞上山峰。设置好航路点然后点击右边的”写入”，任务就写入了APM并寄存在存储器中，删除所有航路点，点击”读取”查看确定规划的航路点是否写入，如果写入，会在地图上显示规划的路径。</p><h4 id="2-4-3-5-MAVLink协议"><a href="#2-4-3-5-MAVLink协议" class="headerlink" title="2.4.3.5 MAVLink协议"></a><strong>2.4.3.5 MAVLink协议</strong></h4><p>&ensp;&ensp;&ensp;&ensp;MAVLink是为微型飞行器MAV（MicroAirVehicle）设计的（LGPL）开源的通讯协议。是无人飞行器和地面站（GroundControlStation，GCS）之间，以及无人飞行器之间通讯常用的协议。APM、PIXHAWK飞控，MissionPlanner、QGroundControl地面站均使用了MAVLink协议进行通讯。MAVLink传输时，以消息包作为基本单位，数据长度为8~263字节。消息数据包的结构如下：</p><p><img src="/img/plane/image83.png" alt="图2.41 消息数据包的结构"></p><p>&ensp;&ensp;&ensp;&ensp;MAVLink采用校验的功能，当两个通讯终端之间（飞行器和地面站，或飞行器和飞行器）使用不同版本的MAVLink协议时，双方计算得到的校验码会不同，则不同版本的MAVLink协议之间将无法通讯。MAVLINK_MESSAGE_CRCS中存储了每种消息包对应的MAVLINK_CRC_EXTRA。这个MAVLINK_CRC_EXTRA在用Python生成MAVLink代码时在common.h头文件中自动生成。MAVLink定义了一些通用消息集，是大多数地面控制站（包括QGC）和自动驾驶仪实现的参考消息集。该消息集分为两部分：MAVLinkType(MAVLink类型枚举)和MAVLinkMessages（MAVLink消息包）。这些消息在每个消息包的头文件#define中定义。</p><p>&ensp;&ensp;&ensp;&ensp;MAVLink采用心跳包的方式来判断该设备是否活跃，（一般以1Hz发送），消息接收端会根据是否及时收到了心跳包来判断是否和消息发送端失去了联系。心跳包由6个数据成员组成，占用9个字节。</p><p>&ensp;&ensp;&ensp;&ensp;1、type：飞行器类型，表示了当前发消息的是什么飞行器，如四旋翼，直升机等。type的取值对应枚举类型MAV_TYPE（如四旋翼，对应数值2）。</p><p>&ensp;&ensp;&ensp;&ensp;2、autopilot：飞控类型，如apm，Pixhawk等，发送心跳包的飞行器的飞控类型。autopilot的取枚举类型MAV_AUTOPILOT。</p><p>&ensp;&ensp;&ensp;&ensp;3、basemode（基本模式）：飞控现在所处的飞行模式，这个参数要看各个飞控自己的定义方式，会有不同的组合、计算方式。</p><p>&ensp;&ensp;&ensp;&ensp;4、custommode（用户模式）：飞控现在所处的飞行模式，这个参数要看各个飞控自己的定义方式，会有不同的组合、计算方式。</p><p>&ensp;&ensp;&ensp;&ensp;5、systemstatus：系统状态，见MAV_STATE枚举变量。</p><p>&ensp;&ensp;&ensp;&ensp;6、mavlinkversion：消息发送端的MAVLink版本。</p><p>&ensp;&ensp;&ensp;&ensp;其余的消息也是类似的结构，基本消息的定义可以查看官方网页的说明（具体说明以各个飞控为准)，也可查看各个消息包头文件的定义。</p><p><img src="/img/plane/image84.png" alt="图2.42 MAV_AUTOPLILOT说明"></p><h4 id="2-4-3-6-APP实时环境监测数据显示"><a href="#2-4-3-6-APP实时环境监测数据显示" class="headerlink" title="2.4.3.6 APP实时环境监测数据显示"></a><strong>2.4.3.6 APP实时环境监测数据显示</strong></h4><p>&ensp;&ensp;&ensp;&ensp;APP基于JAVA的安卓开发，使用APIcould进行开发。APP能够实时显示环境监测数据，具有完整的无人机飞行区域显示、基于机器学习的预测等功能。</p><p>&ensp;&ensp;&ensp;&ensp;APICloud使用了从”云”和”端”两个方向提供API，简化移动应用开发技术，缩短了我们开发周期。</p><p><img src="/img/plane/image85.png" alt="图2.43 APP开发过程图"></p><p>&ensp;&ensp;&ensp;&ensp;APP不仅能够实时观察监测区域环境数据的变化，还能够观察到无人机飞行参数的情况。基本的UI界面与网页端相同，环境执法人员可以随时通过APP接收环境报警信息，亦可以通过设置时间轴查看历史环境数据，或是手动设置初始坐标位置查看具体位置区域的环境情况，便于及时出警。</p><p><img src="/img/plane/image86.png" alt="图2.44 APP成果展示图"></p><h4 id="2-4-3-7-地面中继站的基于计算机视觉技术的自动识别系统"><a href="#2-4-3-7-地面中继站的基于计算机视觉技术的自动识别系统" class="headerlink" title="2.4.3.7 地面中继站的基于计算机视觉技术的自动识别系统"></a><strong>2.4.3.7 地面中继站的基于计算机视觉技术的自动识别系统</strong></h4><p>&ensp;&ensp;&ensp;&ensp;通过运用先进的机器视觉技术能够实现一个智能化的中继站系统。这个系统具备了在无人机靠近时自动识别并开启舱门的功能，从而引导无人机安全降落并进行回收。在无人机降落之后，系统会自动进行无线充电，确保无人机能够迅速恢复能量，继续执行任务。整个系统的运行和参数设定都由计算机进行控制，这使得系统具有高度的完备性、良好的移植性和方便的调控特性。</p><p>&ensp;&ensp;&ensp;&ensp;在识别算法的设计思路上采用了逐帧处理的方法。首先，系统会将每一帧图像单独传入处理流程。接下来，对传入的图像进行背景去除，将其处理成高对比度的黑白图像，以便于后续的图像识别和处理。同时，系统还会对传入的背景图像进行灰度化处理，进一步简化图像信息，提高识别的准确性和效率。通过这种精细的图像处理流程，系统能够更准确地识别无人机的位置和状态，从而实现高效、准确的自动降落和充电过程。</p><p><img src="/img/plane/image87.png" alt="图2.45 机器视觉识别无人机流程"></p><p>&ensp;&ensp;&ensp;&ensp;在处理传入的坐标数据时，采用了两种先进的滤波技术：高斯滤波和卡尔曼滤波。这两种方法共同作用，有效地减少了坐标点的抖动现象，从而提高了数据的稳定性和可靠性。高斯滤波通过平滑处理，消除了部分随机噪声，使得坐标点更加平滑。而卡尔曼滤波则利用了系统的动态模型，通过预测和更新的迭代过程，进一步优化了坐标点的精度。</p><p>&ensp;&ensp;&ensp;&ensp;综合这两种滤波技术的优势，能够有效地提取出物体的中心位置，得到一个具体且精确的坐标点，从而为后续的分析和处理提供了坚实的基础，有助于对最终数据进行科学且有效的归纳和可视化处理，使得用户能够更加清晰地理解。</p><h1 id="第三章-附录"><a href="#第三章-附录" class="headerlink" title="第三章 附录"></a><strong>第三章 附录</strong></h1><p><img src="/img/plane/image100.png" alt="专利申请"><br><img src="/img/plane/image110.png" alt="产品试验证明"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>缆脉智检——基于SSTDR的全生命周期电缆智能诊断仪</title>
      <link href="/2025/06/01/cable/"/>
      <url>/2025/06/01/cable/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-项目概述"><a href="#第一章-项目概述" class="headerlink" title="第一章 项目概述"></a>第一章 项目概述</h1><h2 id="1-1项目背景"><a href="#1-1项目背景" class="headerlink" title="1.1项目背景"></a>1.1项目背景</h2><p>&ensp;&ensp;&ensp;&ensp;在现代社会，电力的稳定供应是各个领域正常运转的关键保障。电缆作为电力传输的重要载体，其性能和质量直接影响着电力系统的安全、可靠和高效运行。随着电力需求的不断增长以及电网的日益复杂，对电缆参数的准确检测显得尤为重要。</p><p>&ensp;&ensp;&ensp;&ensp;过去，电缆的检测技术相对较为落后，检测方法不够精确和全面，难以满足日益提高的电力系统运行要求。传统的检测手段往往只能检测部分参数，而且检测效率低下，容易出现误判和漏判的情况。这不仅给电力系统的维护和管理带来了困难，也增加了潜在的安全风险。</p><p>&ensp;&ensp;&ensp;&ensp;近年来，随着科技的飞速发展，各种先进的检测技术和设备不断涌现，为电缆参数的全面、准确检测提供了可能。例如，基于高频信号的检测技术能够更有效地检测电缆的绝缘性能；智能化的检测设备能够实现自动化检测和数据采集，大大提高了检测效率和准确性。</p><p>&ensp;&ensp;&ensp;&ensp;然而，目前市场上的电缆检测技术和设备仍存在一些不足之处。不同厂家的检测设备性能参差不齐，检测标准和方法也缺乏统一规范，导致检测结果的可比性和可靠性受到影响。此外，一些先进的检测技术在实际应用中还面临着技术成熟度不够、成本较高等问题，限制了其广泛推广和应用。</p><p>&ensp;&ensp;&ensp;&ensp;因此，开展电缆参数检测项目具有重要的现实意义。通过研发和应用先进的检测技术和设备，建立统一的检测标准和规范，提高电缆检测的准确性、全面性和效率，不仅能够及时发现电缆存在的潜在问题，保障电力系统的安全稳定运行，还能够延长电缆的使用寿命，降低维护成本，提高电力企业的经济效益和社会效益。</p><h2 id="1-2产业背景"><a href="#1-2产业背景" class="headerlink" title="1.2产业背景"></a>1.2产业背景</h2><p>&ensp;&ensp;&ensp;&ensp;电线电缆是关乎经济社会发展的最为重要的电网物资之一，国家质检总局亦将电线电缆纳入重点管控产品。近年来，国内出现多次严重电缆质量事件，造成了重大经济损失与不良社会影响。配网电缆的用量大，且厂家众多，质量参差不齐。配网电缆到货后的质量检测是保障其质量安全的重要举措。</p><p>&ensp;&ensp;&ensp;&ensp;电力线缆的质量检测涉及电缆长度、直流电阻、截面尺寸、绝缘厚度、机械性能等关键参数的测量。其中，直流电阻、截面尺寸、绝缘厚度、机械性能等参数可通过相关设备直接对成盘电缆或者电缆样品进行测量，技术相对成熟，也已有相关产品。而由于成盘电缆展开不便，其长度的准确快速检测一直是制约电缆物资质量高效检测的瓶颈技术。</p><p>&ensp;&ensp;&ensp;&ensp;除基于厂家在电缆上标注的尺寸来判断成盘电缆长度外，目前对于成盘电缆长度的检测技术主要以计米器测量为主。计米器测量精度较高，但是测量时需要对线缆复绕，操作不便且可能损伤线缆外护层。也有通过线缆整体的直流电阻、电容与单位长度参数之比来计算线缆长度，相比于计米器测量，这类方法测量简便，但会受电缆形态、环境等因素影响，误差相对较大。电缆的线芯与金属护套可看作同轴圆柱结构，行波信号在其中沿电缆轴向传播速度稳定，因此可借助行波信号在电缆中的传播时间以及波速对线缆长度进行检测，该方法受线缆形态、环境等因素影响较小，测量简便快捷，我们据此提出了时域脉冲反射法等电缆长度检测方法。</p><p>&ensp;&ensp;&ensp;&ensp;基于行波信号的电缆测长技术目前已经在电缆故障定位等领域得到了应用，国内相关机构也据此开发出了相关的成盘电缆快速检测装置，但是其检测精度仍有待提升。对此，我们依靠于中北大学省部共建动态测试技术国家重点实验室研制了一款成盘电缆参数检测系统。</p><h2 id="1-3产品介绍"><a href="#1-3产品介绍" class="headerlink" title="1.3产品介绍"></a>1.3产品介绍</h2><p>&ensp;&ensp;&ensp;&ensp;为了解决电缆参数检测的准确性、全面性和效率等技术痛点，我们依靠于中北大学省部共建动态测试技术国家重点实验室研制了一款成盘电缆参数检测系统。该产品将实现检测设备自主化国产化。该产品能一体化实现电缆长度、直流电阻、截面尺寸等关键参数的精确快速测量。其中电缆长度使用低压脉冲反射法进行单端测试，大大提升了检测的便捷性，将检测性能提升。在检测精度上不断提高，整机精度在3%以下。在测量电阻时随着组织的增大精度不断地提升。本产品能够应用于电缆的电阻检测、长度检测、横截面积检测和环境温度检测。检测参数全面，能够满足现有需求。在检测效率方面，我们采用了触控屏一键检测，大大提高了检测效率、降低了检测难度。我们还在检测设备中加装了锂电池，无需插电操作扩展了适用场景。检测设备可分为四大模块，即电缆长度检测模块、环境温度监测模块、电缆电阻检测模块、电缆横截面积检测模块。电缆长度检测模块，时域反射测量技术是在高速脉冲技术迅速发展的基础上出现的一种很有应用价值的测量技术。TDR实际上是一个小型的1维雷达，只需要1个高速脉冲信号发生器作为信号源和1台取样示波器作为接收装置和显示器，测试时向电缆一端注入低压脉冲，该脉冲沿电缆传播，当脉冲遇到阻抗不匹配点时会发生部分或全部反射得到时间信息，最后获得所需的被测量，如图1所示。</p><p><img src="/img/image1.png" alt="图1-1 TDR测长原理图"></p><p>&ensp;&ensp;&ensp;&ensp;早期主要运用于通讯行业中，随着时代的发展，时域脉冲技术已经向工农业、生物、医学以及航天领域逐步发展。波速的标定是通过测量已知长度电缆，得到发射脉冲和电缆终点反射脉冲的时间间隔后获得。再测量此型号的电缆时就将波速值设定为该值，在测量电线电缆长度之前会设定一个波速值，然后处理器用发射脉冲和电缆终点反射脉冲的时间间隔与电缆长度成正比的原理确定电缆的长度，测电缆长度计算式为：</p><script type="math/tex; mode=display">l = \frac{\nu\Delta t}{2}</script><p>&ensp;&ensp;&ensp;&ensp;式中：L表示试点到电缆终点间的距离；v表示信号在电缆中的传播速度；Δt表示入射波与反射波之间的时间间隔。测长的原理图如图2所示；</p><p><img src="/img/image2.png" alt="图1-2 测长原理图"></p><p><img src="/img/img1.png" alt="长度（1）">  </p><p>&ensp;&ensp;&ensp;&ensp;电缆电阻检测模块，电阻测量采用四极法测量电阻，测量仪首先测得在电缆环境温度为t(单位为℃)下的电阻值Rt，再根据电阻与温度的换算式：</p><script type="math/tex; mode=display">R_{20} = \frac{R_{t}}{\left( 1 + \partial(t - 20) \right)}</script><p>&ensp;&ensp;&ensp;&ensp;式中：∂为导体的电阻温度系数，铜取0.00393，铝取0.00403；t为测量时的环境温度;</p><p><img src="/img/img2.png" alt="电阻（1）">  </p><p>&ensp;&ensp;&ensp;&ensp;电缆横截面积检测模块，截面积的测量方法是在电缆长度还有电阻值已知的情况下，计算式为：</p><script type="math/tex; mode=display">s = \frac{\rho l}{R}</script><p>&ensp;&ensp;&ensp;&ensp;式中：s表示电缆导体的等效截面积；ρ表示电缆导体材料在特定温度下的电阻率；l表示电缆导体的长度;</p><p><img src="/img/img3.png" alt="横截面积">  </p><h2 id="1-4核心优势"><a href="#1-4核心优势" class="headerlink" title="1.4核心优势"></a>1.4核心优势</h2><p>1.快速高效：采用行波信号的电缆单端测长方法，代替了传统的米尺测量方式，可实现成盘电缆的单端快速测量。优化的检测流程和高速的数据处理能力，大大缩短了检测时间，提高工作效率。</p><p>2.高精度检测：采用先进的传感器和测量技术，确保对电缆的电阻、电容、电感、绝缘电阻等参数进行高精度测量，测量误差极小。</p><p>3.全面参数检测：能够同时检测多种电缆参数，涵盖了电力电缆、通信电缆等常见类型，提供全面的性能评估。</p><p>4.智能化操作：配备直观易懂的操作界面和智能诊断功能，大尺寸可触屏屏幕，操作人员无需具备深厚的专业知识，即可轻松完成检测和分析。</p><p>5.便携耐用：仪器体积小巧，重量轻，内置有电池，便于携带至现场进行检测。同时，采用坚固耐用的材料制造，适应各种恶劣的工作环境。</p><p>6.数据存储与分析：具备大容量的数据存储功能，能够保存大量检测数据，并支持数据导出和详细的数据分析，帮助用户发现潜在问题和趋势。</p><h1 id="第二章-市场调查及竞争分析"><a href="#第二章-市场调查及竞争分析" class="headerlink" title="第二章 市场调查及竞争分析"></a>第二章 市场调查及竞争分析</h1><h2 id="2-1市场机会"><a href="#2-1市场机会" class="headerlink" title="2.1市场机会"></a>2.1市场机会</h2><h3 id="2-1-1政策支持"><a href="#2-1-1政策支持" class="headerlink" title="2.1.1政策支持"></a>2.1.1政策支持</h3><p>&ensp;&ensp;&ensp;&ensp;应急管理部、工信部发布的《关于加快应急机器人发展的指导意见》指出，面向煤矿、非煤矿山等高风险行业和危险化学品、冶金工贸等重点领域，加强危险化学品重大危险源、化工园区、陆上油气井场站、海洋石油平台、油气长输管道、井工煤矿、高压电站等重点场景安全生产、应急处置等机器人研制与应用，提升机器人在高风险环境的作业水平、复杂环境的智能化水平、恶劣条件的防护水平。应急管理部工业和信息化部关于加快应急机器人发展的指导意见如图2-1所示。</p><p><img src="/img/image6.png" alt="应急管理部 工业和信息化部关于加快应急机器人发展的指导意见">  </p><p>&ensp;&ensp;&ensp;&ensp;电力行业是典型的技术密集型行业，技术创新是驱动行业可持续发展的核心力量。一方面，生产制造智能电表、用电信息采集终端等智能电力产品所涉及的生产设备、零部件、材料工艺、软件技术等均在不断升级进步，促进了行业制造水平和生产工艺的不断提升；另一方面，在电力物联网和数字电网建设持续推进的背景下，智能控制、通信技术、大数据、移动互联网等先进技术和其他学科知识与行业将进一步深化融合，促使行业产品及服务智能化、信息化水平不断提升，以及应用场景进一步拓展。综上，多层面技术的创新与应用，将共同推动行业长期、健康、可持续的发展，是智能巡检行业面临的重要发展机遇之一。</p><h3 id="2-1-2社会背景"><a href="#2-1-2社会背景" class="headerlink" title="2.1.2社会背景"></a>2.1.2社会背景</h3><p>&ensp;&ensp;&ensp;&ensp;输电是电力系统整体功能的重要组成环节，通过变压器将发电机发出的电能升压后，再经断路器等控制设备接入输电线路来实现。按结构形式，输电线路分为架空输电线路和地下线路，其中架空输电线路由线路杆塔、导线、绝缘子等构成，架设在地面之上，是目前输电线路采用的主要形式。架空输电线路具有距离长、分布广的特点，且线路设备长期露置在外界环境中运行，容易遭受各种气候条件的侵袭（如雨雪、冰冻、污秽、雷击等），以及其它的外力破坏（如机械撞击杆塔或拉线基础、树竹倾倒碰撞导线、鸟兽造成的接地短路等），因此线路出现故障的机会较多，而且一旦发生故障，需要较长时间才能修复送电，会造成不同程度的损失。为了保证输电线路的安全运行，需加强线路的巡视和检查，随时发现设备的缺陷和危及线路安全运行的因素，以便及时检修消除隐患，并制定安全措施。</p><p>&ensp;&ensp;&ensp;&ensp;传统的电力巡检主要依靠人工巡视，综合运用感官及部分配套的检测仪器对相关设备及杆塔等进行简单定性判断为主的检查，除存在劳动强度大、巡线效率低等缺陷外，还具有巡检不到位，巡检结果难以数字化展现等问题，如图2-2所示。近年来，随着无人机技术、数据处理技术、软件技术的发展和在巡检领域的深入应用，目前电网已形成了”直升机/无人机巡线+激光雷达扫描+数据处理分析+数据应用与可视化展示”<br>的智能巡检业务模式，可有效降低劳动强度、提高巡检效率、扩大覆盖范围、并数字化展现巡检结果，对提高电网运行安全性、稳定性以及运行效率具有重要意义。</p><h3 id="2-1-3市场背景"><a href="#2-1-3市场背景" class="headerlink" title="2.1.3市场背景"></a>2.1.3市场背景</h3><p>&ensp;&ensp;&ensp;&ensp;近年来，随着城市地铁、高速公路等交通建设的不断发展，越来越多的隧道被建造出来。而对于这些隧道的安全问题，巡检是必不可少的一环。然而，由于隧道内环境复杂、危险系数高等原因，传统的人力巡检方式已经无法满足现代化建设的需求。通过使用隧道巡检机器人，弥补了人力不足的缺陷，成为现代化建设中的利器，随着科技的不断进步和发展，机器人巡检将会成为未来趋势。</p><p>&ensp;&ensp;&ensp;&ensp;随着计算机视觉和机器学习等技术的发展，巡检机器人的性能和功能也得到了不断提高，巡检机器人的应用越来越广泛，市场需求也在不断增长。2016年中国智能巡检机器人需求量602台，预计2023年中国巡检机器人需求总量为4637台。其中：电力智能巡检机器人4350台，其他智能巡检机器人287台。2016-2023年中国智能巡检机器人市场需求量统计如图2-3所示。</p><p><img src="/img/image8.png" alt="2016-2023年中国智能巡检机器人市场需求量统计图（单位：台）">  </p><h3 id="2-1-4市场规模"><a href="#2-1-4市场规模" class="headerlink" title="2.1.4市场规模"></a>2.1.4市场规模</h3><p>&ensp;&ensp;&ensp;&ensp;随着计算机视觉和机器学习等技术的发展，巡检机器人的性能和功能也得到了不断提高，巡检机器人的应用越来越广泛，市场需求也在不断增长。2022年中国智能巡检机器人市场规模达到了15.66亿元。其中：电力智能巡检机器人规模14.88亿元，其他智能巡检机器人规模为0.78亿元。2023年中国智能巡检机器人市场规模约为19.71亿元。其中：电力智能巡检机器人规模约为18.27亿元，其他智能巡检机器人规模约为1.44亿元。据统计，2016年我国隧道巡检机器人行业市场规模10208.7万元，到2022年隧道巡检机器人行业市场规模达到了27439.5万元，年复合增长率达到了17.91%。2016-2022年中国隧道巡检机器人市场规模如图2-4所示。</p><p><img src="/img/image9.png" alt="2016-2022年中国隧道巡检机器人市场规模"></p><h3 id="2-1-5市场格局"><a href="#2-1-5市场格局" class="headerlink" title="2.1.5市场格局"></a>2.1.5市场格局</h3><p>&ensp;&ensp;&ensp;&ensp;伴随传感器技术、智能控制技术、数据挖掘技术以及人工智能技术等学科知识和技术的积累和应用，智能巡航机器人与各种新技术的结合愈加紧密，产生出多种新的功能与应用。与此同时，科学技术的进步带来相关产品市场价格不断降低。2022年中国智能巡检机器人市场均价为46.3万元/台，电力智能巡检机器人均价46万元/台，其他智能巡检机器人均价54万元/台；2023年中国智能巡检机器人市场均价约为42.5万元/台，电力智能巡检机器人均价约为42万元/台，其他智能巡检机器人均价约为50万元/台。2016-2023年中国智能巡检机器人市场均价走势如图2-5所示。</p><p><img src="/img/image10.png" alt="2016-2023年中国智能巡检机器人市场均价走势图（单位：万/元台）">  </p><h3 id="2-1-6行业领先企业分析"><a href="#2-1-6行业领先企业分析" class="headerlink" title="2.1.6行业领先企业分析"></a>2.1.6行业领先企业分析</h3><p>1.深圳市赛为智能股份有限公司</p><p>&ensp;&ensp;&ensp;&ensp;深圳市赛为智能股份有限公司是国内领先的人工智能产品及解决方案提供商，主要业务板块包括人工智能、智慧城市、文化教育三个。其中人工智能板块中，公司围绕人工智能核心发展战略，深耕人工智能核心技术，以市场为导向不断拓展人工智能产品，目前已形成包括无人机、机器人、图像及视频识别产品、轨道交通车载产品为主的产品线。在机器人方面，公司已研制开发出多款工业巡检机器人，可以面向不同的工业应用场景，替代人工完成巡检任务，并实现机器代人、无人值守，帮助业主降低人工成本，提高运维效率，保障安全生产，促进节能环保。2023年公司持续对主营业务进行优化，将主营业务进一步聚焦到人工智能领域，并积极拓展轨道交通业务。从经营业绩来看，2023年前三季度公司营业收入达到3.26亿元，同比上涨35.71%；归母净利润为0.17亿元，同比上涨157.42%。2019-2023年前三季度赛为智能营业收入及归母净利润如图2-6所示。</p><p><img src="/img/image11.png" alt="2019-2023年前三季度赛为智能营业收入及归母净利润（单位：亿元）">  </p><p>2.亿嘉和科技股份有限公司</p><p>&ensp;&ensp;&ensp;&ensp;亿嘉和科技股份有限公司作为机器人智能应用服务商，主要从事特种机器人产品的研发、生产、销售及智能化服务，充分融合移动、感知、操作、人工智能、数据分析等机器人相关技术，面向电力、商业清洁、新能源充电、轨道交通等行业领域，提供多样化的智能产品、智能服务和系统解决方案。公司产品主要分为操作类机器人、巡检类机器人、商用清洁机器人、智能化系统及解决方案、消防类机器人。其中，巡检类机器人又分为室内巡检机器人和室外巡检机器人。2023年公司积极探索操作、巡检、消防等机器人产品在钢铁、煤炭等新行业领域的推广应用，拓展产品功能及应用场景，进一步提升产品性能和公司竞争力，推动公司多元化发展战略。据统计2023年前三季度公司营业收入下降35.16%，达3.83亿元；归母净利润同比下降562.49%，亏损0.87亿元。2019-2023年前三季度亿嘉和营业收入及归母净利润如图2-7所示。</p><p><img src="/img/image12.png" alt="2019-2023年前三季度亿嘉和营业收入及归母净利润（单位：亿元）">  </p><h2 id="2-2需求应用分析"><a href="#2-2需求应用分析" class="headerlink" title="2.2需求应用分析"></a>2.2需求应用分析</h2><p>&ensp;&ensp;&ensp;&ensp;在电力系统中，由于电能生产、输送、分配和使用的连续性，对系统中各设备单元的安全可靠运行都有很高的要求。特别是随着电力工业向着大机组、大容量、高电压的迅速发展，保障设备运行的可靠性更成为安全生产的突出课题。因此，电力设备的运维检测，特别是一些先进技术、方式、方法在设备故障诊断中的应用也越来越受到普遍的重视。我国电力系统的构成电力系统由发电厂、输电环节、变电环节、配电环节及电力用户组成，其构成如图2-8所示：</p><p><img src="/img/image13.jpeg" alt="我国电力系统构成图">  </p><p>&ensp;&ensp;&ensp;&ensp;电力设备的运维检测是指通过对电力设备的运行状态进行检测或监测，获取电力设备状态信息，及时发现各种劣化过程的发展状况，并在可能出现故障或性能下降到影响正常工作前，及时进行维修、更换，从而保障整个电网运行的安全性、稳定性和可靠性。</p><p>&ensp;&ensp;&ensp;&ensp;电力设备的运维检测手段主要包括带电人工检测、带电在线监测和离线检测等三种。其中，带电人工检测一般采用便携式检测设备，对运行状态下的电力设备进行的现场检测；带电在线监测一般采用相关设备或仪器，安装在被监测环境中，用来对被监测设备进行不间断实时的在线监测；而离线检测则一般通过定期对停止运行的设备进行规定项目的检查，发现设备的问题和隐患。</p><p>&ensp;&ensp;&ensp;&ensp;随着我国国民经济的快速发展和电力需求的不断增加，电力用户对于供电安全性、稳定性和可靠性要求不断升级。为了更好的满足电力用户需求，同时尽可能降低检修的成本，两大电力公司从”十一五”时期开始逐步加大了对电力设备状态检测、监测技术的研发和试点力度，从而替代以人工巡检为主的巡检方式。然而，现有的巡检方式和技术与电力生产的安全性要求相比仍有相当的距离，因此，通过电力智能巡检机器人取代人工巡检，具有重要意义。</p><h2 id="2-3市场定位"><a href="#2-3市场定位" class="headerlink" title="2.3市场定位"></a>2.3市场定位</h2><p>&ensp;&ensp;&ensp;&ensp;本公司研制的轮式电缆监测机器人是一种专门用于隧道内部巡视、数据采集、安全监测、远程监控和自主导航的高科技产品。它能够实时监测和记录隧道内的情况，实现远程监控和调度，提高隧道工作的安全性和效率。这种机器人通常分为轨道式和无轨道式两大类，轨道式巡检机器人的运行轨道固定在隧道的顶板上，而无轨道式巡检机器人则可以在没有固定轨道的情况下自由移动。轮式电缆监测机器人市场定位在于满足现代城市交通建设中对隧道安全监测和巡检的迫切需求，同时利用高新技术提升巡检效率和安全性。随着国家政策的支持和技术的进步，行业有望迎来更广阔的发展空间。</p><h2 id="2-4波特五力模型分析"><a href="#2-4波特五力模型分析" class="headerlink" title="2.4波特五力模型分析"></a>2.4波特五力模型分析</h2><p>&ensp;&ensp;&ensp;&ensp;五种力量模型分析，由<a href="https://baike.baidu.com/item/%E8%BF%88%E5%85%8B%E5%B0%94%C2%B7%E6%B3%A2%E7%89%B9/7856340?fromModule=lemma_inlink">迈克尔·波特</a>（Michael Porter）于20世纪80年代初提出，它认为行业中存在着决定竞争规模和程度的五种力量，这五种力量综合起来影响着产业的吸引力。五种力量分别为进入壁垒、替代品威胁、买方议价能力、卖方议价能力以及现存竞争者之间的竞争。如图2-9所示。</p><p><img src="/img/image14.jpeg" alt="图2-9 波特五力模型图"> </p><p>1.供应商的讨价还价能力</p><p>&ensp;&ensp;&ensp;&ensp;供应商的议价能力是供方主要通过其提高投入要素价格与降低单位价值质量的能力，来影响行业中现有企业的盈利能力与<a href="https://baike.baidu.com/item/%E4%BA%A7%E5%93%81%E7%AB%9E%E4%BA%89%E5%8A%9B/0?fromModule=lemma_inlink">产品竞争力</a>。供方力量的强弱主要取决于他们所提供给买主的是什么投入要素，当供方所提供的投入要素其价值构成了买主产品<a href="https://baike.baidu.com/item/%E6%80%BB%E6%88%90%E6%9C%AC/0?fromModule=lemma_inlink">总成本</a>的较大比例、对买主<a href="https://baike.baidu.com/item/%E4%BA%A7%E5%93%81%E7%94%9F%E4%BA%A7%E8%BF%87%E7%A8%8B/0?fromModule=lemma_inlink">产品生产过程</a>非常重要、或者严重影响买主产品的质量时，供方对于买主的潜在讨价还价力量就大大增强。</p><p>&ensp;&ensp;&ensp;&ensp;由于本公司供方企业杭州西湖电子研究所已逐渐确立了在电子电气机械相关技术、计算机软硬件、机械产品与仪器设备等领域的领先地位。供方企业的产品具有一定特色，且难找到可与供方企业产品相竞争的替代品，因此供应商讨价还价能力较高。</p><p>2.购买者的讨价还价能力</p><p>&ensp;&ensp;&ensp;&ensp;购买者的讨价还价能力是指购买者主要通过其压价与要求提供较高的产品或服务质量的能力，来影响行业中现有企业的盈利能力。企业总是追求更高的<a href="https://baike.baidu.com/item/%E6%8A%95%E8%B5%84%E5%9B%9E%E6%8A%A5%E7%8E%87/89993?fromModule=lemma_inlink">投资回报率</a>，而买方也就是消费者总是期待用最小的支出获得最好的产品和最优质的服务。因此，购买者也能够成为行业赢利性的威胁。购买者能够强行压低价格，要求更高的质量或更多的服务。为达到这一目的，他们可能使生产者互相竞争，或者不从任何单个生产者那里购买商品。由于本公司针对的目标群体主要是工业客户，工业客户对产品质量的敏感性更高，而本公司产品替代品的替代程度低，因此购买者的讨价还价能力较低。</p><p>3.潜在竞争者进入的能力</p><p>&ensp;&ensp;&ensp;&ensp;新进入者在给行业带来新生产能力、新资源的同时，将希望在已被现有企业瓜分完毕的市场中赢得一席之地，这就有可能会与现有企业发生原材料与<a href="https://baike.baidu.com/item/%E5%B8%82%E5%9C%BA%E4%BB%BD%E9%A2%9D/0?fromModule=lemma_inlink">市场份额</a>的竞争，最终导致行业中现有企业盈利水平降低，严重的话还有可能危及这些企业的生存。竞争性进入威胁的严重程度取决于两方面的因素，这就是进入新领域的障碍大小与预期现有企业对于进入者的反应情况。</p><p>&ensp;&ensp;&ensp;&ensp;轮式电缆监测机器人的研发涉及数学、力学、机构学、材料科学、自动控制、计算机、人工智能、光电、通信、传感、仿生学等多学科知识，同时，从技术角度来看，属于多学科综合的技术密集型行业，受制于多个新兴行业的发展状态；此外，机器人测试与安装调试环节，不但须掌握多学科融合的技术和知识，还须积累丰富的机器人产品现场实践经验。较高的技术门槛，对缺乏技术沉淀和经验积累的新企业形成一定的技术壁垒。因此，行业壁垒较高，市场参与主体较少，竞争相对较为缓和，潜在竞争者进入的能力较低。</p><p>4.替代品的替代能力</p><p>&ensp;&ensp;&ensp;&ensp;下游行业使用轮式电缆监测机器人目的在于保障产品质量及性能的稳定性。因此，行业内的竞争以技术竞争为主，能否针对客户的行业特点和需求差异，提供完整的解决方案及在此基础上的产品配套能力成为核心竞争力。而技术正是本公司产品的优势，特高频、超声波检测手段，同步检测GIS局放状况、定位闪络击穿点的结合正是轮式电缆监测机器人的技术创新点，因此替代品的替代能力较低。</p><p>5.同行业竞争者的竞争程度</p><p>&ensp;&ensp;&ensp;&ensp;随着行业不断发展，国内企业总体水平和综合实力有了很大程度的提高，目前市场上已经存在的知名隧道巡检机器人品牌和企业，通过多年的积累，已经建立了稳固的市场地位和客户基础。这些企业拥有强大的技术实力、产品质量和市场推广策略，使得新进入者难以轻易打破其市场格局。对于新进入者来说，需要投入大量的资金和资源进行市场推广和品牌建设，才能在激烈的市场竞争中脱颖而出。国内企业不断加大各方面等的投入，改进生产工艺，提高研发水平，改善产品性能，目前已在中高端市场与国外厂家直接展开竞争，未来逐步取代部分由国外产品占据的市场份额将成为国内无损检测行业市场趋势之一，同行业竞争者的竞争程度较高。</p><h2 id="2-5-SWOT分析"><a href="#2-5-SWOT分析" class="headerlink" title="2.5 SWOT分析"></a>2.5 SWOT分析</h2><h3 id="2-5-1-SO战略"><a href="#2-5-1-SO战略" class="headerlink" title="2.5.1 SO战略"></a>2.5.1 SO战略</h3><p>1.抓住市场机遇，加大资金投入，利用产品的价格优势，通过各种宣传手段将其引入市场，并占领市场。</p><p>2.加快技术革新，研发各类相关产品，减少市场竞争带来的销售壁垒。</p><p>3.利用原材料的的独特性优势减少相关企业的模仿运用，增加其开发的特殊性以限制其他厂商的应用。</p><h3 id="2-5-2-WO战略"><a href="#2-5-2-WO战略" class="headerlink" title="2.5.2 WO战略"></a>2.5.2 WO战略</h3><p>1.加快企业发展，加大生产力度，将获得的利润来弥补新产品研发资金的不足。</p><p>2.利用政策的优越性来来提高企业的公信度，让其面向大众，增加产品的口碑。</p><p>3.加大宣传力度，平台线下各种宣传相结合，吸引大众来购买。</p><h3 id="2-5-3-ST战略"><a href="#2-5-3-ST战略" class="headerlink" title="2.5.3 ST战略"></a>2.5.3 ST战略</h3><p>1.积极参与市场竞争，不断占领市场，减小其他相似产业带来的冲击。</p><p>2.加强与科研机构的合作，不断更新换代，减少竞争对手。</p><p>3.完善产品产业链，增加产品的完善性。</p><h3 id="2-5-4-WT战略"><a href="#2-5-4-WT战略" class="headerlink" title="2.5.4 WT战略"></a>2.5.4 WT战略</h3><p>1．合理分配资金，避免因资金的不合理投入而带来的一系列不良效应。</p><p>2.加大相关产业的合作力度，在完善产品自身的同时也学习其他产品的优势条件。</p><p>3.加快产品的后期研发，实现产品完备化、多元化。</p><h1 id="第三章-市场分析"><a href="#第三章-市场分析" class="headerlink" title="第三章 市场分析"></a>第三章 市场分析</h1><p>&ensp;&ensp;&ensp;&ensp;本团队研发的电缆巡检机器人，是机器人产业的一个重要分支，由于其拥有优越的移动能力和广泛的应用前景，近年来一直是科研热点。本团队的产品操作简便，运动灵活，可适应复杂地形，可用于工业生产等领域，实时传输电缆环境内温度、水位、局部放电、图片等各类数据。巡检机器人的应用，大大提升了巡检效率和精度，保障电缆更加安全。发挥自身独特优势，具有极高的研究意义与市场价值。</p><h2 id="3-1宏观环境分析（PEST分析）"><a href="#3-1宏观环境分析（PEST分析）" class="headerlink" title="3.1宏观环境分析（PEST分析）"></a>3.1宏观环境分析（PEST分析）</h2><p><img src="/img/image15.png" alt="图4-1 宏观环境分析图">  </p><p>&ensp;&ensp;&ensp;&ensp;对于企业来说，外部的宏观环境虽不会直接影响到企业内部，但却在很大程度上间接影响企业的运营和发展。在六大宏观环境因素中，核心因素为政治环境因素、经济环境因素、社会环境因素以及技术环境因素。</p><h3 id="3-1-1-政治环境分析"><a href="#3-1-1-政治环境分析" class="headerlink" title="3.1.1 政治环境分析"></a>3.1.1 政治环境分析</h3><p>&ensp;&ensp;&ensp;&ensp;现阶段，世界各国对机器人产业的重视与关注程度日益增加。各主要经济体纷纷将发展机器人产业上升为国家战略。机器人被誉为”制造业皇冠顶端的明珠”，其研发、制造与应用是衡量一个国家科技创新和高端制造业水平的重要标志。</p><p>&ensp;&ensp;&ensp;&ensp;为加快推动机器人产业高质量发展，依据《中华人民共和国国民经济和社会发展第十四个五年规划和2035年远景目标纲要》，我国政府工业和信息化部等15部门联合对外发布《”十四五”机器人产业发展规划》：明确到2025年，机器人产业营业收入年均增速超过20%；形成一批具有国际竞争力的领军企业及一大批创新能力强、成长性好的专精特新”小巨人”企业，建成3-5个有国际影响力的产业集群；制造业机器人密度实现翻番，并提出到2025年我国成为全球机器人技术创新策源地、高端制造集聚地和集成应用新高地。</p><p>&ensp;&ensp;&ensp;&ensp;我国在《中国制造2025》中将机器人列为十大重点领域之一。早在2013年便已超过日本成为全球机器人最大市场且仍在持续增长中。随着智能机器人提升为国家战略，如何推动我国机器人产业持续、健康、有序发展成为当前面临的重要课题。</p><p><img src="/img/image16.png" alt="图4-2 宏观环境分析图">  </p><h3 id="3-1-2-经济环境分析"><a href="#3-1-2-经济环境分析" class="headerlink" title="3.1.2 经济环境分析"></a>3.1.2 经济环境分析</h3><p>1.机器人市场规模不断扩大</p><p>&ensp;&ensp;&ensp;&ensp;2023年全球机器人市场规模保持增长，但受疫情影响增速放缓。工业机器人市场自2019年后，再次出现负增长现象。虽然疫情对机器人行业产生了一定的影响，但也带来了新的发展机遇：服务、特种机器人因疫情”非接触”的使用场景增加，增速较为稳定，需求量巨大。后续随着疫情在全球范围内得到控制，机器人市场也将逐渐回暖，同时”非接触式机器人”的优势也将继续得到人们的重视。综上可知，机器人市场仍然拥有巨大潜力，并且随着未来经济的发展，市场需求的增加，该市场还将会有源源不断的活力流进。现阶段，受我国科技发展以及智能化相关产品普及程度极大提高的影响，机器人市场迎来发展小高峰。</p><p><img src="/img/image17.png" alt="图4-3 我国机器人市场规模"></p><p>&ensp;&ensp;&ensp;&ensp;目前市场上的电力监测项目有很多，但市面上的产品都存在着一些问题。大部分企业没有设计出智能化的机器人产品，无法吸引目标市场的眼球；设计的产品并不能解决市场痛点，无法满足消费者需求；部分企业的产品价格过高，超出客户预算导致销量下降。机器人市场的巨大潜力和其可发展的空间让团队看到了进入的可得利润。通过对目标市场消费心理和消费行为的分析，本公司设计出了复杂地形作业的特色产品。通过差异化战略本团队可以获得更多客户的青睐。还未存在有成熟机制的轮式电缆检测机器人公司，这就说明了本公司进入市场的先动性。大型成熟的电力安全监测公司所提供的服务大多也只是监测仪器。这也是本公司在与其他公司竞争时的优势竞争力，通过提供差异化的探测服务快速占据目标市场。</p><p><img src="/img/image18.png" alt="图4-4 我国机器人市场规模"></p><p>&ensp;&ensp;&ensp;&ensp;作为占比最高的工业机器，其市场规模庞大，市场需求极高。本团队的产品可以解决市场上电缆监测装置所无法解决的一些问题，其前景是巨大的。</p><h3 id="3-1-3-社会环境分析"><a href="#3-1-3-社会环境分析" class="headerlink" title="3.1.3 社会环境分析"></a>3.1.3 社会环境分析</h3><p>1.高压电缆存量巨大</p><p>&ensp;&ensp;&ensp;&ensp;迄今国内投运高压电缆已经达到十万公里数量级。其中在二线城市以上的大型、超大型、特大型城市以电缆隧道为主。</p><p>2.现状不容乐观</p><p>&ensp;&ensp;&ensp;&ensp;早期高压电缆使用已经超过20年，不少甚至超过30年，基本达到设计寿命。同时近几年国产电缆企业的产品质量良莠不齐。对这些电缆的状态监测与诊断迫在眉睫。每年稳定新增目前国内高压电缆的年需求稳定在1万公里左右，主流高压电缆厂家将近30家，生产厂家的产能利用率超过80%<br>。</p><p>3.人工巡检有局限性</p><p>&ensp;&ensp;&ensp;&ensp;在面对巨大的存量市场，有限的专业人员数量无法定期完成全部高压电缆的巡检。同时电缆隧道的地下环境也不适合人工长期作业。</p><h3 id="3-1-4-技术环境分析"><a href="#3-1-4-技术环境分析" class="headerlink" title="3.1.4 技术环境分析"></a>3.1.4 技术环境分析</h3><p>&ensp;&ensp;&ensp;&ensp;隧道机器人能力以及高压电缆的诊断技术不断进步，随着技术的不断进步，出现多种适合隧道内巡检的机器人，同时诊断技术也不断提高。</p><h2 id="3-2微观环境分析"><a href="#3-2微观环境分析" class="headerlink" title="3.2微观环境分析"></a>3.2微观环境分析</h2><h3 id="3-2-1波特五力模型分析"><a href="#3-2-1波特五力模型分析" class="headerlink" title="3.2.1波特五力模型分析"></a>3.2.1波特五力模型分析</h3><p><img src="/img/image19.png" alt="图4-5 波特五力模型结构图"></p><p>1. 现有竞争者</p><p>&ensp;&ensp;&ensp;&ensp;通过本团队的调查研究发现，目前市场上还未存在有成熟机制的轮式电缆检测机器人公司，这就说明了本公司进入市场的先动性。大型成熟的电力安全监测公司所提供的服务大多也只是监测仪器。这也是本公司在与其他公司竞争时的优势竞争力，通过提供差异化的探测服务快速占据目标市场。总体而言现有的针对监测仪器改良的公司对本团队的竞争压力较小，但是具有多个服务环节和分类产品大型智慧化公司对本团队有强烈的冲击力。</p><p>表4-1 各大竞争者简介表</p><div class="table-container"><table><thead><tr><th>公司名称</th><th>公司特点</th></tr></thead><tbody><tr><td>杭州云深处科技DEEPROBOTICS</td><td>杭州云深处科技DEEPROBOTICS掌握四足机器人运动控制核心技术，自主研发的“绝影”系列机器人已在安防巡检、公共救援等多种应用环境。</td></tr><tr><td>深圳优艾智合机器人科技有限公司</td><td>基于移动机器人，致力于提供智能制造，智能巡检及维保等覆盖全行业全方位的产品和解决方案。为客户提供移动机器人本体及集成解决方案。致力于为半导体及电子制造，飞机制造，电力运输等行业提供工厂自动化及物流解决方案。为电力电网，能源冶炼，商业物业等行业，提供巡检及自动化维保解决方案。</td></tr><tr><td>杭州宇树科技</td><td>一家世界知名的民用机器人公司，专注于消费级、行业级高性能通用足式/人形机器人的自主研发、生产和销售，在足式机器人领域达到全球技术领先。在机器人核心零部件、运动控制、机器人感知等综合领域具有卓越的领先性。目前累计申请多项国内外专利，国家高新技术认证企业，国家级专精特新“小巨人”企业。</td></tr><tr><td>江苏明月软件技术股份有限公司</td><td>是一家为企业和政府的数字化转型提供数字技术服务的软件企业。应用大数据、云计算、人工智能、物联网等新兴技术为金融、通信、能源、汽车、高科技、文旅等行业客户及气象、国土等政府机构提供从咨询、设计到软件开发、测试及系统运维等全流程服务和一站式解决方案。近年来，该公司研发出一套电缆隧道移动式局放智能巡检系统，采用四足机器人为检测载体，是一款综合局放、温测等多种检测手段为一体的电缆隧道智能巡检系统。</td></tr></tbody></table></div><p>2.潜在进入者</p><p>&ensp;&ensp;&ensp;&ensp;公司经营不需要太大的规模，提供的是个性化服务，设定的主要目标是通过差异化的服务占据市场分额，这也就注定了本团队的市场进入障碍不高。在这个信息爆发的信息社会，由于互联网的开放性用户的忠诚度不一定会太高。产品服务也更加容易被复制。这些都警示本团队，潜在进入者带来的竞争压力较大。</p><p>3.替代品的威胁</p><p>&ensp;&ensp;&ensp;&ensp;（1）轮式电缆巡检机器人的制作成本较高，目前所需原材料也受到一些制约，但就当前所用材料的使用情况来说比较客观。</p><p>&ensp;&ensp;&ensp;&ensp;（2）产品从技术、原料上进行改革，以此降低小车的制作成本，但同时又能保证其质量和实用性，因此买家的转换成较低，履带车行业所产生的竞争能力强，这种来自替代品生产者的竞争压力的强度，具体可以通过考察替代品销售增长率、替代品厂家生产能力与盈利扩张情况来加以描述。</p><p>4.供应商的议价能力</p><p>&ensp;&ensp;&ensp;&ensp;公司的主要供应商分布，本团队的分类产品有很多的供应商，他们不存在产品的独特性，这样导致本团队的供应商议价能力低，可以寻找不同的合作伙伴。</p><p>5.买方的议价能力</p><p>&ensp;&ensp;&ensp;&ensp;由于本公司所提供的产品的差异性和个性化，在目前为止没有出现同类产品，所以公司产品的市场优越性存在。而考虑到买方市场有军工业、工业生产、灾后搜救、农业种植等领域，这些需求市场刚性需求较大，顾客的议价能力低。</p><p>&ensp;&ensp;&ensp;&ensp;综上所述，通过”五力”分析，在本团队面临的竞争环境中，现有竞争对手对本公司竞争威胁较小，潜在进入者和替代品对新模式具有一定的竞争威胁，供应商的议价能力和消费者的议价能力较低。影响新模式接受程度和产品服务销售的最主要因素还是顾客对于产品及服务认可程度，所以在公司产品设计和营销过程中要密切关注消费者需求的变化，最大程度满足顾客需求，不断创新，提高产品的美誉度，培养顾客忠诚度，以增强自身的市场地位与竞争实力。</p><h3 id="3-2-2-竞争分析"><a href="#3-2-2-竞争分析" class="headerlink" title="3.2.2 竞争分析"></a>3.2.2 竞争分析</h3><p>&ensp;&ensp;&ensp;&ensp;本团队的项目，建立在传统的机器人制造业务基础上，开拓创新，旨在建立一种以有大型电缆安全保障需求的领域为主要对象，辐射其他需求市场的新的电力安全保障服务模式———个性化定制服务。由此，公司通过差异化战略来打开市场。本团队的优势有：</p><p>表4-2 团队竞争优势表</p><div class="table-container"><table><thead><tr><th>序号</th><th>竞争优势类型</th><th>具体内容</th></tr></thead><tbody><tr><td>1</td><td>先动优势</td><td>建立主要面向电力安全、工业生产等所有有电力安全监测保障需求的市场，为其提供个性化建议及服务，打造安全性高、效率高的作业体验。目前市场上还没有基于此模式成型的专业机构，公司容易做强做大占据较大的市场份额。</td></tr><tr><td>2</td><td>差异化</td><td>针对市场中各个领域的需求场景，本团队专业人员会同时给出对应的专业探测意见，综合分析目标市场，通过这种差异化战略，迅速占据市场份额。</td></tr><tr><td>3</td><td>服务群体明确，强烈的市场需求与成熟的消费市场</td><td>公司的经营理念主要是面向各行业提供能通过复杂地形的产品以及减少人工占比、提高作业安全性的需求市场，并为其分别提供不同的个性化服务。主要针对有通过复杂地形需求的市场，且目前这方面需求的各大领域市场中存在大量空白，本团队的产品易进入并打开这部分市场，首先占取相对大的市场份额。</td></tr><tr><td>4</td><td>成本和风险优势</td><td>现阶段，本团队可以调用现有的机器人市场的制造资源，借鉴其成熟的市场运作系统和服务模式，改善自己的经营模式，一定程度上降低了风险和成本。通过设定大学生在校兼职，根据他们的工作时间给予工资，很大程度地降低了公司的运营成本。</td></tr><tr><td>5</td><td>强势的资源支持</td><td>通过面向目标市场的直接性宣传营销，扩大公司的经营面，获得稳定的顾客来源，利用军工行业的稳定需求，发展其成为公司的固定顾客，将潜在顾客转变为可盈利基础。</td></tr></tbody></table></div><h2 id="3-3市场痛点"><a href="#3-3市场痛点" class="headerlink" title="3.3市场痛点"></a>3.3市场痛点</h2><p>电缆巡检机器人产业市场概况：</p><p>&ensp;&ensp;&ensp;&ensp;目前市场上的电缆检测仪器较多，大多还依赖于人工检测，少数企业有智慧电缆检测项目，但它们都存在着一些问题，比如多为定点安装监测装置监测。大部分企业没有设计出具有智能化、全面化、巡检性的产品，无法吸引目标市场的眼球；设计的产品并不能解决目标市场的痛点，无法满足消费者需求；部分企业的产品价格过高，超出客户预算导致销量下降。电力安全、电缆监测市场的巨大潜力和其可发展的空间让本团队看到了进入该市场的可得利润。通过对目标市场消费心理和消费行为的分析设计出了智能化的特产品品，满足目标市场的需求并解决类似产品的缺点。</p><h1 id="第四章-营销策略"><a href="#第四章-营销策略" class="headerlink" title="第四章 营销策略"></a>第四章 营销策略</h1><h2 id="4-1产品策略"><a href="#4-1产品策略" class="headerlink" title="4.1产品策略"></a>4.1产品策略</h2><h3 id="4-1-1产品组合策略"><a href="#4-1-1产品组合策略" class="headerlink" title="4.1.1产品组合策略"></a>4.1.1产品组合策略</h3><p>&ensp;&ensp;&ensp;&ensp;产品线延伸：可以进一步延伸产品线，在现有轮式电缆监测机器人的基础上，根据客户群体的不同，更换不同功能模块，开发不同功能侧重、不同规格大小的机器人，以满足更多样化的客户需求和应用场景。例如，开发更小巧灵活的版本用于狭窄空间巡检，或者具备更强检测能力的高端型号。</p><p>&ensp;&ensp;&ensp;&ensp;相关多元化：围绕着电缆监测和隧道环境检测这一核心领域，可以拓展相关的产品和服务。比如研发配套的数据分析软件，提供更深入的数据挖掘和智能诊断功能；或者开发与机器人协作的固定监测设备，形成互补的监测网络。</p><p>&ensp;&ensp;&ensp;&ensp;产品捆绑销售：将机器人与相关的软件、培训服务等捆绑在一起销售，为客户提供一站式解决方案。这样不仅可以增加产品的附加值，还能提高客户的满意度和忠诚度。</p><h3 id="4-1-2产品生命周期策略"><a href="#4-1-2产品生命周期策略" class="headerlink" title="4.1.2产品生命周期策略"></a>4.1.2产品生命周期策略</h3><p><img src="/img/image20.png" alt="图4-1 产品生命周期图"></p><ol><li>投入期</li></ol><p>&ensp;&ensp;&ensp;&ensp;在投入期，快速打响产品知名度、扩大市场份额是产品投入是本公司的首要任务。在这个阶段公司经营风险较高，企业应该迅速打开产品销路，站稳市场，制定具有吸引力的市场导入策略，让潜在客户了解产品的功能和价值。可以通过参加行业展会、举办技术研讨会、发布案例研究等方式来提高产品的知名度。还可以利用合作关系提携本产品的销售。在这一阶段，顾客对产品不甚了解，因而有必要采用高性价比的定价策略，以吸引早期采用者，迅速打开市场。开展针对性的营销活动，向目标客户群体宣传产品的独特价值，提高产品知名度。同时要注意投资研发和技术改进，提高产品质量，重点进行技术研发和产品测试，确保产品的稳定性和可靠性。</p><ol><li>成长期</li></ol><p>&ensp;&ensp;&ensp;&ensp;在成长期，营销策略在于加大市场推广力度，拓宽销售渠道，增加市场份额，提高产品的市场占有率。这个阶段公司销量不断上升，市场竞争日趋激烈，竞争者不断涌入，在这一阶段，应主要完善产品，持续创新，不断提升产品功能和性能，保持技术领先优势。另外还需要根据市场需求和竞争态势，合理调整价格策略，以获取更高的利润。以及加强客户服务和支持，提高客户满意度和忠诚度，营造良好的口碑，增加客户粘性。</p><ol><li>成熟期</li></ol><p>&ensp;&ensp;&ensp;&ensp;此时市场需求趋于饱和，市场竞争趋于白热化状态，企业面临的是价格战的威胁，需要采用竞争价格策略，并增加新的销售渠道，开展各种促销活动等达到抑制竞争、保持销量，争取最大利润的目的。同时还可以优化生产工艺和成本控制，规模效应和生产工艺改进来降低成本，通过提高产品的盈利能力。另外，还需要进一步细分市场，针对不同的细分市场推出个性化的产品版本满足不同客户需求，以此来加强与竞争对手的差异化，突出产品的特色和优势。</p><ol><li>衰退期</li></ol><p>&ensp;&ensp;&ensp;&ensp;在衰退期，营销策略在于控制成本和维持正常现金流。在这个阶段企业会出现产能过剩，由于竞争者不断增多，因此客户会更多的进行比较，选择性价比最高的，此时企业应该有计划的改进旧产品，有目的的开发新产品，视企业情况选择持续营销旧产品或放弃旧产品转而重点发展新产品。我公司将根据市场需求加大研发力度，向市场推出新一代产品，<br>合理调整资源配置，将重点转向新的业务增长点。</p><h3 id="4-1-3产品服务策略"><a href="#4-1-3产品服务策略" class="headerlink" title="4.1.3产品服务策略"></a>4.1.3产品服务策略</h3><ol><li>售前：</li></ol><p>&ensp;&ensp;&ensp;&ensp;需求分析与定制化建议：与潜在客户进行深入沟通，了解其电缆布局、隧道环境、监测重点等具体需求。根据客户需求提供针对性的轮式电缆监测机器人和四足机器人解决方案，包括合适的路径规划、传感器配置等，展示产品如何满足其特殊要求。</p><p>&ensp;&ensp;&ensp;&ensp;产品演示与体验：组织现场或线上产品演示活动，让客户直观感受轮式电缆监测机器人的工作过程、功能特点和数据传输效果。提供实际操作体验机会，让客户更好地理解产品的便利性和智能化。</p><p>&ensp;&ensp;&ensp;&ensp;技术咨询与答疑：安排专业的技术人员随时为客户提供技术咨询服务，解答客户关于产品性能、技术参数、应用场景等方面的疑问。确保客户对产品有清晰的认识和理解。</p><ol><li>售中：</li></ol><p>&ensp;&ensp;&ensp;&ensp;项目实施与部署：成立专门的项目团队，负责产品的安装、调试和部署工作。确保机器人按照规划路径正常运行，数据传输稳定可靠，与中控平台顺利对接。</p><p>&ensp;&ensp;&ensp;&ensp;人员培训与指导：对客户的监控人员进行系统的操作培训，包括机器人控制、数据查看、报告生成等功能的使用方法。提供现场指导和操作手册，确保监控人员能够熟练掌握产品操作。</p><p>&ensp;&ensp;&ensp;&ensp;进度跟踪与沟通：保持与客户的密切沟通，及时反馈项目进度情况。对客户提出的问题和需求及时响应和处理，确保项目顺利进行。</p><p>&ensp;&ensp;&ensp;&ensp;质量控制与验收：建立严格的质量控制体系，对产品安装和调试过程进行严格把关。在项目完成后，与客户共同进行验收，确保产品符合客户要求和质量标准。</p><p>&ensp;&ensp;&ensp;&ensp;合作协调与整合：与相关合作伙伴（如网络服务提供商、传感器供应商等）进行协调和整合，确保整个系统的协同工作和稳定运行。</p><p>3.售后：</p><p>&ensp;&ensp;&ensp;&ensp;技术支持与维护：提供 24小时技术支持服务，及时解决客户在使用过程中遇到的技术问题,满足客户需求。定期对机器人进行维护和保养，确保其长期稳定运行。</p><p>&ensp;&ensp;&ensp;&ensp;软件升级与优化：持续关注技术发展和客户需求变化，及时对产品软件进行升级和优化。提供免费或优惠的软件升级服务，让客户始终享受到最新的功能和性能。</p><p>&ensp;&ensp;&ensp;&ensp;数据安全与保障：采取多重数据安全措施，确保客户数据的保密性、完整性和可用性。建立数据备份和恢复机制，防止数据丢失或损坏。</p><p>&ensp;&ensp;&ensp;&ensp;客户反馈与改进：定期回访客户，收集客户对产品的使用意见和建议。根据客户反馈对产品进行改进和优化，不断提升产品质量和客户满意度。</p><p>&ensp;&ensp;&ensp;&ensp;增值服务与拓展：根据客户需求，提供一些增值服务，如数据分析服务、定制化报告生成等。同时，探索产品在其他领域的应用拓展，为客户提供更多的价值选择。</p><h2 id="4-2价格策略"><a href="#4-2价格策略" class="headerlink" title="4.2价格策略"></a>4.2价格策略</h2><p>&ensp;&ensp;&ensp;&ensp;产品价格会在企业调查的基础上保证企业和消费者的利益，并根据市场的变化不断做出调整。</p><p>定价依据：</p><p>1.产品成本：考虑原材料采购、零部件加工与生产设备等因素。</p><p>2.市场需求：<br>产品在不同时期会由于市场的饱和程度以及消费者的需求程度而有不同的定价。</p><p>3.竞争因素：竞争对手的价格变化影响企业定价，要了解竞争对手定价策略，合理估计竞争对手企业的价格变动，在定价时找到差异化优势，避免陷入价格战，还需要及时根据竞争对手对本企业定价可能作出的反应。</p><p>4.认知价格定价法：对于想要购买本团队产品的客户，本团队的价格尾数多以8、9这两个数字为主要价格。这样的尾数定价的方式对于本团队的价格折扣也有优势，以此结尾的价格可以推进促进销售的进行。</p><p>基本定价方法：</p><p>&ensp;&ensp;&ensp;&ensp;一般情况下，商品的价格必须能够补偿产品生产及市场营销过程的所有支出，同时补偿商品的经营者为其所承担的风险支出。根据市场环境，以及产品的特殊属性，本团队采用成本加成定价法，成本是生产经营过程中所发生的实际耗费。采用成本加成定价法，便于企业开展经济核算。在成本加成的基础上制定出的价格对于生产者或消费者双方都比较公平，同时也能让公司在建立初期迅速的打开市场，建立良好的品牌形象。公司最终产品价格将定位于”成本加成定价”与”同行业先行价格水平”定价策略：成本加成定价法与参与竞争定价法相结合，同时利用认知价格定价法做辅助，三者结合确定最后价格。</p><p><img src="/img/image21.png" alt="图4-3 产品定价法示意图"></p><p>具体定价方法：</p><p>1.成本加成定价法</p><p>a.总成本定价法：<img src="/img/image22.png" alt="">{width=”30%”}</p><p>b.目标利润定价法：</p><p>产品价格=[（单位变动成本+单位固定成本）/（1-销售税率）]+目标利润 ×（1-销售税率）]</p><p>目标利润=（单位变动成本+单位固定成本）× 成本利润率</p><p>2.竞争者定价法</p><p>&ensp;&ensp;&ensp;&ensp;参考同行业，选择与本团队履带式四足机器人相类似的产品作为参考对象，竞争者定价法的结果。</p><p>3.折扣策略：</p><p>&ensp;&ensp;&ensp;&ensp;为了获得更多的客户资源，让客户感觉到购买公司产品能够真正享受到价格实惠，公司将采取各种各样的价格折扣方式：非累计数量折扣：凡是顾客在本公司一次购买的产品达到一定的数量或消费达到一定的金额，公司将根据客户消费折扣标准给予不同程度的价格优惠。累计数量折扣：顾客只要在一定的时间内，购买商品达到一定数量或金额时，按总量的大小给予折扣。</p><h2 id="4-3促销策略"><a href="#4-3促销策略" class="headerlink" title="4.3促销策略"></a>4.3促销策略</h2><p>人员促销：</p><p>1.选择性推销</p><p>&ensp;&ensp;&ensp;&ensp;在推销过程中，买卖双方当面洽谈，易于形成一种直接而友好的相互关系。通过交谈和观察，推销员可以掌握顾客的购买动机，有针对性地从某个方面介绍本产品的特点和功能，抓住有利时机促成交易。</p><p>2.针对性推销</p><p>&ensp;&ensp;&ensp;&ensp;在每次推销之前，可以选好具有较大购买可能的顾客进行推销，并有针对性地对未来顾客作一番研究，拟定具体的推销方案、策略、技巧等，以提高推销成功率。</p><p>3.建立公共关系</p><p>&ensp;&ensp;&ensp;&ensp;有经验的推销员可以使买卖双方从单纯的买卖关系发展到建立深厚的友谊，彼此信任、彼此谅解，这种感情增进有助于推销工作的开展以及公司后续市场的开拓。</p><p>4.广告宣传促销</p><p>&ensp;&ensp;&ensp;&ensp;在大众媒体和专业媒体上发布制作精良的企业形象广告，广告力求传达信息准确到位，同时配以文字则会取得更为良好的效果。品牌广告可以通过多种渠道进行，广播、电视广告、微博、微信公众号、搜索引擎等渠道的广告信息传递时间短但出现次数较多，可以用来提高产品的大众知晓度；利用报纸、杂志、期刊等传统宣传方式制作一些寓意深刻、高品位、高品质、专业性强的广告，以求提升品牌形象；同时，在多渠道投放不同广告以吸引不同类型的消费者的前提下，应该保持各类广告风格的统一，利用不同媒介的特色，建立全方位、立体的信息传播网。</p><p>5.分阶段促销策略</p><p>&ensp;&ensp;&ensp;&ensp;投入期是产品首次正式上市的最初销售时期，只有少数创新者和早期采用者购买产品，销售量小，促销费用和制造成本都相对较高，竞争不激烈。这一阶段本公司促销的指导思想是，把销售力量直接投向最有可能的购买者，让这两类具有领袖作用的消费者加快新产品的扩散速度，缩短导入期的时间。产品成长期，其性能基本稳定，大部分消费者对产品已熟悉，销售量快速增长、竞争者不断进入、市场竞争加剧。本企业维持市场增长率，可采取以下策略：改进和完善产品、寻求新的细分市场、改变广告宣传的重点、适时降价等。成熟期的促销策略应该是主动出击，以便尽量延长产品的成熟期，具体策略有：市场改良策略，即通过开发产品的新用途和寻找新用户来扩大产品的销售量；产品改良策略，即通过提高产品的质量，增加产品的使用功能、改进产品的款式、包装，提供新的服务等来吸引消费者。</p><h2 id="4-4渠道策略"><a href="#4-4渠道策略" class="headerlink" title="4.4渠道策略"></a>4.4渠道策略</h2><p>直接渠道：</p><p>&ensp;&ensp;&ensp;&ensp;我公司采用建立公司直属销售团队的方式来进行线下直接销售，通过招募具有行业专业知识和销售经验的人员来针对大型企业和关键客户进行直接拜访和销售，给他们提供专业的产品演示和解决方案定制服务。或者采用电话沟通、电子邮件等方式直接联系各大公司的采购负责人。直接的销售其直接优点在于可以降低产品中间流通费用，降低成本，其次直接的用本公司对科技产品进行销售，提升了产品信誉，降低了品牌及信誉风险。</p><p>间接销售渠道：</p><p>&ensp;&ensp;&ensp;&ensp;信息时代下，网络信息消费者群体极为庞大，通过充分利用互联网及交互式媒体拓宽销售途径，把本团队的产品放在各大网站上进行销售宣传，与此同时建立本公司官方销售网站，开发公司小程序。客户可通过公司官方网站下单，极大地降低了销售的时间成本，同时也为双方提供了便利。还可以采用经销商代理的方式来进行间接销售，选择有实力和信誉的经销商，覆盖更广泛的区域。</p><h2 id="4-5市场营销中意外情况的应急措施"><a href="#4-5市场营销中意外情况的应急措施" class="headerlink" title="4.5市场营销中意外情况的应急措施"></a>4.5市场营销中意外情况的应急措施</h2><p>表4-1 市场营销中意外情况的应急措施</p><div class="table-container"><table><thead><tr><th>意外情况</th><th>应急措施</th></tr></thead><tbody><tr><td>竞争<br>对手推出类似产品</td><td>1. 强调自身产品的独特优势和差异化特点，如更高的精度、更稳定的性能等，与竞争对手拉开差距。<br>2. 加快产品升级和创新步伐，推出新的功能和特性，保持领先地位，提高产品竞争力。<br>3. 加强市场推广力度，突出品牌形象和价值，提高客户对本公司产品的认可度。</td></tr><tr><td>突发的市场负面舆论</td><td>1. 迅速展开调查，了解负面舆论的源头和原因。<br>2. 通过官方渠道发布准确、客观的信息，澄清事实，消除误解。<br>3. 积极与客户和公众进行沟通，展示公司解决问题的诚意和决心。<br>4. 必要时可以邀请权威机构或专家进行出面发文支持，增加权威性。</td></tr><tr><td>宏观经济环境变化影响市场需求</td><td>1. 重新评估市场需求和产品定位，调整营销策略。<br>2. 拓展新的应用领域和客户群体，寻找新的市场机会。<br>3. 加强成本控制和资源优化，提高公司的运营效率和竞争力。</td></tr><tr><td>重要合作伙伴出现问题</td><td>1. 及时寻找替代合作伙伴，确保供应链和业务的连续性。<br>2. 与现有合作伙伴加强沟通和协调，共同解决问题，尽量减少影响。<br>3. 评估合作伙伴关系，建立更加稳定和可靠的合作网络。</td></tr><tr><td>技术故障导致产品部分功能失效</td><td>1. 立即启动应急预案，组织技术团队进行抢修和修复。<br>2. 及时通知客户，并向他们说明情况和预计的修复时间，表达歉意和承诺解决问题。<br>3. 在修复期间，提供替代解决方案或临时措施，尽量减少对客户业务的影响。</td></tr><tr><td>自然灾害或突发事件影响产品交付或服务</td><td>1. 第一时间通知客户，并说明情况和预计的影响时间。<br>2. 启动应急物流和服务保障机制，调配资源，尽力保障产品交付和服务的连续性。<br>3. 与客户协商解决方案，如调整交付时间、提供额外的服务等，以减少损失和影响。</td></tr></tbody></table></div><h2 id="5-6市场渗透与开拓计划"><a href="#5-6市场渗透与开拓计划" class="headerlink" title="5.6市场渗透与开拓计划"></a>5.6市场渗透与开拓计划</h2><h3 id="5-6-1市场渗透计划"><a href="#5-6-1市场渗透计划" class="headerlink" title="5.6.1市场渗透计划"></a>5.6.1市场渗透计划</h3><p>目标客户深耕：</p><p>&ensp;&ensp;&ensp;&ensp;针对现有的电力、通信等行业的重点客户，提供定制化的解决方案和优质服务，增加他们对产品的依赖度和满意度，提高客户粘性，促进重复购买和业务拓展。</p><p>产品升级与优化：</p><p>&ensp;&ensp;&ensp;&ensp;持续改进轮式电缆监测机器人的性能、功能和稳定性，根据客户反馈及时调整，确保在现有市场中保持领先优势。</p><p>加强客户培训与支持：</p><p>&ensp;&ensp;&ensp;&ensp;为客户提供全面的操作培训和技术支持，帮助他们更好地使用和发挥轮式电缆监测机器人的效能，从而提高客户粘性。</p><p>举办行业研讨会和技术交流活动：</p><p>&ensp;&ensp;&ensp;&ensp;邀请行业专家和客户参加，展示产品成果和技术优势，增强品牌影响力和专业形象，提高产品与品牌知名度。</p><h3 id="5-6-2市场开拓计划"><a href="#5-6-2市场开拓计划" class="headerlink" title="5.6.2市场开拓计划"></a>5.6.2市场开拓计划</h3><p>拓展新行业领域：</p><p>&ensp;&ensp;&ensp;&ensp;研究其他如石油化工、轨道交通等对电缆监测有需求的行业，针对性地开发适合其需求的功能和应用场景，扩展新行业领域，打开新的市场空间。</p><p>国际市场拓展：</p><p>&ensp;&ensp;&ensp;&ensp;进行市场调研，选择合适的国际市场区域，通过参加国际展会、与当地合作伙伴合作等方式，逐步进入国际市场，增加国际市场份额。</p><p>与科研机构合作：</p><p>&ensp;&ensp;&ensp;&ensp;与高校、科研院所等合作，共同开展前沿技术研究，提升产品的技术含量和创新能力，吸引更多客户。</p><p>发展系统集成商合作伙伴：</p><p>&ensp;&ensp;&ensp;&ensp;与系统集成商建立合作关系，借助他们的渠道和资源，将产品融入更大的系统解决方案中，共同开拓市场。</p><p>探索新的商业模式：</p><p>&ensp;&ensp;&ensp;&ensp;在不同的发展时期，根据其当时的发展情况对商业模式进行创新，提供不同的产品服务，如提供租赁服务、数据增值服务等，吸引更多不同需求的客户。</p><p>加强市场推广力度：</p><p>&ensp;&ensp;&ensp;&ensp;增加广告投放、网络营销等手段，提高产品的知名度和曝光度，吸引更多潜在客户的关注。</p><h1 id="第五章-经营管理"><a href="#第五章-经营管理" class="headerlink" title="第五章 经营管理"></a>第五章 经营管理</h1><h2 id="5-1公司名称及logo"><a href="#5-1公司名称及logo" class="headerlink" title="5.1公司名称及logo"></a><strong>5.1公司名称及logo</strong></h2><p>公司名称：智缆先锋</p><p><img src="/img/image24.png" alt="图5-1 公司logo与名称">{width=”50%”}</p><h2 id="5-2公司宗旨"><a href="#5-2公司宗旨" class="headerlink" title="5.2公司宗旨"></a><strong>5.2公司宗旨</strong></h2><p>&ensp;&ensp;&ensp;&ensp;致力于为电力电缆监测和隧道环境检测等领域提供智能化、高效化、可靠的解决方案，保障电力系统的安全稳定运行，推动行业技术进步，以创新科技守护电力网络。</p><h2 id="5-3公司目标"><a href="#5-3公司目标" class="headerlink" title="5.3公司目标"></a><strong>5.3公司目标</strong></h2><p><img src="/img/image25.png" alt="图5-2 公司目标"></p><h2 id="5-4公司文化"><a href="#5-4公司文化" class="headerlink" title="5.4公司文化"></a><strong>5.4公司文化</strong></h2><p><img src="/img/image26.png" alt="图5-3 公司文化"></p><h2 id="5-5经营理念"><a href="#5-5经营理念" class="headerlink" title="5.5经营理念"></a><strong>5.5经营理念</strong></h2><p>&ensp;&ensp;&ensp;&ensp;客户至上：始终将客户需求放在首位，提供优质的产品和服务，以满足客户期望，建立长期稳定的合作关系。</p><p>&ensp;&ensp;&ensp;&ensp;科技引领：依靠先进的技术研发实力，不断推出具有竞争力的产品，引领市场发展趋势。</p><p>&ensp;&ensp;&ensp;&ensp;质量为本：严格把控产品质量关卡，确保产品在各种复杂环境下稳定可靠运行，避免出现质量问题。</p><p><img src="/img/image27.png" alt="图5-4 公司经营理念"></p><h1 id="第六章-团队管理"><a href="#第六章-团队管理" class="headerlink" title="第六章 团队管理"></a>第六章 团队管理</h1><h2 id="6-1公司组织结构"><a href="#6-1公司组织结构" class="headerlink" title="6.1公司组织结构"></a><strong>6.1公司组织结构</strong></h2><p><img src="/img/image28.png" alt="图6-1 公司组织架构图"></p><p>1.高层管理团队：由公司的董事长、总经理、副总经理等组成，负责制定公司的战略规划、决策重大事项，并监督公司的整体运营。</p><p>2.总经理：由董事会选拔任命，对董事会负责。负责公司一年内重大事项的决策。</p><p>3.财务部：由总经理选拔任命，对总经理负责。负责公司会计，财务管理，企业融资方案制定。</p><p>4.研发部门：负责机器人的研发、设计和技术创新，包括机械结构、电子电路、控制系统、软件算法等方面的开发工作。</p><p>5.营销部：由总经理选拔任命，对总经理负责。负责公司营销策划的执行。依据公司整体运营战略，负责公司活动方案的提案、策划、执行和效果评估，跟踪和反馈方案的推广执行情况。负责公司企业文化的建设与推广。</p><p>6.生产部门：负责机器人的生产制造、组装和调试，确保产品质量和生产效率。</p><p>7.运维部门：负责机器人的安装、调试、维护和售后服务，确保机器人在客户现场的正常运行。</p><p>8.人力资源部门：负责公司的人力资源管理，包括招聘、培训、绩效考核和员工福利等方面的工作。</p><h2 id="6-3决策机制"><a href="#6-3决策机制" class="headerlink" title="6.3决策机制"></a><strong>6.3决策机制</strong></h2><p>高层管理团队：</p><p>&ensp;&ensp;&ensp;&ensp;由公司的高级管理人员组成，包括首席执行官、首席技术官、首席运营官等。他们负责制定公司的战略方向、重大决策和业务目标，并监督公司的整体运营。</p><p>技术研发团队：</p><p>&ensp;&ensp;&ensp;&ensp;由机器人工程师、软件工程师、硬件工程师等专业人员组成。他们负责机器人的设计、开发、测试和改进，确保机器人的性能和质量符合市场需求。</p><p>市场营销团队：</p><p>&ensp;&ensp;&ensp;&ensp;由市场分析师、销售代表、客户服务人员等组成。他们负责市场调研、产品推广、销售渠道管理和客户关系维护，以提高产品的市场占有率和客户满意度。</p><p>运营管理团队：</p><p>&ensp;&ensp;&ensp;&ensp;由生产管理人员、质量控制人员、供应链管理人员等组成。他们负责生产计划的制定、生产过程的监控、产品质量的保证和供应链的优化，以确保产品的按时交付和成本控制。</p><p>决策流程：</p><p>&ensp;&ensp;&ensp;&ensp;公司采用分层决策的方式，重大决策由高层管理团队共同讨论决定，日常决策由各部门负责人根据授权范围进行决策。在决策过程中，充分考虑各方面的因素，包括市场需求、技术可行性、财务状况等，以确保决策的科学性和合理性。</p><h2 id="6-4人力资源规划"><a href="#6-4人力资源规划" class="headerlink" title="6.4人力资源规划"></a>6.4人力资源规划</h2><p>人力资源需求预测：</p><p>&ensp;&ensp;&ensp;&ensp;根据公司的战略目标和业务发展计划，对未来的人力资源需求进行预测。考虑到机器人行业的快速发展和技术创新，预计未来几年公司将需要大量的技术研发人才、市场营销人才和运营管理人才。</p><p>人才招聘与选拔：</p><p>&ensp;&ensp;&ensp;&ensp;根据人力资源需求预测，制定相应的人才招聘计划。通过校园招聘、社会招聘、内部推荐等多种渠道，吸引优秀的人才加入公司。在招聘过程中，注重人才的专业技能、创新能力和团队合作精神。</p><p>培训与发展：</p><p>&ensp;&ensp;&ensp;&ensp;为了提高员工的专业素质和业务能力，公司将为员工提供丰富的培训和发展机会。包括新员工入职培训、岗位技能培训、职业发展规划指导等。同时，鼓励员工参加外部培训和学术交流活动，不断提升自己的综合素质。</p><p>绩效管理：</p><p>&ensp;&ensp;&ensp;&ensp;建立科学的绩效管理体系，对员工的工作表现进行评估和反馈。通过设定明确的工作目标、制定合理的考核指标、定期进行绩效评估等方式，激励员工积极工作，提高工作效率和质量。</p><p>薪酬福利：</p><p>&ensp;&ensp;&ensp;&ensp;制定具有竞争力的薪酬福利体系，吸引和留住优秀人才。根据员工的工作表现和贡献，给予相应的薪酬奖励和福利待遇。同时，关注员工的工作生活平衡，提供良好的工作环境和发展空间。</p><h1 id="第七章-融资与资金运营计划"><a href="#第七章-融资与资金运营计划" class="headerlink" title="第七章 融资与资金运营计划"></a>第七章 融资与资金运营计划</h1><h2 id="7-1投资估算"><a href="#7-1投资估算" class="headerlink" title="7.1投资估算"></a><strong>7.1投资估算</strong></h2><h3 id="7-1-1估算依据"><a href="#7-1-1估算依据" class="headerlink" title="7.1.1估算依据"></a><strong>7.1.1估算依据</strong></h3><p>1.《建设项目经济评价方法与参数》；</p><p>2.《山西省建筑工程概算定额》；</p><p>3.《山西省安装工程概算定额》；</p><p>4.《太原市工程造价信息》；</p><p>5.设备价格按厂方报价或询价估算；</p><p>6.委托方提供的有关资料；</p><p>7.现行投资估算的有关规定；</p><h3 id="7-1-2总投资"><a href="#7-1-2总投资" class="headerlink" title="7.1.2总投资"></a>7.1.2总投资</h3><p>该项目总投资450万元，实际投入385万元，65万元作为预留股份。详见表7-1</p><div class="table-container"><table><thead><tr><th>项目</th><th>使用比例</th><th>金额</th></tr></thead><tbody><tr><td>项目申请</td><td>1%</td><td>3.85</td></tr><tr><td>专利申请</td><td>1%</td><td>3.85</td></tr><tr><td>研发费用</td><td>29%</td><td>111.65</td></tr><tr><td>聘请人员</td><td>11%</td><td>42.35</td></tr><tr><td>固定资产</td><td>13%</td><td>51</td></tr><tr><td>材料成本</td><td>26%</td><td>100.16</td></tr><tr><td>公司运营</td><td>2%</td><td>7.2</td></tr><tr><td>宣传推广</td><td>3%</td><td>12</td></tr><tr><td>其他费用</td><td>7%</td><td>26.95</td></tr><tr><td>备用资金</td><td>7%</td><td>26.95</td></tr><tr><td>合计</td><td>100%</td><td>385万</td></tr></tbody></table></div><p> : 表7-1资金分配表</p><h3 id="7-1-3研发投资"><a href="#7-1-3研发投资" class="headerlink" title="7.1.3研发投资"></a><strong>7.1.3研发投资</strong></h3><p>&ensp;&ensp;&ensp;&ensp;该项目研发投资335.34万元，其中：项目申请3.85万元，专利申请3.85万元，研发费用111.65万元，聘请人员42.35万元，固定资产51万元，材料成本100.16万元。</p><h3 id="7-1-4流动资金估算"><a href="#7-1-4流动资金估算" class="headerlink" title="7.1.4流动资金估算"></a><strong>7.1.4流动资金估算</strong></h3><p>&ensp;&ensp;&ensp;&ensp;流动资金估算按分项详细估算法计算，应收账款按40天计算，燃料库存原按30天计算，原材料按30天计算，在产品按1天计算，产成品按10天计算，项目现金存量按30天计算，应付账款按45天计算。经估算，达到设计生产能力后，流动资金需用量为50.98万元。</p><h2 id="7-2资金筹措与股本结构"><a href="#7-2资金筹措与股本结构" class="headerlink" title="7.2资金筹措与股本结构"></a><strong>7.2资金筹措与股本结构</strong></h2><h3 id="7-2-1资金筹措"><a href="#7-2-1资金筹措" class="headerlink" title="7.2.1资金筹措"></a><strong>7.2.1资金筹措</strong></h3><p>综上预估分析，该项目共需融资450万元，资金来源如下表所示：</p><div class="table-container"><table><thead><tr><th>资金来源</th><th>风险投资</th><th>专利技术</th><th>团队自筹</th><th>银行贷款</th></tr></thead><tbody><tr><td>金额(万元)</td><td>135</td><td>81</td><td>198</td><td>36</td></tr><tr><td>占比(%)</td><td>30%</td><td>18%</td><td>44%</td><td>8%</td></tr></tbody></table></div><p>  : 表7-2资金来源表</p><h3 id="7-2-2股本结构"><a href="#7-2-2股本结构" class="headerlink" title="7.2.2股本结构"></a><strong>7.2.2股本结构</strong></h3><p>1.项目团队是整个项目开发的基础，占项目股份52%。</p><p>2.为确保电缆巡检系统顺利研发，不断精进，吸纳技术人员入股25%。</p><p>3.为了帮助企业扩大规模、增加生产能力、开发新产品，实现企业的战略目标，拟出让股权的10%.</p><p>4.同时预留股权池13%，用于后续吸纳资金，保障项目的顺利实施。</p><h1 id="第八章-财务分析"><a href="#第八章-财务分析" class="headerlink" title="第八章 财务分析"></a>第八章 财务分析</h1><h2 id="8-1销售预测"><a href="#8-1销售预测" class="headerlink" title="8.1销售预测"></a>8.1销售预测</h2><h3 id="8-1-1财务预测"><a href="#8-1-1财务预测" class="headerlink" title="8.1.1财务预测"></a>8.1.1财务预测</h3><p>&ensp;&ensp;&ensp;&ensp;企业设立在太原市，按照太原市税收政策可知企业所得税率为25%，公司属于一般纳税人，增值税税率按13％。根据公司现实基础、能力、潜力和合理的产业规划以及投资项目可行性，遵循我国现行法律法规和制度，采用与财政部颁布的企业会计制度和修订过的企业会计准则相一致的计算方法。公司在经营过程中会向银行借入资金，在这里只考虑0-5年期的贷款，各银行利率大致相同，1年以内含1年的贷款利率是4.35%，1-5年（含5年）的是4.75%。</p><p>&ensp;&ensp;&ensp;&ensp;税金及附加：营业税是根据收入计提税率5%，城建税根据营业税计提税率7%，教育附加税根据营业税计提税率3%，地方教育附加税根据营业税计提税率2%。</p><p>&ensp;&ensp;&ensp;&ensp;折旧和摊销：假定固定资产设备的折旧年限均为10年，厂房、办公楼折旧年限为25年，均采用直线折旧法，期末无残值；无形资产摊销年限也为10年，期末无残值。折旧和摊销费用按照资产使用用途分别计入生产成本和管理费用中。</p><p>&ensp;&ensp;&ensp;&ensp;分红制度：公司成立后，前三年不分红，净利润用于公司投资和经营，从第四年起按净利润的25%分红。公司每年按照净利润的20%提取盈余公积金。其中法定盈余公10%，任意盈余公积金10%。</p><h3 id="8-1-2未来三年销售预测"><a href="#8-1-2未来三年销售预测" class="headerlink" title="8.1.2未来三年销售预测"></a>8.1.2未来三年销售预测</h3><p>&ensp;&ensp;&ensp;&ensp;进行市场调查后对本公司未来三年的销售作以如下预测：第一年产品定价23999元，销售范围主要是山西省以及邻近省市的金属表面检测公司，由于刚进入市场，本团队预计前三年销量以1.8-2倍的速度增长。进入第三年后，由于市场趋于饱和，产品不断更新换代，且相关材料成本降低，公司将会调低产品售价至19999元，同时推销产品到更多的省、市，并逐步开发国外市场。三年的销售额预计分别为：240万、440万和718万。</p><p>+:———————-:+————————-+————————-+————————-+<br>|  <strong>项目</strong>       | <strong>2025年</strong>      | <strong>2026年</strong>      | <strong>2027年</strong>      |<br>+————————-+————————-+————————-+————————-+<br>| <strong>单价</strong>        | 23999           | 23999           | 19999           |<br>+————————-+————————-+————————-+————————-+<br>| <strong>销量</strong>        | 100             | 183             | 359             |<br>+————————-+————————-+————————-+————————-+<br>| <strong>销售收入</strong>    | 240             | 439.18          | 718             |<br>+————————-+————————-+————————-+————————-+</p><p>  : 销售预测表</p><h2 id="8-2成本预测"><a href="#8-2成本预测" class="headerlink" title="8.2成本预测"></a>8.2成本预测</h2><h3 id="8-2-1单位成本预测"><a href="#8-2-1单位成本预测" class="headerlink" title="8.2.1单位成本预测"></a>8.2.1单位成本预测</h3><hr><p>  商品名称                          单价           数量        总价</p><p>  MD36行星减速电机（霍尔编码器）    84             4           336</p><p>  MOS双路直流电机驱动               129            2           258</p><p>  麦克纳姆轮（四个一组）            448            1           448</p><p>  24V6100mA磷酸铁锂电池             383            1           383</p><p>  航模T线头16AWG                    10             1           10</p><p>  ADP-L610-Arduino_V3.0.2           299            1           299</p><p>  树莓派3B+                         309            1           309</p><p>  摄像头                            490            1           490</p><p>  热成像摄像头                      800            1           800</p><p>  框架定制                          500            1           500</p><p>  局放检测传感器                    5000           1           5000</p><p>  机械臂                            400            1           400</p><p>  主控板STM32G4                     430            1           430</p><p>  其余材料                          500            1           500</p><p>  树莓派LCD                         189            1           189</p><p>  合计                                                         10016</p><hr><p>  : 表8-2单位成本预测表</p><h3 id="8-2-2总成本预测"><a href="#8-2-2总成本预测" class="headerlink" title="8.2.2总成本预测"></a>8.2.2总成本预测</h3><hr><pre><code>                    **2025年**        **2026年**        **2027年**</code></pre><p>   <strong>直接材料成本</strong>       100.16            183.29            359.57</p><p>   <strong>直接人工成本</strong>        44.1              58.5              61.8</p><pre><code> **研发费用**           24               43.9              71.8 **管理费用**           7.2              13.18             21.54 **销售费用**           12               21.96             35.9 **其他费用**           7.5               8.5                9   **总计**           194.96            339.33            549.61</code></pre><hr><p>  : 总成本预测表</p><p>注：</p><p>&ensp;&ensp;&ensp;&ensp;1.其中材料费用包括产品所用的一切材料成本；工人工资包括普通员工和技术人员；研发费用包括研发费用包括新产品的研发、试制、试用等；管理费用包括管理部门工资及与管理部门相关的费用支出；销售费用包括广告宣传，用于销售的劳务费、运输费等其他费用包括水电费等。</p><p>&ensp;&ensp;&ensp;&ensp;2.管理费用按销售收入的3%预算，包括行政管理人员的工资、行政人员差旅费、办公费用、培训费、咨询费、会务费、车辆费等。研发费用每年按销售收入的10%预算，计入管理费用。</p><p>&ensp;&ensp;&ensp;&ensp;3.销售费用按销售收入的5%预算，包括销售人员的工资、建立销售网络的费用、广告费用、销售人员差旅费、通讯费等。</p><h2 id="8-3-财务报表"><a href="#8-3-财务报表" class="headerlink" title="8.3 财务报表"></a>8.3 财务报表</h2><h3 id="8-3-1-利润表"><a href="#8-3-1-利润表" class="headerlink" title="8.3.1 利润表"></a>8.3.1 利润表</h3><p>表8-4 利润表</p><div class="table-container"><table><thead><tr><th><strong>项目</strong></th><th><strong>2025年</strong></th><th><strong>2026年</strong></th><th><strong>2027年</strong></th></tr></thead><tbody><tr><td>一、营业收入</td><td>240.00</td><td>439.18</td><td>718.00</td></tr><tr><td>减：营业成本</td><td>100.16</td><td>183.29</td><td>359.57</td></tr><tr><td>主营业务税金及附加</td><td>12.00</td><td>21.96</td><td>17.98</td></tr><tr><td>管理费用</td><td>7.20</td><td>13.18</td><td>21.54</td></tr><tr><td>销售费用</td><td>12.00</td><td>21.96</td><td>35.90</td></tr><tr><td>财务费用</td><td>9.90</td><td>21.22</td><td>23.89</td></tr><tr><td>资产减值损失</td><td>12.00</td><td>12.00</td><td>12.00</td></tr><tr><td>加：公允价值变动收益</td><td>10.00</td><td>10.00</td><td>10.00</td></tr><tr><td>二、营业利润（亏损以“-”填列）</td><td>92.65</td><td>236.17</td><td>488.04</td></tr><tr><td>加：营业外收入</td><td>12.55</td><td>14.67</td><td>53.90</td></tr><tr><td>减：营业外支出</td><td>15.40</td><td>17.40</td><td>24.35</td></tr><tr><td>三、利润总额（亏损以“-”填列）</td><td>93.89</td><td>172.82</td><td>286.67</td></tr><tr><td>减：所得税费用</td><td>23.47</td><td>43.20</td><td>71.67</td></tr><tr><td>四、净利润（净亏损以“-”填列）</td><td>70.42</td><td>131.62</td><td>215.00</td></tr></tbody></table></div><h3 id="8-3-2-资产负债表"><a href="#8-3-2-资产负债表" class="headerlink" title="8.3.2 资产负债表"></a>8.3.2 资产负债表</h3><p>表8-5 资产负债表</p><p>+:———————————:+:——————:+:——————:+:——————:+<br>| <strong>年份</strong>               | <strong>2025年</strong>   | <strong>2026年</strong>   | <strong>2027年</strong>   |<br>|                        |              |              |              |<br>| <strong>项目</strong>               |              |              |              |<br>+————————————+———————+———————+———————+<br>| 一、资产               |              |              |              |<br>+————————————+———————+———————+———————+<br>| 流动资产               |              |              |              |<br>+————————————+———————+———————+———————+<br>| 货币资金               | 171.13       | 363.72       | 748.80       |<br>+————————————+———————+———————+———————+<br>| 应收账款               | 99.83        | 181.86       | 405.60       |<br>+————————————+———————+———————+———————+<br>| 坏账准备               | 14.26        | 60.62        | 187.20       |<br>+————————————+———————+———————+———————+<br>| 存货                   | 28.52        | 60.62        | 124.80       |<br>+————————————+———————+———————+———————+<br>| 流动资产合计           | 299.48       | 606.20       | 1279.20      |<br>+————————————+———————+———————+———————+<br>| 非流动资产             | 0.00         | 0.00         | 0.00         |<br>+————————————+———————+———————+———————+<br>| 固定资产               | 51.00        | 125.00       | 200.00       |<br>+————————————+———————+———————+———————+<br>| 无形资产               | 20.00        | 36.00        | 89.00        |<br>+————————————+———————+———————+———————+<br>| 非流动资产             | 71.00        | 161.00       | 289.00       |<br>+————————————+———————+———————+———————+<br>| 资产合计               | 370.48       | 767.20       | 1568.20      |<br>+————————————+———————+———————+———————+<br>| 二、负债               | 0.00         | 0.00         | 0.00         |<br>+————————————+———————+———————+———————+<br>| 流动负债               | 150.00       | 300.00       | 620.00       |<br>+————————————+———————+———————+———————+<br>| 非流动负债             | 50.00        | 105.00       | 220.00       |<br>+————————————+———————+———————+———————+<br>| 负债合计               | 200.00       | 405.00       | 840.00       |<br>+————————————+———————+———————+———————+<br>| 三、所有者权益         | 0.00         | 0.00         | 0.00         |<br>+————————————+———————+———————+———————+<br>| 实收资本               | 150.00       | 260.00       | 450.00       |<br>+————————————+———————+———————+———————+<br>| 盈余公积               | 16.84        | 35.02        | 74.64        |<br>+————————————+———————+———————+———————+<br>| 未分配利润             | 3.64         | 67.18        | 203.56       |<br>+————————————+———————+———————+———————+<br>| 所有者权益合计         | 170.48       | 362.20       | 728.20       |<br>+————————————+———————+———————+———————+<br>| 负债及所有者权益合计   | 370.48       | 767.20       | 1568.20      |<br>+————————————+———————+———————+———————+</p><h3 id="8-3-3-现金流量表"><a href="#8-3-3-现金流量表" class="headerlink" title="8.3.3 现金流量表"></a>8.3.3 现金流量表</h3><p>表8-6 现金流量表</p><hr><pre><code>               项目                   **2025年**    **2026年**     **2027年**     一、经营活动产生现金流量                                       收到其他与经营活动有关的现金         50.98         120.93         166.06           现金收入合计                 222.11        484.65         914.86    购买商品、接受劳务支付现金          77.71         185.77         349.42  支付给职工以及为职工支付的现金        59.60         76.00          105.40  支付的其他与经营活动有关的现金        12.05         40.14          80.96           现金支出合计                 149.36        301.91         535.78       经营活动产生现金净额             72.75         182.74         379.08      二、投资活动产生的现金                                          购进固定资产所支付的现金           50.00         60.00          80.00    投资活动产生的现金流量净额          -50.00        -60.00         -80.00    三、筹资活动产生的现金流量                                           吸收投资收到的现金              160.00        200.00         400.00         借款所收到的现金               60.00         220.00         500.00           现金收入小计                 220.00        420.00         900.00        偿还债务所支付现金              48.00         154.00         350.00</code></pre><p>   分配股利、利润或偿还利息所支付的现金      4.80         40.00          80.00</p><pre><code>           现金支出小计                 52.80         194.00         430.00       筹资活动产生现金净额             167.20        226.00         470.00</code></pre><hr><h2 id="8-4-财务指标分析"><a href="#8-4-财务指标分析" class="headerlink" title="8.4 财务指标分析"></a>8.4 财务指标分析</h2><p>&ensp;&ensp;&ensp;&ensp;通过财务指标分析，可以了解公司的盈利能力、偿债能力、运营效率、成长潜力等方面的情况，帮助投资者、管理者和其他利益相关者更好地了解公司的财务状况和经营表现，从而做出更明智的决策。常用的财务指标包括利润率、资产负债率、流动比率、速动比率等。通过对这些财务指标的分析，可以全面评估公司的财务状况，并发现潜在的风险和机遇。</p><h3 id="8-4-1-盈利能力分析"><a href="#8-4-1-盈利能力分析" class="headerlink" title="8.4.1 盈利能力分析"></a>8.4.1 盈利能力分析</h3><p>&ensp;&ensp;&ensp;&ensp;盈利能力是指企业在一定时期内实现的利润水平，是企业经营活动的核心指标之一。盈利能力可以通过多种财务指标来衡量，比如销售毛利率、销售净利率、成本利润率、资本保值增长率等。</p><p>表8-7 盈利能力分析表</p><p>+——————————-+———————-+————————+———————-+<br>| <strong>年份</strong>            | <strong>2025年</strong>    | <strong>2026年</strong>     | <strong>2027年</strong>    |<br>|                     |               |                |               |<br>| <strong>项目</strong>            |               |                |               |<br>+——————————-+———————-+————————+———————-+<br>| <strong>销售毛利率</strong>      | 18.77%        | 22.88%         | 23.45%        |<br>+——————————-+———————-+————————+———————-+<br>| <strong>销售净利率</strong>      | 29.34%        | 29.91%         | 29.94%        |<br>+——————————-+———————-+————————+———————-+<br>| <strong>成本利润率</strong>      | 23.10%        | 29.67%         | 30.64%        |<br>+——————————-+———————-+————————+———————-+<br>| <strong>资本保值增长率</strong>  | ————-     | 2.12           | 2.01          |<br>+——————————-+———————-+————————+———————-+</p><p>其中计算公式为：</p><p>销售毛利率 = (销售收入 -  销售成本) / 销售收入</p><p>销售净利率 = 净利润 / 销售收入</p><p>成本利润率 = 成本利润 / 总成本</p><p>资本保值增长率 = (期末资产总额 - 期初资产总额 - 投资额) / 期初资产总额</p><p>&ensp;&ensp;&ensp;&ensp;从上表中可以看出：企业未来三年的销售毛利率和销售净利率不断上升且趋于稳定，净资产利率逐年上升，说明企业所有者权益的增长快于净利润的增长，企业盈利能力上升。资产保值率维持在2左右，说明企业期末所有者权益大于期初所有者权益，同样说明企业盈利能力提高，利润增加。</p><p>结论：企业以上指标的不断上升均表明企业在未来三年内盈利能力是不断上升的。</p><p><img src="/img/img4.png" alt="盈利能力趋势图"></p><h3 id="8-4-2-偿债能力分析"><a href="#8-4-2-偿债能力分析" class="headerlink" title="8.4.2 偿债能力分析"></a>8.4.2 偿债能力分析</h3><p>&ensp;&ensp;&ensp;&ensp;偿债能力是指是指企业偿还到期债务（包括本息）的能力。偿债能力指标包括短期偿债能力指标和长期偿债能力指标。流动比率反映每单位流动负债有多少流动资产作为偿还保证。一般情况下流动比率越高，短期偿债能力就越强，表明企业有较多的营运资金来偿还短期债务，企业可变现的资产较大，债权人的风险越小。经验表明，流动比率维持在2比较合适。资产负债率是用以衡量企业利用债权人提供资金进行经营活动的能力,反映债权人发放贷款的安全程度的指标,可以衡量企业在清算时保护债权人利益的程度。</p><p>+——————————-+———————-+————————+———————-+<br>| <strong>年份</strong>            | <strong>2025年</strong>    | <strong>2026年</strong>     | <strong>2027年</strong>    |<br>|                     |               |                |               |<br>| <strong>项目</strong>            |               |                |               |<br>+——————————-+———————-+————————+———————-+<br>| <strong>流动比率</strong>        | 2.08          | 2.02           | 2.08          |<br>+——————————-+———————-+————————+———————-+<br>| <strong>速动比率</strong>        | 1.87          | 1.82           | 1.87          |<br>+——————————-+———————-+————————+———————-+<br>| <strong>资产负债率</strong>      | 0.51          | 0.52           | 0.53          |<br>+——————————-+———————-+————————+———————-+</p><p>: 表8-8偿债能力分析表</p><p>&ensp;&ensp;&ensp;&ensp;企业流动比率和速动比率都在2左右，并且比较稳定，资产负债率保持在50%左右，说明企业有较小的偿债压力，并且可以在一定程度上利用财务杠杆作用，有较强的偿债能力。其中：<br>短期偿债能力分析：流动比率计算公式： 流动资产 / 流动负债;速动比率计算公式：速动资产/流动负债（其中速动资产=流动资产-存货）。</p><p>长期偿债能力分析：</p><p>资产负债率，计算公式： 负债总额 / 资产总额</p><p><img src="/img/img5.png" alt="偿债能力走势图"></p><h3 id="8-4-3-发展能力分析"><a href="#8-4-3-发展能力分析" class="headerlink" title="8.4.3 发展能力分析"></a>8.4.3 发展能力分析</h3><p>表8-9发展能力分析表</p><p>+——————————-+———————-+————————+———————-+<br>| <strong>年份</strong>            | <strong>2025年</strong>    | <strong>2026年</strong>     | <strong>2027年</strong>    |<br>|                     |               |                |               |<br>| <strong>项目</strong>            |               |                |               |<br>+——————————-+———————-+————————+———————-+<br>| <strong>营业收入增长率</strong>  | ———        | 0.8333         | 0.6318        |<br>+——————————-+———————-+————————+———————-+<br>| <strong>营业利润增长率</strong>  | ———        | 0.8691         | 0.6335        |<br>+——————————-+———————-+————————+———————-+</p><p>&ensp;&ensp;&ensp;&ensp;由表可知，公司的营业收入增长率和营业利润增长率都大于0，表明本公司有着较好的发展能力。</p><p><img src="/img/img6.png" alt="发展走势图"></p><h3 id="8-4-4项目可行性分析"><a href="#8-4-4项目可行性分析" class="headerlink" title="8.4.4项目可行性分析"></a>8.4.4项目可行性分析</h3><p>假定企业预期收益率为10%。相关数据如下表所示：</p><p>表8-10未来现金流量折现表</p><div class="table-container"><table><thead><tr><th>年份</th><th>净现金流入</th><th>累计净现金流入</th><th>折现比率</th><th>现值</th></tr></thead><tbody><tr><td>原始投资</td><td>300万</td><td>—</td><td>—</td><td>—</td></tr><tr><td>2025年</td><td>189.95万</td><td>-110.05万</td><td>0.91</td><td>172.86万</td></tr><tr><td>2026年</td><td>348.74万</td><td>238.69万</td><td>0.83</td><td>289.46万</td></tr><tr><td>2027年</td><td>769.08万</td><td>1007.77万</td><td>0.75</td><td>576.81万</td></tr><tr><td><strong>合计</strong></td><td>—</td><td>—</td><td><strong>总计</strong></td><td>1039.12万</td></tr></tbody></table></div><p>1.投资回报期（PP）</p><p>&ensp;&ensp;&ensp;&ensp;静态投资回报期是指以投资项目经营净现值流量抵偿原始总投资所需要的全部时间，则投资回报期的计算公式如下（假定公司建设期需要0.5年，年回收额相等，年利率为10%）：回收期=累计净现值出现正值年数-1+(未收回现金/当年现值)=1+110.05/289.46 =1.38年。通过计算可知：该项目投资回报期为1.38年，在预估的时间内表明该项目可行。</p><p>2.投资净现值（NPV）</p><p>①净现值法按一定收益率,<br>算出将项目预期未来各年税后净现金流折现到项目投资时点的现值减去项目初始投资的代数和，既为该项目的净现值。净现值法考虑了资金时间价值，对于企业长期项目投资决策有重大意义。</p><p>②计算公式得 NPV = 1039.12-300 = 739.12万元</p><p>③判定标准：NPV≥0，项目可行，接受项目；NPV\&lt;0，项目不可行，拒绝项目。假定该项目要求的收益率为10%，计算未来三年则该项目NPV=739.12远大于0.说明该项目在未来三年内有盈利能力较强，该项目可行。</p><p>3.内含报酬率（IRR）</p><p>&ensp;&ensp;&ensp;&ensp;内含报酬率又称为内部报酬率，即指项目投资实际可望达到的收益率，亦可将其定义为能使项目的净现值等于零时的折现率（假定该项目预期收益率为10%）。计算式：<br><img src="/img/image36.png" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;通过现金流量表以及查表计算可得该项目内部收益率IRR=16%>10%表明：从投产期后的连续3年内市场增长性良好。以上三个指标分别从静态和动态两个方面分析了该投资项目，其结果均表明该项目具有经济可行性且有一定的发展潜力。</p><h1 id="第九章-风险分析"><a href="#第九章-风险分析" class="headerlink" title="第九章 风险分析"></a>第九章 风险分析</h1><h2 id="9-1风险因素及风险控制"><a href="#9-1风险因素及风险控制" class="headerlink" title="9.1风险因素及风险控制"></a>9.1风险因素及风险控制</h2><h3 id="9-1-1环境风险"><a href="#9-1-1环境风险" class="headerlink" title="9.1.1环境风险"></a>9.1.1环境风险</h3><p><strong>表9-1 环境风险分析表</strong></p><div class="table-container"><table><thead><tr><th><strong>风险因素</strong></th><th><strong>具体表现</strong></th><th><strong>风险控制</strong></th><th><strong>评估小结</strong></th></tr></thead><tbody><tr><td>环境风险：环境风险主要指企业遇到的来自其经营环境的法律、社会、政治和经济等各方面的风险。</td><td>1）政策法规变化带来的不确定性<br>2）生产经营中合规性与社会责任履行不足<br>3）利益相关者沟通不畅引发的负面舆论风险</td><td>1）政策法规：密切关注行业政策动向，加强沟通合作争取政策支持<br>2）社会责任：履行环保义务，参与公益活动提升形象<br>3）舆情应对：建立透明沟通机制与舆情监测体系</td><td>公司经营活动受政治环境影响显著，社会政治环境风险与环境风险均为<strong>较高</strong>等级</td></tr></tbody></table></div><h3 id="9-1-2市场风险"><a href="#9-1-2市场风险" class="headerlink" title="9.1.2市场风险"></a>9.1.2市场风险</h3><p><strong>表9-2 市场风险分析表</strong></p><div class="table-container"><table><thead><tr><th><strong>风险因素</strong></th><th><strong>具体表现</strong></th><th><strong>风险控制</strong></th><th><strong>评估小结</strong></th></tr></thead><tbody><tr><td>市场风险：企业面临的外部市场复杂性和变动性带来的经营风险。</td><td>1）新竞争者涌入可能导致市场份额和盈利能力下降<br>2）市场需求波动影响产品销量<br>3）原材料成本与供需关系导致价格波动冲击经营</td><td>1）强化研发与产业链建设，提升核心优势，优化产品服务增强竞争力<br>2）加强市场调研，动态调整产品结构与营销策略<br>3）建立价格监测机制，制定合理定价策略应对原料成本波动</td><td>若建立技术壁垒，原材料短期波动影响有限，市场风险整体<strong>较低</strong></td></tr></tbody></table></div><h3 id="9-1-3技术风险"><a href="#9-1-3技术风险" class="headerlink" title="9.1.3技术风险"></a>9.1.3技术风险</h3><p><strong>表9-3 技术风险分析表</strong></p><div class="table-container"><table><thead><tr><th><strong>风险因素</strong></th><th><strong>具体表现</strong></th><th><strong>风险控制</strong></th><th><strong>评估小结</strong></th></tr></thead><tbody><tr><td>技术风险：企业在技术创新、应用中因技术复杂性和不确定性导致的失败可能性。</td><td>1）人才流失风险：行业竞争导致核心人员不稳定，可能引发技术泄露<br>2）研发瓶颈：高难度、高投入、长周期技术可能延误产品迭代<br>3）应用成本：电缆维护中操作与维护困难导致额外成本增加</td><td>1）人才保留：提供职业发展通道、沟通机制及竞争性薪酬<br>2）研发优化：加大技术投入，组织核心人员深造，优化应用流程降低成本</td><td>技术风险对生产经营影响较大，但因偶发性特征，整体风险等级<strong>中等</strong></td></tr></tbody></table></div><h3 id="9-1-4财务风险"><a href="#9-1-4财务风险" class="headerlink" title="9.1.4财务风险"></a>9.1.4财务风险</h3><p><strong>表9-4 财务风险分析表</strong></p><div class="table-container"><table><thead><tr><th><strong>风险因素</strong></th><th><strong>具体表现</strong></th><th><strong>风险控制</strong></th><th><strong>评估小结</strong></th></tr></thead><tbody><tr><td>财务风险：企业财务活动中因不确定性因素导致财务状况波动的风险。</td><td>1）初期筹资结构不合理或资金供需失衡，导致资金周转困难（高新技术产品长周期特性加剧此风险）<br>2）财务人员经验不足可能引发决策失误</td><td>1）建立全流程财务风险管理体系，包含风险评估、监测及预警机制<br>2）动态优化经营模式，挖掘新盈利增长点以增强财务稳定性<br>3）实施流动资金动态管理，确保现金储备充足以应对突发需求</td><td>依托大学生创业政策支持，融资环境较稳定，但高新技术行业特性仍存不确定性，财务风险等级判定为<strong>中等</strong></td></tr></tbody></table></div><h3 id="9-1-5经营管理风险"><a href="#9-1-5经营管理风险" class="headerlink" title="9.1.5经营管理风险"></a>9.1.5经营管理风险</h3><p><strong>表9-5 经营管理风险分析表</strong></p><div class="table-container"><table><thead><tr><th><strong>风险因素</strong></th><th><strong>具体表现</strong></th><th><strong>风险控制</strong></th><th><strong>评估小结</strong></th></tr></thead><tbody><tr><td>经营管理风险：企业日常运营中因管理决策失误或战略执行不力导致的风险。</td><td>1）初创团队（大学生）缺乏管理与商业实战经验，可能导致资源低效利用<br>2）战略方向模糊或执行偏差，影响长期发展</td><td>1）定期组织管理层专业培训，强化团队协作与决策能力<br>2）制定明确战略规划与执行路径，建立目标分解与监控机制</td><td>战略规划与执行的容错率低，叠加初创团队经验不足，经营管理风险等级为<strong>高</strong></td></tr></tbody></table></div><h2 id="9-2风险撤出策略"><a href="#9-2风险撤出策略" class="headerlink" title="9.2风险撤出策略"></a>9.2风险撤出策略</h2><p>&ensp;&ensp;&ensp;&ensp;风险撤出策略是企业在面临风险时，为确保资本安全并最大化收益而采取的一系列行动方案。分为以下六种情况：</p><h3 id="9-2-1-IPO退出"><a href="#9-2-1-IPO退出" class="headerlink" title="9.2.1 IPO退出"></a>9.2.1 IPO退出</h3><p>&ensp;&ensp;&ensp;&ensp;IPO（首次公开募股）是一种常见的风险投资退出策略，通过公司上市，风险投资机构将其持有的股份转换为可流通的股票，从而实现退出。这种方式通常能为投资者带来丰厚的回报，但IPO过程复杂且成本高昂，需要投资者提前规划和准备。</p><h3 id="9-2-2-并购退出"><a href="#9-2-2-并购退出" class="headerlink" title="9.2.2 并购退出"></a>9.2.2 并购退出</h3><p>&ensp;&ensp;&ensp;&ensp;并购退出是另一种常见的风险投资退出方式，通过风险投资者将股权卖出给其他企业，实现资本退出。这种方式风险投资者可以直接获得现金或可流通证券，且并购交易通常不像IPO那样复杂，成本也相对较低。</p><h3 id="9-2-3-回购退出"><a href="#9-2-3-回购退出" class="headerlink" title="9.2.3 回购退出"></a>9.2.3 回购退出</h3><p>&ensp;&ensp;&ensp;&ensp;回购退出是投资者将股权重新卖给风险企业，从而实现退出的方式。这种方式适用于企业现金流稳定、发展前景良好的情况。</p><h3 id="9-2-4-清算退出"><a href="#9-2-4-清算退出" class="headerlink" title="9.2.4 清算退出"></a>9.2.4 清算退出</h3><p>&ensp;&ensp;&ensp;&ensp;当企业经营状况恶劣，其他退出方式均无效时，清算退出成为最后的选择。这种方式通过对企业财产进行定价分割，收回一部分的资金资本。</p><h3 id="9-2-5-确定合适的退出时机"><a href="#9-2-5-确定合适的退出时机" class="headerlink" title="9.2.5 确定合适的退出时机"></a>9.2.5 确定合适的退出时机</h3><p>&ensp;&ensp;&ensp;&ensp;退出时机的选择对投资者的回报至关重要。一般而言，领先的风险投资公司会在公司增长阶段的收入和价值达到高峰时退出投资。投资者需要密切关注创业公司的市场表现、收入增长趋势和竞争态势等因素，并根据这些指标来判断最佳的退出时机。</p><h1 id="第十章-附录："><a href="#第十章-附录：" class="headerlink" title="第十章 附录："></a>第十章 附录：</h1><p><img src="/img/image37.png" alt="专利"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共享关爱—探索“共享儿女”养老模式的创新之路</title>
      <link href="/2024/10/29/love/"/>
      <url>/2024/10/29/love/</url>
      
        <content type="html"><![CDATA[<h1 id="共享关爱—探索“共享儿女”养老模式的创新之路"><a href="#共享关爱—探索“共享儿女”养老模式的创新之路" class="headerlink" title="共享关爱—探索“共享儿女”养老模式的创新之路"></a>共享关爱—探索“共享儿女”养老模式的创新之路</h1><p>2024-10-29 10:50      来源：中国网政务   &ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;链接到：<a href="http://zw.china.com.cn/2024-10/29/content_117513323.shtml">中国网</a></p><p>&ensp;&ensp;&ensp;&ensp;在当今社会，随着老龄化趋势的加剧和家庭结构的变迁，老年人照护的创新模式日益成为社会关注的焦点。中北大学养老模式创新调研团精心策划并启动了“共享儿女”社会实践活动。这次活动如同一段温馨的寻根旅程，带领青年学子们走进山西省太原市尖草坪区朝阳社区，探寻亲情与陪伴的真谛，将亲人的温暖重新洒落在空巢老人的心间。</p><p>&ensp;&ensp;&ensp;&ensp;位于太原市尖草坪区南寨街道的朝阳社区，创新性地提出了一种“共享儿女”的社区养老模式，如同一束璀璨的光芒，闪耀着爱心与创造的光辉。该模式特别关注“空巢老人”，并作为老龄化社区的响应，提出了“共享儿女”的概念。项目由郝国英于2021年发起，吸引了社区成员、党员、居民以及大学生志愿者的积极参与。志愿者们提供生活照料、精神慰藉和健康保健等服务，以帮助解决老人的实际困难。“共享儿女”养老模式不仅为解决空巢老人的养老问题开辟了崭新的思路，还为社区治理和居民互助树立了全新的标杆。这一模式无疑值得在更多社区推广，以助力更多空巢老人享受更温暖、贴心的幸福晚年生活。</p><p>&ensp;&ensp;&ensp;&ensp;在实践过程中，有一位张大爷引起了社区成员的特别关注。他的子女们都身处他乡，只有过年时才会回家团聚。尽管伴侣已去世多年，张大爷并没有因此感到颓废，每天坚持早晨锻炼，活动筋骨，午餐时去社区食堂就餐，下午则参与社区的日常活动。当他见到几位来自中北大学的志愿者时，内心充满了激动，自豪地提到自己的一位孩子也是中北大学的毕业生。张大爷在交流过程中还分享了自己年轻时的辉煌经历，大家能深切感受到张大爷的骄傲与自豪。</p><p><img src="http://images.china.cn/site1000/2024-10/29/117513323_1b078d14-b21f-4cb2-bd3b-2169130579cc.jpg" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;在这次的活动中，“共享儿女”调研团还对郝国英书记进行了采访，并陪同老人前往医院进行体检和复查。在医院里，志愿者为老人排队挂号、取药，陪伴检查。在10月19日，“共享儿女”养老模式创新调研团在中北大学“2024实践归来话收获”活动进行答辩宣讲，介绍此次的实践活动以及分享体会，呼吁更多的青年关注老人的身心健康，多陪伴在家中的老人身边。除此之外志愿者们还帮助老人打理家务、清扫卫生、教授老人使用智能手机等技能，整个实践可谓收获颇丰。</p><p><img src="http://images.china.cn/site1000/2024-10/29/117513323_b4da42c1-492a-4cd9-befd-737616e562a7.jpg" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;此次实践活动得到了朝阳社区的高度评价。社区负责人表示，中北大学创新调研团队的加入为“共享儿女”项目注入了新的活力，为社区的空巢老人带来了切实的帮助。志愿者苏煜凯表示：“通过这次调研与实践探索，我们不仅追寻了一种创新的养老理念，更续写了一段代际相承的温情故事。希望我们在这个快节奏的社会中能够给老年人提供更多的关爱和支持，能够更多地去陪伴他们”</p><p><img src="http://images.china.cn/site1000/2024-10/29/117513323_3436da91-d0ee-478d-9cb3-d084dba4c466.jpg" alt=""></p><p>&ensp;&ensp;&ensp;&ensp;“共享儿女”暑期养老模式创新调研团的活动不仅是一次暑期实践，更是对未来养老服务模式的探索与实验。他们的努力与成果不仅影响了参与者，也将深远地影响社会的养老服务体系。愿这场创新之旅，为未来的养老服务开辟更广阔的前景！  （中北大学　苏煜凯）</p>]]></content>
      
      
      <categories>
          
          <category> 媒体报道 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 媒体报道 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>daily</title>
      <link href="/2024/10/01/daily/"/>
      <url>/2024/10/01/daily/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0fbe5199e5e0e22d516e7fafe3dfcbc982b051e32efcd0e70068fd6cba9b7d68"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>光伏先锋——基于超声波振动的轻量化光伏板清洁装置</title>
      <link href="/2024/06/01/SUN/"/>
      <url>/2024/06/01/SUN/</url>
      
        <content type="html"><![CDATA[<p><strong>摘要</strong>：太阳能是21世纪的新型能源，全国每年太阳辐射总量达到$8.4 \times 10^{3}MJ/m^{2}$，相当于$2.4 \times 10^{4}$亿吨标准煤的储能，我国西北部太阳能资源丰富，是太阳辐射最强的地区，有着得天独厚的太阳能资源优势。在当今世界能源紧缺、生态环境恶化的情况下，开发利用包括太阳能在内的新能源成为世界各国关注的热点。目前主要应用于太阳能光伏发电方面，西部地区光伏组件长时间暴露在自然环境中，其灰尘及污垢对发电效率有着很大的影响，但是现有的除尘方法具有一定的限制，通过对比现有的方法，经过探索分析，提出一种新型可自动监测清洁度及无水清洁太阳能板的方法，并实现了光伏板的追光功能。</p><p><strong>关键词</strong>：<strong>光伏发电；节能；自动；监测系统；无水除尘</strong></p><h1 id="1-研制背景及意义"><a href="#1-研制背景及意义" class="headerlink" title="1 研制背景及意义"></a><strong>1 研制背景及意义</strong></h1><p>&ensp;&ensp;&ensp;&ensp;21世纪是世界能源结构发生巨大变革的世纪。由于传统能源(如煤、石油、天然气等)的供给已出现严重短缺局面，人类开始将目光转向可再生能源的发展。大规模地开发利用可再生洁净能源，以资源无限、清洁干净的可再生能源为主的多样性的能源结构代替以资源有限、污染严重的石化能源为主的能源结构已成为人们关注的焦点。</p><p>&ensp;&ensp;&ensp;&ensp;太阳能作为一种新型的绿色可再生能源，与其他新能源相比利用最大，是最理想的可再生能源。在中国荒漠地区土地广阔，太阳能资源非常丰富（如下图1.1所示），开发利用潜力巨大特别是近几十年来，随着科学技术的不断进步，太阳能及其相关产业成为世界发展最快的行业之一。太阳能的开发利用主要有光热利用、光伏利用、光化学利用等三种形式。由于维护简单、使用方便，以太阳能电池技术为核心的太阳能光伏利用成为太阳能开发利用中最重要的应用领域。</p><p><img src="/img/SUN/image1.png" alt="图1.1 我国太阳能资源分布"></p><p><img src="/img/SUN/image2.png" alt="图1.2 近五年来我国光伏发电产业变化趋势"></p><p>&ensp;&ensp;&ensp;&ensp;随着光伏并网发电运行，光伏电站的后期的持续高效运行的维护问题日显突出。由于部分地区风沙大、降水少或干旱气候，这给光伏产业带来较为严峻的新问题。为此，国务院也出台了相关政策，促进光伏发电产业健康发展。光伏电站的后期维护和提高光伏发电效率的问题逐渐成为人们关注当日焦点。</p><p><img src="/img/SUN/image3.png" alt="图1.3 国务院印发光伏发电健康建设开发有关事项通知"></p><p>&ensp;&ensp;&ensp;&ensp;光伏电站建设完成后，经过测定其实际年发电量远低于理论年发电量,除了由于单晶硅、多晶硅原材料本身影响太阳能转换效率的原因之外,还有一个重要的因素就是光伏组件长时间暴露在空气中,灰尘降落到光伏组件表面,并且长时间不清理，光伏组件的输出功率下降最高将达到20%以上，尤其是在西北地区，光伏电站大多建在戈壁滩上，自然环境恶劣，有雨水浸湿时会形成积垢。以一个10MW的光伏电站为例,损失率按10%计算，伏电站运营25年的总损失约为:1.3度/年/瓦×10兆瓦(电站规模) ×25年 (工作年限) ×0.8元/度 (上网电价) ×10% (损失的效率) =26,<br>000, 000元, 约为2,600万元,可见损失极为巨大，若能及时的对灰尘进性清洁，提高光伏发电效率，经济效益会有很大提升。通过查阅资料和实地调研发现, 现有的光伏电站除尘方式均有一定的局限性,并不适用于西北部地区的光伏组件的清洁。为此我们对灰尘和积垢的消除做了一些研究，设计了新型光伏板清洁器。</p><h1 id="2-设计方案"><a href="#2-设计方案" class="headerlink" title="2 设计方案"></a><strong>2 设计方案</strong></h1><h2 id="2-1总体机械结构设计"><a href="#2-1总体机械结构设计" class="headerlink" title="2.1总体机械结构设计"></a><strong>2.1总体机械结构设计</strong></h2><p>&ensp;&ensp;&ensp;&ensp;清洁度检测仪及风机沿着导轨移动，超声波振动清洁器固定在光伏板的一边，如图所示：</p><blockquote><p><img src="/img/SUN/image4.png" alt="图2.1 总体机械结构设计"></p></blockquote><h2 id="2-2控制模块"><a href="#2-2控制模块" class="headerlink" title="2.2控制模块"></a><strong>2.2控制模块</strong></h2><p>&ensp;&ensp;&ensp;&ensp;采用c51单片机作为核心处理器，5v电源供电，通过定时器定时无线控制驱动模块，沿着导轨进行清洁度扫描，之后返回信号，根据信号判断是否触发清洁模块，并通过无线串口通信完成信息交互。</p><p><strong>① c51单片机：</strong></p><p>&ensp;&ensp;&ensp;&ensp;32条I/O口线，2个可编程定时/计数器，5个中断源，2个<a href="https://baike.baidu.com/item/%E4%BC%98%E5%85%88%E7%BA%A7">优先级</a>一个<a href="https://baike.baidu.com/item/%E5%85%A8%E5%8F%8C%E5%B7%A5">全双工</a><a href="https://baike.baidu.com/item/%E4%B8%B2%E8%A1%8C%E9%80%9A%E4%BF%A1">串行通信</a>口，外部数据<a href="https://baike.baidu.com/item/%E5%AD%98%E5%82%A8%E5%99%A8">存储器</a><a href="https://baike.baidu.com/item/%E5%AF%BB%E5%9D%80%E7%A9%BA%E9%97%B4">寻址空间</a>为64kB，外部<a href="https://baike.baidu.com/item/%E7%A8%8B%E5%BA%8F%E5%AD%98%E5%82%A8%E5%99%A8">程序存储器</a>寻址空间为64kB，逻辑操作<a href="https://baike.baidu.com/item/%E4%BD%8D%E5%AF%BB%E5%9D%80">位寻址</a>功能·双列直插40PinDIP封装单一，+5V电源供电。能够满足数据采集、智能管理、PWM信号输出等工作，为系统的功能实现提供了基础和保障。原理如下图：</p><p><img src="/img/SUN/image5.png" alt="图2.2 单片机引脚图"><br><img src="/img/SUN/image6.png" alt="图2.3 计数器原理图"></p><p><strong>② 定时设计：</strong></p><p>&ensp;&ensp;&ensp;&ensp;单片机外加12MHZ晶振，计数器由高8位和低8位两个寄存器THx和TLx组成，原理图如上图，TMOD是定时/计数器的工作方式寄存器，确定工作方式和功能；TCON是控制寄存器，控制T0、T1的启动和停止及设置溢出标志。根据设计需要：在每天傍晚八点开始工作。采用定时器0，工作方式0，采用定时功能。时间间隔为24小时，即24*3600=86400s。设单位定时为1ms，则计数个数:N=1ms/1μm=1000并计算初值：初值B=2~16-计数个数=64536用16进制表示为FC18。当T0计数器计满后溢出中断，CPU发送驱动模块启动信号。</p><h2 id="2-3-驱动模块"><a href="#2-3-驱动模块" class="headerlink" title="2.3 驱动模块"></a><strong>2.3 驱动模块</strong></h2><h3 id="2-3-1步进电机"><a href="#2-3-1步进电机" class="headerlink" title="2.3.1步进电机"></a><strong>2.3.1步进电机</strong></h3><p>&ensp;&ensp;&ensp;&ensp;采用步进电机外接光伏板蓄电池电源，依然采用89c51单片机用于控制导轨上的步进电机转动，通过定时器和继电器来定时驱动。边缘配备有红外检测装置，可以清洁模块的位置，防止模块触碰到边缘和跌落太阳能光伏电板的的情况发生。</p><h3 id="2-3-2清洁度检测装置"><a href="#2-3-2清洁度检测装置" class="headerlink" title="2.3.2清洁度检测装置"></a><strong>2.3.2清洁度检测装置</strong></h3><p>&ensp;&ensp;&ensp;&ensp;检测原理为：光源以一定角度照射到光伏板表面上，一部分光被反射，一部分光被光伏板表面灰尘等散射和吸收．则有<img src="/img/SUN/image7.png" alt=""><script type="math/tex">I_{o}</script>为入射光强，<script type="math/tex">I_{r}</script>为反射光强，<script type="math/tex">I_{a}</script>为吸收光强，<script type="math/tex">I_{s}</script>为散射光强。则。可知当表面积灰过多，会导致反射光强减弱。即清洁度与反射光强成正相关。如图1：101为驱动电路模块、<br>102为LED、103为滤光片、104为光电探测器。</p><p><img src="/img/SUN/image12.png" alt="图2.4 清洁度检测装置"></p><p>&ensp;&ensp;&ensp;&ensp;光源以一定角度照射到光伏板表面，在表面发生散射、吸收和反射，滤光片可以滤除环境中的杂光，采用光敏原件实时检测反射的光信号，对信号过滤放大处理，通过c51单片机接收处理数据，根据光伏板表面污浊程度对光伏板的发电量影程度找到一个反射光强的阈值，确定为触发清洁模块的信号。</p><p><img src="/img/SUN/image13.png" alt="图2.5 电路示意图"><br><img src="/img/SUN/image14.png" alt="图2.6 语言主程序"></p><p>&ensp;&ensp;&ensp;&ensp;AD信号转换：本设计采用芯片XPT2046作为核心控制，将光敏电阻原件接入AIN2管脚，上下两端分别接VCC和GND，通过管道VBAT进行数据处理。通过光敏电阻的阻值反映led反射光的强弱，从而判断光伏板表面的清洁度，通过实验测出表面污浊程度和光伏板发电量的关系得出一个光敏电阻的阈值确定为AD信号转换后的比较值。</p><p><img src="/img/SUN/image15.png" alt="图2.7 XPT2046"><br><img src="/img/SUN/image16.png" alt="图2.8 光敏电阻原件"></p><h2 id="2-4-清洁模块"><a href="#2-4-清洁模块" class="headerlink" title="2.4 清洁模块"></a><strong>2.4 清洁模块</strong></h2><h3 id="2-4-1板面灰尘分析"><a href="#2-4-1板面灰尘分析" class="headerlink" title="2.4.1板面灰尘分析"></a><strong>2.4.1板面灰尘分析</strong></h3><p><img src="/img/SUN/image17.png" alt="图2.9 灰层受力分析图"></p><p>&ensp;&ensp;&ensp;&ensp;O为灰尘颗粒球心；X为平行于电池板表面且过球心的坐标，Y垂直于电池板表面且过球心的坐标；R为灰尘颗粒的半径；G为灰尘颗粒的重力<script type="math/tex">G_{x}</script>和<script type="math/tex">G_{y}</script>分别为重力在x和y方向的分量，T为灰尘颗粒间相互作用力;<script type="math/tex">T_{x}</script>和<script type="math/tex">T_{x}</script>分别为T在x和y方向的分量，<script type="math/tex">F_{E}</script>为总静电力，<script type="math/tex">F_{vdW}</script>为范德华力。</p><p><img src="/img/SUN/image33.png" alt="a.半径小于![](/img/SUN/image35.png)时灰尘的受力图"><br><img src="/img/SUN/image34.png" alt="b.半径取值![](/img/SUN/image36.png)时的灰尘受力分析图"></p><p>&ensp;&ensp;&ensp;&ensp;由上图可知，灰尘净重力随灰尘颗粒半径的增大而迅速增大，增速明显快于随灰尘颗粒半径线性变化的范德华力。由 a 局部图，可知起初范德华力大于净重力分量，范德华力是主要粘附力；由 b 局部图，可知灰尘颗粒半径在约 $10×10^{-6} - 20×10^{-6}\,\text{m}$ 时，范德华力和净重力分量对合力的影响都比较大；由整体图 $[5]$，可知随着半径的增大（大于约 $20×10^{-6}\,\text{m}$ ），净重力分量大于范德华力，净重力分量逐渐起主导作用。由上图分析可知当灰尘颗粒半径较小时，$R$ 小于约 $10×10^{-6}\,\text{m}$ 时，合力 $F$ 数量级由范德华力数量级决定，所取的数量级约为 $10^{-10}\,\text{N}$ ；灰尘颗粒半径 $R$ 在 $10×10^{-6} - 20×10^{-6}\,\text{m}$ 之间时，$F$ 数量级由范德华力和重力同时决定，取值范围约为 $10^{-10} - 10^{-9}\,\text{N}$ ；灰尘颗粒半径较大时，$R$ 大于约 $20×10^{-6}\,\text{m}$ 时，合力 $F$ 数量级由净重力的分量的数量级决定，取值范围约为 $10^{-9} - 10^{-8}\,\text{N}$ 。因此可知，在所有灰尘颗粒半径取值范围内，合力 $F$ 的取值范围一般在 $10^{-10} - 10^{-8}\,\text{N}$ 之间。</p><p><img src="/img/SUN/image44.png" alt="图2.11 光伏电站电池板表面灰尘粒径级配曲线"></p><p>&ensp;&ensp;&ensp;&ensp;由上图可知，光伏电站电池板表面灰尘粒径约为30μm。则可求得气流对灰尘作用力约为<script type="math/tex">F_{风}</script> = pA = 2.5×10⁷Pa，大于灰尘所受的粘附力，可以有效除尘。</p><h3 id="2-4-2超声波清洁装置"><a href="#2-4-2超声波清洁装置" class="headerlink" title="2.4.2超声波清洁装置"></a><strong>2.4.2超声波清洁装置</strong></h3><p>（1）原理：</p><p>&ensp;&ensp;&ensp;&ensp;当超声波在固体介质中传播时，介质质点就在平衡位置附近振动。经过理论分析和实际研究表明，介质质点振动的加速度与振幅成正比^[3]^。即超声波在固体介质中传播时，可以使质点出现极大的加速度和作用力，所以当固定频率超声波通过太阳能板时，引起太阳能板共振，使太阳能板上的玻璃介质产生极大的瞬时加速度，利用污垢和灰尘的惯性，将其抖落。</p><p>（2）超声波振动清洗的方法：</p><p>&ensp;&ensp;&ensp;&ensp;结构示意图如图一所示，在柜体中，直流电源与太阳能板接通，由逆变器转化为交流电后与超声波发生器相连，超声波发生器将电能转化为超声波信号^[4]^，通过传输电缆传送到超声波换能振动器，换能振动器将这一声波经变幅杆与振动头传送到太阳能板表面的玻璃板上，引起玻璃板共振，使被振松了的污染物及时脱离工件，达到清洗的目的。</p><p><img src="/img/SUN/image47.png" alt="图2.12 超声波振动清洁器"></p><h3 id="2-4-3风机"><a href="#2-4-3风机" class="headerlink" title="2.4.3风机"></a><strong>2.4.3风机</strong></h3><p><img src="/img/SUN/image48.png" alt="图2.13 风机"></p><p>&ensp;&ensp;&ensp;&ensp;风机风量216m3/h；功率85W；风压280Pa；电压220V/380V；频率50Hz；重量2.6kg；尺寸175×110×220mm。对比选择：离心式风机的空气流量为数公斤至数十公斤每秒。亚音速离心式压气机的增压比约为4.5,超音速离心式压气机可达8～10，效率约为0.78。轴流式风机的空气流量为几公斤每秒到二百公斤每秒，单级增压比一般约为1.1～2.0，效率约为0.85～0.88。离心式压气机虽然效率略低，但增压比更大，且成本低，重量轻，所以此处我们选择离心式风机。</p><h3 id="2-4-4通信模块"><a href="#2-4-4通信模块" class="headerlink" title="2.4.4通信模块"></a><strong>2.4.4通信模块</strong></h3><p>&ensp;&ensp;&ensp;&ensp;通信模块采用LTC2856IMS8芯片，该芯片采用+5V电源工作，其额定电流为900μＡ，它能将UART输出电平转换为RS485电平.该芯片有8个引脚，其内部含有1个接收器和1个驱动器。RO为接收器的输出端，接单片机的RX引脚；DI为驱动器的输入端，接单片机的TX引脚。RE是接收使能端，当RE=0时，LTC2856IMS8芯片处于接收状态；DE是发送使能端，当DE=1时。LTC2856IMS8芯片处于发送状态，RE和DE接单片机的RE引脚。</p><p><img src="/img/SUN/image49.png" alt="图2.14 LTC2856IMS8引脚图"></p><h3 id="2-4-5电源模块"><a href="#2-4-5电源模块" class="headerlink" title="2.4.5电源模块"></a><strong>2.4.5电源模块</strong></h3><p>&ensp;&ensp;&ensp;&ensp;本设计选取蓄电池作为整个系统的储能模块，太阳能光伏发电板作为蓄电池的能量来源，为整套装置供电。设备使用导轨供电，两导轨分别为电源两级，节省了电缆的铺设费用，也避免了携带电源导致的设备自重过大。</p><h2 id="2-5追光模块"><a href="#2-5追光模块" class="headerlink" title="2.5追光模块"></a><strong>2.5追光模块</strong></h2><p>&ensp;&ensp;&ensp;&ensp;本设计带光伏的双轴太阳能跟踪器，以便在白天跟随太阳。光伏发电为太阳能跟踪器供电（无需外部电源）。该模块包括：主控电路，显示接口电路，电源电路，LED显示电路，电压采集电路，舵机接口电路，独立按键电路，光敏模块采集电路。主控芯片采用STC15F2K60S2，XI、XO为外部晶振输入输出接口。装置采用了一个12M的无源晶振，为主控芯片提供时钟。该芯片内部自带时钟，所以不接外部晶振也行。但是内部的不如外部的稳定，所以我采用了外接时钟的方式。复位电路：复位端口需要采集到24个时钟周期以上的高电平脉冲，才会进行复位。所以我采用了一按键的形式，实现手动复位。</p><p>&ensp;&ensp;&ensp;&ensp;信号采集电路，利用电位器对电池板输入的电压进行分压，以免流入单片机引脚电压过大，损坏单片机。单片机通过带有AD转换功能的引脚采集电池板输入的电压值。光敏电阻模块，直接输出一个数字量的信号送入单片机，单片机通过RIN1~4`引脚进行采集。</p><p><img src="/img/SUN/image50.png" alt="图2.15 主控电路图"><br><img src="/img/SUN/image51.png" alt="图2.16 信号采集图"></p><h1 id="3-工作原理及性能分析"><a href="#3-工作原理及性能分析" class="headerlink" title="3 工作原理及性能分析"></a><strong>3 工作原理及性能分析</strong></h1><h2 id="3-1工作原理"><a href="#3-1工作原理" class="headerlink" title="3.1工作原理"></a><strong>3.1工作原理</strong></h2><p>①光伏板上有震动器，可带动光伏感震动。</p><p>②光伏板上包括光敏传感器，雨雪传感器。</p><p>③当检测光强弱，或者有雨雪时，光伏板震动，清洁度检测仪的风机启动，在导轨上来回运动一次，前一次运动与后一次运动的间隔至少10s,直到触发运动状态的条件消除，设备运动完成当前周期，回到原点后停止。</p><h2 id="3-2-APP设计"><a href="#3-2-APP设计" class="headerlink" title="3.2 APP设计"></a><strong>3.2 APP设计</strong></h2><h3 id="3-2-1设计方案"><a href="#3-2-1设计方案" class="headerlink" title="3.2.1设计方案"></a><strong>3.2.1设计方案</strong></h3><p>&ensp;&ensp;&ensp;&ensp;APP采用Blynk物联网，可以查看当前光强数据和雨雪数据折现动态图，可切换自动模式和手动模式，手动模式下可控制震动器运动，清洁度检测仪在滑轨上左右滑动，风机启停。</p><h3 id="3-2-2-APP成果图"><a href="#3-2-2-APP成果图" class="headerlink" title="3.2.2 APP成果图"></a><strong>3.2.2 APP成果图</strong></h3><p><img src="/img/SUN/image52.jpeg" alt="图2.17 APP交互界面" style="width:50%;" /></p><h1 id="4-主要创新点"><a href="#4-主要创新点" class="headerlink" title="4 主要创新点"></a><strong>4 主要创新点</strong></h1><p>&ensp;&ensp;&ensp;&ensp;①实现了光伏板的无水化清洁，对于西北部寒冷地区，无水清洁不受到季节及环境因素的影响。对于干旱地区和少降水地区，无水清洁可以节省大量水资源，绿色环保。</p><p>&ensp;&ensp;&ensp;&ensp;②清洁时对光伏板面没有直接的物理接触，有效避免了清洁时对光伏板表面的机械磨损，延长了光伏板的使用寿命。</p><p>&ensp;&ensp;&ensp;&ensp;③没有清洁材料作用在光伏板的表面，避免了清洁材料对其表面化学侵蚀。同时避免了化学洗涤产品的使用，减少对环境的污染。</p><p>&ensp;&ensp;&ensp;&ensp;④实现了光伏板清洁的自动化，可以高效完成清洁，全天候工作，节省了人力物力。</p><p>&ensp;&ensp;&ensp;&ensp;⑤整套装置的供电电源来自光伏板自身发电电能，无需外接电缆，节省了能源。</p><p>&ensp;&ensp;&ensp;&ensp;⑥根据定时检测表明的清洁度，可以有效避免灰尘长期在表面累积成垢从而导致对表面的破坏。延长其使用寿命，提高光伏发电效率</p><h1 id="5-效益与应用前景"><a href="#5-效益与应用前景" class="headerlink" title="5 效益与应用前景"></a><strong>5 效益与应用前景</strong></h1><p>&ensp;&ensp;&ensp;&ensp;在所有清洗方式中，清洗成本大体可分为：设备成本和消耗成本。超声波清洗设备使用寿命约为10年，除了设备成本高于手工清洗和有机溶剂刷洗外，低于高压水射流清洗，对于消耗成本，以有效尺寸600mm×400mm×350mm，功率为1KW价格约为1万元的超声波清洗机为例工作一小时，耗电一度，费用约仅为0.5元，清洗剂1公斤价格约为20元，反复使用20~50小时相当于0.4-1元每小时。且装置可以对一定范围内的光伏板同时清洗，因此超声波清洁不仅效果好，消耗成本也低。</p><p>&ensp;&ensp;&ensp;&ensp;在西北自然环境恶劣的地区，风沙多，水资源紧缺，光伏板清理困难且常年积垢，而此装置不需要水源，有效避免了水源浪费问题，进而提升其经济效益，且绿色环保。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p>[1]徐巧年,魏显文.西北地区灰尘对光伏组件发电效率的影响及除尘方法的探索[J].产业与科技论坛,2016,23:1-2</p><p>[2]周晓明,朱周洪,陈军松等. 光反射型光伏板清洁度检测仪设计[J].<br>中国计量学院学报,2016,27(1):2-3</p><p>[3]任金莲,张明铎,牛勇.超声波清洗的一种新方法[J].陕西师范大学学报(自然科学版),2002,30(2):3-4</p><p>[4]东北电力大学.一种太阳能光伏板表面超声波防垢除垢系统[P].中国专利:201610227243.8,2016—-06-08.</p><p>[5]高德东,孟广双,王<br>珊等.荒漠环境中电池板表面灰尘颗粒力学模型建立[J].可再生能源,2015,33(11)</p><p>[6]高德东,孟广双,王<br>珊等.荒漠地区电池板表面灰尘特性分析[J].可再生能源.2015,33(11)</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛论文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>3Dshow</title>
      <link href="/2024/03/01/3D/"/>
      <url>/2024/03/01/3D/</url>
      
        <content type="html"><![CDATA[<iframe   src="https://www.yuzhouyuan.world/models/67bfcc21c57ad66c500fd9c0/art?modelId=67bfcc21c57ad66c500fd9c0&type=art"   width="600"    height="600"   frameborder="0"   allowfullscreen ></iframe>]]></content>
      
      
      <categories>
          
          <category> 3Dshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 3Dshow </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——电机PID闭环控制</title>
      <link href="/2023/09/01/lesson-1-13/"/>
      <url>/2023/09/01/lesson-1-13/</url>
      
        <content type="html"><![CDATA[<h1 id="十二、电机PID闭环控制"><a href="#十二、电机PID闭环控制" class="headerlink" title="十二、电机PID闭环控制"></a>十二、电机PID闭环控制</h1><h2 id="（1）实验效果展示"><a href="#（1）实验效果展示" class="headerlink" title="（1）实验效果展示"></a>（1）实验效果展示</h2><p>实验目的：电机速度闭环。</p><p>实验效果：电机通过增量式PID算法稳定在规定转速上，并实时显示：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ODQ2OTM5ODU2ZWY5M2UwNzZlM2ZkOWYzNTAxMzhhYjBfUFdDNE5ydjZPVG4zaGFBUFg2TWp2SEF2a2g0UUJ1Z1BfVG9rZW46RDZLSmJVSDlVb1pZbUV4ZXQ1emNDcmU5bkdiXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MzU5ZTRjZDgzZGJiNTU0OGJiM2EzMjNjZDQzMTgxNGZfUkFiNVNRWUROQWtjYUF4Ynh5c0JHMjRUWW5LUkRyMmJfVG9rZW46V2wwU2JTem1hbzgwU1V4ZmFXVWN5OU9XbnViXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上面的意思是我规定让电机的速度是2r/s，那电机就一定是2r/s，误差在0.01以内。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NmM4OWI0MTM5N2YxMTAyZmJlNDU0NGM3NWQxMzhmNDhfRFZERXFOY1dSYzRJeHhTd0pTV3pRdGJ0S0tvUzlMT3JfVG9rZW46Vk0zVGJ4anZvb1NXMWl4Z0hGUGNjMTdjbmRLXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>先看这次的主函数，四个定时器全用了：</p><p>定时器1用来生成PWM控制电机</p><p>定时器2生成0.1s的定时器中断PID计算</p><p>定时器3生成0.1s的定时器中断电机编码器测速</p><p>定时器4正交解码。</p><p>其实定时器2和定时器3里的代码完全可以写一起，比如只用定时器2的中断，里面同时进行PID计算和编码器测速，定时器3省下不用，这样可以节省一个定时器资源，节约出来的这个定时器我们可以用来控制舵机、可以用来做计时用等。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YmFkNmQ5ZDE5ZWIxNmQzNjk4ZTcxOWZlMmM0ZWZmNWNfakNXRnJJRVZ6R3dTV3dnUVQ5bkQ1N0xPUFljVGVuZXhfVG9rZW46TVhYS2I1QXVXb2I0bTF4SG82RGNNNTlwbjRlXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上面是pid.c里的代码，初始化了很多参数，下面还有几个公式，看不懂。</p><p>那么我们下面先来详细学习一下PID算法。</p><h2 id="（2）PID算法的原理和用法"><a href="#（2）PID算法的原理和用法" class="headerlink" title="（2）PID算法的原理和用法"></a>（2）PID算法的原理和用法</h2><p>PID算法的百度百科官方解释：</p><p>PID（Proportional-Integral-Derivative）（比例-积分-微分）算法是一种常用的反馈控制算法，广泛应用于自动控制系统中。它通过测量系统的误差（目标值与实际值之间的差异）来调整控制器的输出，以使系统的响应满足特定的要求。</p><p>百度百科看不懂很正常，下面我来举例子：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NDM2MzljZDBkNWZiMDliZTlhM2U3MTdmYTIwZmYzOTNfTUptQWV5OXZqZkQ3YTZBdFlwOTNEYXlBRUxOMGNWZm1fVG9rZW46UlBzMGJzbkJUb2JtTzR4VlhGT2NyVjdqbnZlXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上图是一个小人在控制阀门的开度，保持水管输出的流量稳定在5升每秒。</p><p>如果没有任何外在因素，小人只需要调节一次，确保输出流量是5L/s，就不用再管了。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OTUyYmZkM2VhMjlkNTlmNjEyOTQ4OGFhODFkYTI5YTdfT2FYRElwU2JXb1FlYkhOUzZQeUZKdTN5WnFwWmdxdEVfVG9rZW46SGlncWJacHBtb05HWlp4QnhKNmNaV3ZHbnNlXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上图，小人吃完饭回来，管子内壁已经长了很多苔藓，堵住了部分水流，流量只有4.5L/s了，小人赶紧调节阀门；结果阀门一开大，把苔藓冲走了一大部分，流量一下成了5.5L/s了，小人更着急了，又把阀门调小；好不容易，流量又回归正常了。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OTIzNmViYTYxMWE2NDcxYzk2NzQwMDc5YzgxMTlkZGRfeVFROE1DTXl3WjNyS1RUd2Y4NmNUUzJoU1ZGQVcwdFBfVG9rZW46WHMwOGJCcEtDb1NyajZ4cXdkZmM5OXVCbndlXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上图，但是这样的突发事件越来越多，各种各样的外界因素让他一秒都闲不下来，它需要不断调节阀门才能保证输出是5L/s。</p><p>这时，小人自己就是个控制器（STM32），小人的脑子里就已经装着PID算法了，这其实就是一个PID控制系统了。只不过小人不像STM32，它不能24小时检测+调节阀门，它会累死，但STM32不会累。</p><p>终于有一天，小人崩溃了，他要寻求技术支持。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YzE1YmNhMDIwMTJjYTlhMGY3ZmFjOGVmOWVhMTczOGJfQnJGS2NKRmxjc2pYVk8wOGd1VWlxbWJ4WVZyWjFaWkdfVG9rZW46VFg2cmJJY3FTbzF1aFN4ZTQ1UmNhZ2xZbmFkXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>小人定制了一套自动流量调节系统，由单片机控制器控制阀门自动调节流量，代替了小人来手动调节，并且在出水口处装了流量计，控制器自主观测流量大小，这样无论中途经历了什么干扰都不重要，最终输出一直都被控制在5L/s。</p><p>所以这一节我们学的就是这套控制系统的搭建。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MjQxOTk5NjZjOGQ5NTY3ODhkNTRhMmNkMzgxZjA4ZGZfS25nOTVhalRtZFl6UnFxRE1YN29sdURTQ3pVbmc3TTVfVG9rZW46V1lnN2JSNjRmb3lscGF4QzRKQWM4dTVDbnBiXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>我第一次知道PID算法是在b站看到一个两轮的平衡小车，小车只有两个轮子，为什么能立住不倒呢？</p><p>经过了解我发现，平衡小车上有一个传感器叫做“陀螺仪”，它可以检测小车实时的俯仰角。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=N2JkZmNiMzMwNjczYzQxNzQ2MjZjM2MyMzNjZmIxOWNfNFQ4OVppQndobzVoWTlHRWVMWWxPZW5Oblh1VXFYTVhfVG9rZW46WEtabmJ2dGZTb2lJVG54M2FPcWNaeUtHbkpoXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>上图绿色的标注就是飞机的俯仰角（pitch），俯仰角<0°则飞机俯冲，俯仰角>0°则飞机后仰爬升。所以正常的飞行状态就是俯仰角始终保持在0°。平衡小车跟这个是完全一样的，需要将俯仰角保持在0°。</p><p>陀螺仪传感器把俯仰角数据传给单片机，然后单片机将数据带入到PID算法中，经过PID运算之后，将运算结果用于控制PWM占空比，进而控制平衡小车的电机运动来修正俯仰角。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NWNkY2VlZWMxMTMyZDYzZGFhYWEzMzVhNmZkMTU5NzVfSGlrTGFxeDNvSEFEbkFnZGkwOElXMW8wTGxCb3QzZ2hfVG9rZW46UVE3eGJTRm9lbzl0cG14MTFzZGNYMlJYbnJoXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>与上图举的小人控制水流的例子不同，上图系统的主控制器是小人，小人是肉身凡胎，人类的极限也不过是每秒检查一次水流并调节一次阀门；而单片机中的PID算法执行周期非常短，STM32可以做到0.001秒执行一次观测流量并调节阀门，从而可以非常高效不断运行，对平衡小车来说，以每秒一千次的调节速度不断纠正当前的俯仰角，使其一直保持在0°，小车就能在两个轮子不断调节下立住不倒了。</p><p>PID控制就是非常典型的反馈控制。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MTk3NWQwODRjZWMzOTU2M2ZjM2NmMjgyOWQwNjc2OTJfQnFkQ21keXdWMnYyWktQNEpUenI3WUh3cWk3MTg1WlVfVG9rZW46VEFlZmJCR3RDb2EydVR4c1RaRWNuaUJIblJmXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>什么是反馈控制？高中生物应该是学过，温度高了下丘脑就会发出激素让人出汗，降温散热，温度低了下丘脑就会发出另一种激素让人打冷战，维持体温。</p><p>pid这里一模一样，我们看上图，还是以平衡小车为例，传感器就是陀螺仪，执行器就是电机，每次修正后的俯仰角都会反馈给传感器，再作为输入参数，周而复始进行不断的调节，这就是反馈控制。</p><p>另外上图这一个流程图是一个封闭的环状流程，所以PID控制又是一种闭环控制。那什么是开环控制呢？我举个例子，五路红外循迹小车就是闭环控制，因为它寻迹的传感器就是红外寻迹模块，执行器就是电机，符合上面的框图，所以可以使用单片机内部的PID算法自动进行巡线；</p><p>而遥控小车就是开环控制，用遥控杆手动控制小车也能完成巡线，但是因为遥控小车没有巡线的传感器，只有执行器也就是电机，小车完全由手动操控，无法自主巡线。</p><p>再举个例子，比如这一节实验的现象是电机通过pid算法自稳定在2r/s旋转，编码器作为速度传感器，实时反馈速度信息，这就是闭环控制。</p><p>那假如我不用pid控制，就只输出固定的pwm占空比也想达到2r/s，我就需要反复调试占空比大小，直到调节到2r/s为止，这就是开环控制。</p><p>再举个例子，假如我们洗澡的时候水温控制器是PID自动控制，那洗澡水只需要打开水龙头就一直稳定在37度，不需要我们手动调节，这就是闭环控制；如果是机械调节水温，那我们就要手动多次调节热/冷开关，直到水温合适为止，这就是开环控制。</p><h2 id="（3）比例项P"><a href="#（3）比例项P" class="headerlink" title="（3）比例项P"></a>（3）比例项P</h2><p>首先我们上一个极简PID公式（总要学点理论的，不要排斥公式，充分理解下面公式花不了你多少时间，还能帮你更好实操）。</p><p>PID（位置式）最容易理解的公式：</p><script type="math/tex; mode=display">u = P*e + I*\int e  + D*\mathop e\limits^ \bullet</script><p>首先不要怕，这个算法非常简单：</p><p>PID算法，当然就有三个核心参数：P、I、D。</p><p>而且P、I、D三个参数是确定不变的：也就是在自动控制中，这三个参数最初设定是多少就永远是多少；</p><p>上式中，u就是output，输出值；</p><p>e就是error，误差值，作为输入。</p><p>我们把三个参数拆开看，先分析P，令I和D都为0，公式就变成了：</p><script type="math/tex; mode=display">u = P*</script><p>P是比例系数，剩下的这个公式就是纯P控制，也就是纯比例控制，对这个公式的粗俗的理解就是：面多了加水，水多了加面，不断调节。</p><p>下面开始举例子：</p><p>下图是一个会漏水的水缸，目前里面水位为0：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=N2MwYjc1MmI0MGRmNjBjNzZjNDQ4MzliZjY0ZjU5YjFfcDhRZFc5NVQ3SlJ3dXJCTkttanVpaVV4N3Y3a05nUEJfVG9rZW46T0dOWWJIMGtFb3dwWlV4WUxEVGNSUDJsbmNkXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>要求：</p><p>每秒一次加/排水目标是缸的水位稳定在10cm水多了就排，水少了就加但是水缸会漏水，每秒水位下降0.2~2.2cm<strong>不定</strong>。加水按照纯P控制算法。</p><p>为了方便计算，我们把原第四条要求修改一下：</p><p>但是水缸会漏水，每秒水位固定下降0.2cm。</p><p>按照纯P控制算法，首先，设置P的参数：设P=0.5 </p><p>第一次加水：err=理想-现实=10-0=10，所以u=e<em>P=10</em>0.5=5，根据计算结果，把水位加到5cm，漏水0.2cm，5-0.2=4.8cm。所以第一次加水就变成了下图这样：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=N2E1MTZhNDgzYjVlNTVhOGU3ZmE4YzIwZTgzNjY4OWNfSjBsTlo5cDcweFo1QmhUeTVWQzRKUGRZVHh4NVlaajVfVG9rZW46TDJaemIwVVBVb3pjQWJ4UllzRmNoeUlJblNpXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>第二次加水，u=e<em>P=5.2</em>0.5=2.6，漏0.2就加2.4cm，就是下面这样：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MDQxNzQ2MWE4NzE4NGJjZDZmMWI5Yzg2NjczZTg0NmVfeEZHbTZxY0xPWnZZc1RqSFNJWk5kTUNHYmJMcFJCemxfVG9rZW46S2dTVmJXU2xwb00zRTF4R0l3YWNENnNablpjXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>误差进一步减小。</p><p>第三次加水：u= e<em>P=2.8</em>0.5=1.4，漏0.2就加1.2cm的水：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MGZlZGNjZmMyNzNiNmI2OTEyMTcyNmEwOGIzMGYyN2RfbldLd3lBdWdydGtnTEZMSWFYZFJzVDdLY3BFSGVpU0JfVG9rZW46UE5ZY2Jva3JIb3JwSnh4TDJiT2NQdzNSbnBoXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>所以，第四次、第五次… …第n次加水，我们如果真的算一算，会发现得到水位的变化曲线如下手绘图所示：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OGE3MTc5ZmFlMjdiMWIxZGI3ZDFjMzlmMzg5YzVmMGZfOE5BVHlDYmVGWDdSYUhEOTBtcUtQSFhqdXJRbHlJRXpfVG9rZW46WTN6d2IxZkdxbzU2QUV4aUNGemNUdTM2bkZmXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>我们发现随着纯P控制的不断修正，水位会无限接近于9.6cm，但是永远不会到达10cm。</p><p>因为，假设现在水位是9.6cm，err=0.4，e<em>P-0.2=0.4</em>0.5-0.2=<strong>0</strong></p><p>不增不减。</p><p>所以，当时间趋近于无穷大时，水位就一直在9.6cm，此时的误差err=0.4就是静态误差。</p><p>我们再重新分析，这次让P=2.5，还是每秒漏水0.2cm。</p><p>第一次加水，e<em>P-0.2=10</em>2.5-0.2=24.8，当前水位24.8cm</p><p>第二次加水，e<em>P-0.2=-14.8</em>2.5-0.2=-37.2，当前水位24.8-37.2&lt;0，0cm</p><p>第三次加水，e<em>P-0.2=10</em>2.5-0.2=24.8，当前水位24.8cm</p><p>第四次加水，e<em>P-0.2=-14.8</em>2.5-0.2=-37.2，当前水位24.8-37.2&lt;0，0cm</p><p>这就很搞笑了。这说明P值不可以取过大，P超过一定的值之后这个系统就不再稳定了，也就是不收敛了。这算法要是真应用上，不知道要浪费多少水hhh。</p><p>我们再重新分析，降低P值，这次取P=1.5，还是每秒漏水0.2cm。</p><p>第一次加水，e<em>P-0.2=10</em>1.5-0.2=14.8，当前水位14.8cm</p><p>第二次加水，e<em>P-0.2=-4.8</em>1.5-0.2=-7.4，当前水位14.8-7.4=7.4cm</p><p>第三次加水，e<em>P-0.2=2.6</em>1.5-0.2=3.7，当前水位7.4+3.7=11.1cm</p><p>第四次加水，e<em>P-0.2=-1.1</em>1.5-0.2=-1.85，当前水位11.1-1.85=9.25cm</p><p>第五次加水，e<em>P-0.2=0.75</em>1.5-0.2=0.925，当前水位9.25+0.925=10.175cm</p><p>第六次加水，e<em>P-0.2=-0.175</em>1.5-0.2=-0.4625，当前水位10.175-0.4625=9.7125cm</p><p>第七次加水，e<em>P-0.2=0.2875</em>1.5-0.2=0.23125，当前水位9.7125+0.23125=9.94375cm</p><p>第八次加水，e*P-0.2=-0.11，注意计算到这里！我们就发现了，好像还是不能加满…</p><p>我们发现随着加水次数的增加，水位变化大致如下图所示：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OWIyMzE2MDk3NGVkMjQ4NjdmM2E0MWUyMzU4ZTE4NmFfM1VQZlZNQWhnWVhLWENyOHlJeEVJYzdJWGdoOFdaRGtfVG9rZW46VDRLeGIyUlNCbzc4aEp4VHN5QmNxWnU0bnFjXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>一段时间后，水接近10cm，但还是跟第一次一样，还是永远到达不了10cm，有无法消除的静态误差。</p><p>第三次P=1.5的纯P控制还有其他缺点，比如超调过大：</p><p>尤其是第一次加水，加水量会超过标准水位很多，也就是图像会有一个很大的波动，这个波动值如下图，称为超调量。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NDFmMTc1N2MwNzJkNDA0ZTVjNTlhNzg1NzU2ZjUxZDJfcEJ5MlYwQUpiakJhczg4U2psS0xZdDhVZVZBcmtsUWpfVG9rZW46RDcxbGI0Z3dZbzFoekF4VDR1eWM4R1lTblhPXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>这个超调量（简称超调）是不利于稳定控制的，我们要让它尽量小。</p><p>那有什么办法呢，如果P太小会让水位达到目标值过慢，如果太大会系统失稳，取正好的话需要多次尝试，而且每秒固定漏水0.2cm是理想情况，真实情况是漏水在0.2cm~2.2cm不等，最小漏水量是0.2cm，也就是这个静态误差会一直存在，以及其他外界不确定性影响，控制效果也会跟着变。</p><p>纯P控制介绍完了，总结一下：</p><p>比例控制P越大，接近目标值的速度越快，但是提升控制速度的代价是超调和震荡会随着P的增大而增大；P过大会使系统失稳。</p><h2 id="（4）微分项D"><a href="#（4）微分项D" class="headerlink" title="（4）微分项D"></a>（4）微分项D</h2><p>这时候就要引入D了，微分：</p><script type="math/tex; mode=display">u = P*e + D*\mathop e\limits^ \bullet</script><p>e上加一个点代表是e的微分。微分离散化之后就是e-e_last，e是这一次的误差，e_last是上一次的误差，于是公式就变成了：</p><script type="math/tex; mode=display">u = P*e + D*(e - {e_{last}}) = P*e + D*\Delta</script><p>为什么要离散化？因为单片机运行是离散执行的，一句代码可能1微秒执行一次，性能更好的单片机可能0.1微秒执行一次，但时间间隔终究是离散的，不是连续的，所以我们也要将公式离散化去适应单片机的离散系统。</p><p>我们取P=0.5，D=0.2，得到下表：</p><div class="table-container"><table><thead><tr><th>次数/参数</th><th>P=0.5 D=0.2</th><th>P=0.5 D=0</th></tr></thead><tbody><tr><td>1</td><td>e=10，e_last=10当前水位5</td><td>e=10当前水位5</td></tr><tr><td>2</td><td>e=5，e_last=10当前水位6.5</td><td>e=5当前水位7.5</td></tr><tr><td>3</td><td>e=3.5，e_last=5当前水位7.95</td><td>e=2.5当前水位8.75</td></tr><tr><td>4</td><td>e=2.05，e_last=3.5当前水位8.685</td><td>e=1.25当前水位9.375</td></tr></tbody></table></div><p>可以看到有D项控制的水位上升更平缓，所以D项就相当于一个阻尼项，可以让控制更加平缓，不会有过猛过冲的情况，同理，D项最重要的作用就是消除超调量，如下图：</p><div class="table-container"><table><thead><tr><th><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OWVjZGFmNzNjMWJhZmY4ZmZlOTRiNzBmMzY5YjEyNTBfcHVtRWN6MmFGVHZibVBwZmpBNm5oaDFoUzhzeWJZejVfVG9rZW46R0tHQWIyYms1b0hSVXZ4Z3o3VWNXekdZbkNjXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></th><th><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OWEyNzI3Zjk0ODA4YjljMGM1ZWYxMjZhZTQ0Njk1N2VfTEF2eUpERWFSbnRyQlpDVThoWXludkh5S1BVRDlnTENfVG9rZW46UVFoa2JIRUVRb3lNVEh4eUNHa2NuVDREbmQzXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></th></tr></thead><tbody><tr><td>（a）加入D项前</td><td>（b）加入D项后</td></tr></tbody></table></div><p>微分控制效果手绘图</p><p>PD控制中，D项作为阻尼项可以有效消除超调量。</p><p>现在看起来控制效果已经非常好了吧，快速性，稳定性都有了，P解决快速性，D解决稳定性。</p><p>但我们忘了前面一直提的一个误差：静态误差。</p><p>也就是现在还没有准确性，可以看到实际值一直离目标值差一点点，怎么办？</p><h2 id="（5）积分项I"><a href="#（5）积分项I" class="headerlink" title="（5）积分项I"></a>（5）积分项I</h2><script type="math/tex; mode=display">u = P*e + I*\int e  + D*\mathop e\limits^ \bullet</script><p>积分项I就是专门来消除静态误差的，加入积分项，PID就全了。</p><p>跟前面一样，把公式离散化：</p><script type="math/tex; mode=display">u = P*e + I*\sum e + D*\Delta e</script><p>其中就是自始至终所有误差的累加。</p><p>原先0.2cm每秒的漏水，静态误差始终无法解决，但是有了积分项之后，把每次静态误差累积，随着累积的增多，积分项的作用会越来越明显，增大注水量，从而消除这个静态误差。</p><p>最后的效果如下：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NGQ5OGFmMzRmODFlZGFhYjk4YzUyZWU3YTU1ZjNkNzJfMmFZSTFFaFJMbkdhV2VZN0ZuWnJEZHhTbGZoQkhRN0VfVG9rZW46UWtKV2JUUUN3b2FKeTl4RXplcWNsM3BYbkFjXzE3NTg2ODA2ODQ6MTc1ODY4NDI4NF9WNA" alt="img"></p><p>静态误差被消除了，快速性、稳定性、准确性兼备。</p><p><strong>但是积分项I过大也会引起超调增大以及失稳，而且I过大会导致系统滞后，也就是调节效果慢半拍，降低系统快速性。</strong></p><h2 id="（6）位置式PID和增量式PID"><a href="#（6）位置式PID和增量式PID" class="headerlink" title="（6）位置式PID和增量式PID"></a>（6）位置式PID和增量式PID</h2><script type="math/tex; mode=display">u = P*e + I*\int e  + D*\mathop e\limits^ \bullet</script><p>刚刚我们讲的PID公式就是位置式PID，上面的这个公式就是连续的PID公式，下面我们要把它离散化，去适应单片机的离散系统。</p><p>现在我们上难度，把公式写得标准一点，离散位置式PID公式：</p><script type="math/tex; mode=display">u(k) = P*e(k) + I*\sum\limits_{i = 1}^k {e(i)}  + D*[e(k) - e(k - 1)</script><p>这是本节最核心的公式没有之一，我们其实是最常用位置式PID也就是没有任何变种的基础PID算法！</p><p>K代表第k次PID调节，u(k)就是本次的输出值。这个公式本质跟上面的连续PID公式是完全一样的，可以自己仔细去揣摩一下这个公式。</p><p>那什么是增量式PID呢？</p><p>增量的意思就是本次输出量和上次输出量的差值，比如第k次PID：</p><script type="math/tex; mode=display">u(k) = P*e(k) + I*\sum\limits_{i = 1}^k {e(i)}  + D*[e(k) - e(k - 1)</script><p>那上次就是k-1次PID：</p><script type="math/tex; mode=display">u(k - 1) = P*e(k - 1) + I*\sum\limits_{i = 1}^{k - 1} {e(i)}  + D*[e(k - 1) - e(k - 2)</script><p>两式一减就是增量式：</p><script type="math/tex; mode=display">\Delta u(k) = u(k) - u(k - 1</script><script type="math/tex; mode=display">\Delta u(k) = P*[e(k) - e(k - 1)] + I*e(k) + D*[e(k) - 2*e(k - 1) + e(k - 2)</script><p><strong>注：有数学恐惧的同学一定要硬着头皮看懂这几个公式，这是最简单的算法了，讲得也够详细，拿这个做一次理解训练，以后才能有算法的提升。</strong></p><p>△u(k)是输出值的增量，也就是上一次的输出值加上△u(k)就是这一次的输出值。</p><p>这样增量式PID就只需要记录前两次的误差，而不用记录从头到尾的累积误差。</p><p>所以这两种PID公式有什么区别吗？我们应该怎么选择合适的？</p><p>说一下两种PID的应用场合：</p><p>（1）位置式PID控制器适用于需要快速响应和精确控制的场景。比如，在电机控制中，需要控制电机的转速或位置，使其能够快速响应并准确控制，这时可以使用位置式PID控制器。又如，在温度控制中，需要控制温度的精度和稳定性，这时也可以使用位置式PID控制器，同时位置式PID中，I项是会产生滞后，增加准确性的作用，为了系统的快速性，有可能I项直接不用，只用PD控制。</p><p>（2）增量式PID控制器适用于需要较强稳定性和对测量噪声较高的场景。比如，在机器人控制中，需要控制机器人的运动轨迹，这时可以使用增量式PID控制器，因为机器人在运动过程中，往往受到各种干扰，如摩擦力、惯性力等，增量式PID控制器对这些干扰有较强的稳定性；又如，在液位控制中，需要控制液位的高度和稳定性，这时也可以使用增量式PID控制器，因为在液位测量中，测量信号通常存在一定的噪声和波动，增量式PID控制器可以较好地抵抗这些干扰。</p><p>最后给出代码。首先是位置式PID：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pid.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last=<span class="number">0</span>;                <span class="comment">//上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err=<span class="number">0</span>;                        <span class="comment">//本次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> Integral_err=<span class="number">0</span>;    <span class="comment">//累计的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> P=<span class="number">0</span>;<span class="comment">//         //P</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> I=<span class="number">0</span>;<span class="comment">//           //I</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> D=<span class="number">0</span>;<span class="comment">//         //D</span></span><br><span class="line"><span class="type">float</span> a_m=<span class="number">0.0</span>;                            <span class="comment">//输出值</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pid_control</span><span class="params">(<span class="type">float</span> speed)</span></span><br><span class="line"> &#123;     </span><br><span class="line">    err=(aim_v - now_v);           <span class="comment">//获得本次误差</span></span><br><span class="line">    Integral_err += err;             <span class="comment">//获得累加误差</span></span><br><span class="line">    a_m = P * err + I * Integral_err + D * (err - err_last); <span class="comment">//位置式PID公式</span></span><br><span class="line">    a_m = a_m&lt;<span class="number">10000</span>?a_m:<span class="number">10000</span>;   <span class="comment">//对输出值进行限幅</span></span><br><span class="line">    a_m = a_m&gt;<span class="number">-10000</span>?a_m:<span class="number">-10000</span>;</span><br><span class="line">    <span class="keyword">return</span> a_m;                       <span class="comment">//输出a_m</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>相比之前讲的理论模型，实际的代码多了红色字体的输出限幅，这一点是非常有必要的，因为PID三个参数是要多次调试才能逐渐达到理想控制效果，如果刚开始调试效果不好导致系统失稳，如果没有输出限幅，就会对系统造成毁灭性打击。</p><p>增量式PID代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;pid.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last_last=<span class="number">0</span>;      <span class="comment">//上上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err_last=<span class="number">0</span>;          <span class="comment">//上次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> err=<span class="number">0</span>;                  <span class="comment">//本次的误差</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> P=<span class="number">0</span>;             <span class="comment">//参数P</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> I=<span class="number">0</span>;              <span class="comment">//参数I</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> D=<span class="number">0</span>;            <span class="comment">//参数D</span></span><br><span class="line"><span class="type">static</span> <span class="type">float</span> off_cal = <span class="number">0</span>;</span><br><span class="line"><span class="type">float</span> a_m=<span class="number">0.0</span>;                      <span class="comment">//输出值</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pid_control</span><span class="params">(<span class="type">float</span> speed)</span></span><br><span class="line"> &#123;     </span><br><span class="line">    err_last_last=err_last;       <span class="comment">//更新上上次的误差</span></span><br><span class="line">    err_last=err;                   <span class="comment">//更新上次的误差</span></span><br><span class="line">    err=(aim_v - now_v);             <span class="comment">//更新本次误差</span></span><br><span class="line">    off_cal = P * (err - err_last) + I * err + D * (err + err_last_last - <span class="number">2</span> * err_last); <span class="comment">//增量式PID的公式</span></span><br><span class="line">    a_m+= off_cal;                    <span class="comment">//得到输出值</span></span><br><span class="line">    a_m = a_m&lt;<span class="number">10000</span>?a_m:<span class="number">10000</span>;     <span class="comment">//对输出值进行限幅</span></span><br><span class="line">    a_m = a_m&gt;<span class="number">-10000</span>?a_m:<span class="number">-10000</span>;</span><br><span class="line">    <span class="keyword">return</span> a_m;                        <span class="comment">//输出a_m</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>注意到不同了么，位置式的PID输出值就是输出值，但是增量式PID的输出值是上一次输出值的增量。</p><h2 id="（7）电机速度闭环控制及调参方法"><a href="#（7）电机速度闭环控制及调参方法" class="headerlink" title="（7）电机速度闭环控制及调参方法"></a>（7）电机速度闭环控制及调参方法</h2><p>铺垫了这么多，终于要进入正题了，搞我们的电机速度闭环。</p><p>请先下载代码 ，然后通读所有代码，理解PID算法的参数获取的流程是怎样进行的，以及电机的pwm控制，是对前几节内容的复习。</p><p>速度闭环我们使用的是增量式PID，因为我们需要的是更稳定的控制效果，使速度稳定在预定的2r/s，而不是快速灵活的控制效果。</p><p>烧录代码后电机应该已经可以稳定在2r/s，因为PID参数我已经调试好了。</p><p>那么你在调试的时候应该怎么调参呢？</p><p>把P、I、D三个参数都调成0先调P，P从0开始缓慢增大，比如先让P=0.1，观察速度变化，一旦电机一上电，速度超过了目标值，比如2.5r/s，说明有超调了，这时候快速性已经没问题了。然后慢慢增大D，增加阻尼，减小超调，稍微增大D，观察速度变化，让电机上电后快速稳定在2r/s，即参数调试完成。速度闭环控制中，积分项I的作用不大，因为我发现并没有静态误差，就没有调积分项。</p><p>网上还有很多PID的快速调参方法，比如在线调参软件呀，还能在电脑上画图呀，电脑画图需要我们学串口通信，也就是第三章第一节的uart才可以，这一节我们观测速度全靠oled屏的这个数值，看不到实际速度变化曲线，其实有点难受，但是这样也让我们早一点接触到了PID算法，并且PID算法会作为平衡小车的核心算法，而调平衡小车PID的时候是不需要电脑绘图就能调好的，不必担心。</p><p>比如平衡小车的直立环PID，跟这个电机速度环是几乎完全一样的：</p><p>电机速度环是增量式PID，更追求稳定；</p><p>平衡车直立环是位置式PID，更追求快速；</p><p>电机速度环输入的是速度误差；</p><p>平衡车直立环输入的是俯仰角误差；</p><p>电机速度环目标速度值是2r/s（只是本次实验）；</p><p>平衡车直立环目标角度值是0°（小车水平）；</p><p>综上，调参方法和算法框架都是几乎一致的。</p><p>本节课的两个练习题：</p><ol><li>仿照电机速度闭环代码，修改为电机的位置闭环；</li></ol><p>提示：比如让电机转轴停留在一个固定位置，或者每秒转轴转动45°，像舵机那样子。应该选用位置式PID，因为电机目标位置要时刻变化，追求快速性灵活性。</p><ol><li>仿照电机速度闭环代码和之前的红外寻迹代码，修改为寻迹小车的PID寻迹。</li></ol><p>提示：红外寻迹传感器不会直接传回误差信息，就像编码器实质是测位置，不是测速一样，寻迹的误差值生成已经在track.c中的track_scan函数完成了，请尝试把PID代码复制过去完成位置式PID寻迹（因为寻迹要求快速性强）。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——电机编码器测速</title>
      <link href="/2023/09/01/lesson-1-12/"/>
      <url>/2023/09/01/lesson-1-12/</url>
      
        <content type="html"><![CDATA[<h1 id="十一、电机编码器测速"><a href="#十一、电机编码器测速" class="headerlink" title="十一、电机编码器测速"></a>十一、电机编码器测速</h1><p>为了避免学习混乱，本次我们代码采用的电机都是第一章bom表里下图这个单电机：</p><p>不是平衡小车自带的那俩电机：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MjcyMzAwMDAwZTNiMTIwYjk4MzgwYWExZjFjZTBlNTNfNFVpVmN6dDh5dzRKdDg0dEFhVDRJVU5LdG5DSGRiOERfVG9rZW46RVM5bWJzWEdXbzFYY0h4OWc4dWN2dnFEbllnXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MTAyNTcyZDVlOGEyNTlhNThjMmM1MmM4OWRjZTAwODNfdmJNU3dLWG1DQ2xubGtoNzZYRjM5SkZrUExIVWlrODdfVG9rZW46UHNXbGJyMGhJb25nbWZ4enF1UWNRdGNtbmxkXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>并且本节内容比较难，而且代码我只讲了本节新的那一部分，全部的代码需要你自己好好看一遍才行。</p><p>实验效果：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjExMWY5NzEwNjEwMDkzNTI4ZWE1MDkwMmI5MzAyNTFfMGppS205N3FqTVVCdVM3WTdjZzJtcXhkU1h0QmltczRfVG9rZW46Tk9SWWJzZmVzbzBHSVJ4SzNpZ2NLUHNqbjVnXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>在上一节电机转动的基础上，精准测出电机的实时转速，并实时显示在OLED。</p><p><strong>本次实验接线表：</strong></p><div class="table-container"><table><thead><tr><th>电机线+</th><th>L298N_OUT1</th></tr></thead><tbody><tr><td>电机线-</td><td>L298N_OUT2</td></tr><tr><td>电机编码器GND</td><td>STM32_GND</td></tr><tr><td>电机编码器A相</td><td>PB6</td></tr><tr><td>电机编码器B相</td><td>PB7</td></tr><tr><td>L298N_12V</td><td>12V锂电池正极</td></tr><tr><td>L298N_GND</td><td>12V锂电池负极 和 STM32_GND</td></tr><tr><td>L298N_5V</td><td>STM32_5V 和 电机编码器5V</td></tr><tr><td>L298N_IN1</td><td>PA8</td></tr><tr><td>L298N_IN2</td><td>PA9</td></tr><tr><td>OLED_GND</td><td>STM32_GND</td></tr><tr><td>OLED_VCC</td><td>STM32_3.3V</td></tr><tr><td>OLED_SCL</td><td>A6</td></tr><tr><td>OLED_SDA</td><td>A7</td></tr></tbody></table></div><p>这次接线比较多，也比较乱，接的时候注意。</p><p>电机测转速就靠编码器，所以我们肯定要选后面带着编码器的电机，比如我们买的单个编码器电机，以及平衡小车底盘自带的电机：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NmQ0ZWViZjc0NTYzMmIzY2M5ZmZjYTRhNzY5MGI5NGNfVzZlQW5HSUkxMXBqY0thdW1BT1VkTkZwSlNCZlJ0ZmVfVG9rZW46Rm8xMGJiSmZab21qZ0N4VzQwaWNZYTJCbllnXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>首先我们要知道，电机是电机，编码器是编码器，这两个东西是各自独立的，编码器是安装在电机屁股后面的。比如上图这个编码器电机的六个接线口，电机线有两根，编码器线有四根，分别是编码器的5V和GND供电、编码器的A相和B相。</p><p>我们用的这个编码器的原理如下图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NmRmZjcyM2QwNTRjZDA4M2M1N2I2NGM5ODlmNTM2MGVfQ0pldmtmdUo5SGVaMTNVczZ5MWpiZHZXZEtqUW84MnlfVG9rZW46SGlTVGJYZUVVbzNPaVZ4bXE1aGNsWVdablJoXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><ol><li>上图这个刻度盘安装在电机转轴上，随着电机一起旋转；</li><li>刻度盘上有一条条等间距的缝隙；</li><li>右边是个小红外灯（发光元件），一直向左边的光敏元件发射激光，但是刻度盘会把光挡住，激光只能穿过刻度盘的一条条缝隙射给光敏元件，如下图：</li></ol><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=Njk0ZDJjNWIyMGYyODI5Njg1ZDA1ZThiNDhiZDM5NTFfVXFGWmFUeFRYZ21PT0pJbExuUnIxNjlIQjdRZjI1aDJfVG9rZW46U3dMVGJtUXY1b0pTU2h4RFR4OGNEU1BEblJnXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>按照上面的说法，刻度盘一直转，光敏元件就能得到一个循环被照和不被照的类似PWM的信号，得到一个如下图A相那样的波：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YTY4MzIyMDI0N2Y4MTg5OGE4NjEyYTdkNTdiY2FmMjRfWnF2QW1CSVg0YWxQeDhJb2ZFMDF2ZDUyQ0FLUUxOMTVfVG9rZW46Wk8yNmI1ek1Yb1VBbDJ4TllnTGMwQ21Hbm1mXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>如果告诉你，刻度盘上共有25个缝隙，那么，一段时间内，通过统计A波形所有高电平的数量我们就能算出来刻度盘一共转了多少个缝隙，也就是多少个刻度。并且能推算出刻度盘转到了什么位置，比如我们测得，10秒内，高电平共来了67个，那么也就是这个电机十秒转了67/25=2.68转，也就是十秒内的平均转速是0.268r/s</p><p>这样我们就实现编码器测速了。</p><p>但是这样有个问题，不知道盘转的方向，正转反转都是这样一个波！而且如果电机就来回正反转打哆嗦，这样始终就是同一个缝隙来回被光穿过，这样好像也能得到A波，这咋办呢？</p><p>解决方法就是把刻度盘的内圈再刻上一圈与原缝隙错开90°的缝隙，然后再拿一个光敏元件和发光元件！如下图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NzFiZjU2MWJjNDMzNzdkNWRjZWNjMDMzMDgyYjAxMTFfYkVWRVpXUHhKOXNxc09YWk1EZ29Bcm10eG9HUHYxM0lfVG9rZW46VDRBQ2JWdUd1b3FyUWV4bENNcWNOSlNkbk1kXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>这样就会得到如下两条锯齿波：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NTBjM2VjZmQ3NTAyYzJmZTllYTQxZTNhZjE2YWQ4ZTFfM253VWlQd3JGSUI1YmY2TGtENllKNmlkZWpLcWRsYjhfVG9rZW46UkhyOWJ5Wkljb0JmcUJ4dmg3bWNMTDdmblBlXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>A和B两组波形相位差是90º，可以按照下图判断出旋转方向：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OTY0YWZkZTk0OGY0NGY4YjBkYWJmNzgwOWEzOWQ1ZDJfVDVBWjhOMkVMZ0xZeG0wSkVlZ1Vwc0FnZ0lSaXJrZ21fVG9rZW46SlZGVGJ4Zmgzb0ZYRUt4OUZSdGNwRlBRbmZoXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>并且再进一步：通过观察上面AB相的波我们发现，圆盘向某个方向一直旋转，AB两相就是这四个状态周而复始。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjY2MzYxMmFmMzhiYmIxNjFkOGQ0NzBjNTJmNjYzNTZfNmM4aE5YQVVwSjNZMkVDMkZLQzZNdmM4cE5KWW42NG9fVG9rZW46UHh2ZGI2YTIyb3FvUUt4U0xaMWN5a0pBbkFiXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>我们分析之前先去tb店铺看一下自己使用的编码器的<strong>线数</strong>：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MWZmMmE5Y2ZkMDJmZmE5YmQwYmVlOThlZjkwOTZmMjVfUGp2bVhzbFJsQ1A4dmRMNkZMRGF2VUJFZXk5dk1GYmFfVG9rZW46Q3Y4MmJMYnBFb3pHamp4TnphcWNWTTlIbjZGXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>我们使用的单电机和平衡小车自带电机的编码器的线数都是13ppr，也就是13线。也就是刻度盘上每相都有13个缝隙；也就是电机每转一圈，A或B相的脉冲数都是13；也就是电机转一圈A相和B相就分别有13个脉冲。</p><p>另外也要注意电机的机械减速器，机械减速器的本质就是一堆齿轮：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ODE2YzUzZGU2YWNhNTdjNjdjYjkxMWMyOTRjYmEyZTNfb2p5QnFydFE0ODBndTBJeFh4TFN0dGRlWlRRVDhoc3RfVG9rZW46RXhOQ2I4c3NHb0d4RHR4NnB4dWNISUsybnhkXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>我们这次用的电机减速器的减速比是1:30，</p><p>也就是电机转30圈，输出转轴转一圈；编码器轴是连接在里面的电机轴上的，不是接在输出转轴上的。</p><p>综合编码器线数和减速器减速比，得出，最外面的电机输出转轴转1圈，里面的霍尔编码器A或B相会有13*30=390个脉冲。</p><p>那么怎么用STM32完成对于这AB两相波形的解析呢？这感觉真是麻烦。</p><p>这就要说到定时器的花活了：定时器有一个编码器模式，可以无脑解决我们这种AB相编码器的正交解码。</p><p>说到这我们复习一下以前学过的定时器的花活：</p><ol><li>定时器中断实现多线程</li><li>PWM生成</li><li>定时器计时</li><li>编码器正交解码</li></ol><p>定时器真是个好用的东西。 </p><p>正交解码：AB相相差90°，相差90°就叫做正交。</p><p>看代码：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=M2ZmNjI4NzMwMTNkZDA0OTI1YjQzOTIwNTZmYTBjOWFfMnBDcjNjbzJjRW05Y0hrUnh0TzlqTnFJNnAxWlVEbmdfVG9rZW46U3Zpc2JVSjRDb0I1ZDR4MldZNmNrNXhVbmRqXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>用到了三个定时器，怎么这么多呢？我们最先看TIM4_ENCODE_Init，</p><p>编码器正交解码用的定时器4。</p><p>多了一个IC结构体。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NzI1YWRlNWNlZjgxNjAyYmRhZWI3YjViZjM1ZWFlNDZfNHZDOU1zSkxiOW9iazV4SjN4aUF4OEZ5VUZiS001Q0VfVG9rZW46Qld1OGJSSFQ5bzROMHF4YjdyM2MyUzczbnJiXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>我们之前见过OC结构体，output channel，代表输出通道，这里顾名思义，IC当然就是输入通道了，input channel，因为编码器是波形发出者，STM32接收波形输入，是波形接受者。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MTkxNTJjYTU1MjI4ODczZGFmNDQ5NDc3YjRhZmM3NjBfQmVpRHVMZzJMbnF4bkZSdENROTZKTkNtRG9WNUhWalNfVG9rZW46UHRIZGJhTDRWbzk1V2Z4QUtNWmNoaHRtbmNoXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>IC有关的代码就是上面这一段，这一段代码有bug，我甚至怀疑把所有IC配置都删掉，只留一个TIM_EncoderInterfaceConfig函数也能用，所以这所有的代码我们复制粘贴就好了，不需要管，除了第一句函数的第一个参数。第一句是一个非常重要的库函数：编码器模式设置函数。</p><p>这个函数官方库有点错误，我们能用的参数只有第一个：</p><p>TIM_EncoderMode_TI1代表仅TI1计数；</p><p>TIM_EncoderMode_TI2代表仅TI2计数；</p><p>TIM_EncoderMode_TI12代表TI1 TI2都计数。</p><p>TI1就是输入通道1，就是PB6，就是编码器A相；</p><p>TI2就是输入通道2，就是PB7，就是编码器B相。</p><p>这个参数的意思具体看下面这两个图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ODcxYTFlZmNhNDBmYzY2YjQzM2QwMTBlYzYzOGE2YjFfUDFkazJLVVpuV0RHSVdVaTlid1I3dE56azh6Mm1Pa2lfVG9rZW46QjJQTGJva0Jab1ZZN2l4OFRabWNOR2cxbkxmXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MTc2NDJiMjFiZjk1MjQ4ZjZiYmI3ZGI1ZDZhOWM2M2JfTENPQm1Nb3hQTVFJVDdyTmhsWjY5TmF4VUZPUUNsSTFfVG9rZW46TzZWR2JtRkczb2REUzV4dDVpZWMxWWVwbkJoXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>我们使用的模式就是TI12都计数，也就是：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NjUxM2YwNjUzZWY0NzZjYmQ4MDQ5NDBlMDU3YjAwYjlfUFpHMG9GazJGRFM0cXNLZkxpRjJnbXFCWUpiaXVQbWVfVG9rZW46RkpUOWJJdHIxbzVFS1F4NmdtVmNlZGlHbnJjXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>观察上面三个图可知，只有正确的连续四个AB状态才会成功进行下一次计数，</p><p>一旦有一个毛刺，发现顺序不对了就退回到上次顺序正确时候的计数值。</p><p>其他的IC参数暂时不用管，这样编码器模式就配置好了。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDAxMWI1NDQwOTZkZTFkYzlmODBmZTNkMWFhOWRkMzRfOFVTaVRuT2w2WWIzTkdhajdISDRHOGVrN3dKQWJscFlfVG9rZW46RGluTWI1bGVWb0hyS1h4WW9JWWNFRVE2bmJlXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>再就看定时器的配置，arr和psc的配置，为了保证最高的采样精度，psc不分频，72MHz。</p><p>arr的值是综合了编码器线数、减速器减速比和通道采样方式的一个值：</p><p>上面分析过了13ppr的编码器，1:30的减速器下，电机外转轴转一圈A或B相会有390个脉冲，但并不是A或B相来一个脉冲计数器计一次数，我们设置了TI12都计数，那就是每个AB相的正交脉冲组合都算作一次计数：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YjE2Yjk5Yzg4MWQ0MDQ1Y2UwOThiMjNlMGUxZTk2YTlfUUNRRTdMN3cxM3hqdFJsYm1lQ0hQV1l5Vm10VmFKZVpfVG9rZW46RHFjaGJrUmZybzk5Sm94Qlk5dGNzYXlkbmFjXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>这四个组合都算作计一次数，也就是全部的arr需要390*4=1560。</p><p>最后得出电机输出转轴转一圈会有1560个状态，定时器的计数器计1560个数。</p><p>然后看中断服务函数：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NGJlYTc2OWM3OTM4ZTlkYjMwNTgzZTZhMjE0NDU4MmNfNHB5cFNXQ09mZjBtcFV2RTBXUjcwNExJUEs1RTBDY2tfVG9rZW46TnF3dWJPT3dkb0pDUDJ4VHhzZ2M1aFZnbmVlXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>每当更新中断（计数器溢出）来临，要先判断定时器是向上溢出还是向下溢出：</p><p>“TIM4-&gt;CR1&gt;&gt;4&amp;0x01”这一堆就是调用了定时器4相关寄存器的相应位，这个是怎么计算的我们先不管，都留到IIC通信这一节去讲，反正你知道这句的计算结果就是找出记录中断溢出方向的寄存器即可，结果=0就是向上溢出，结果=1就是向下溢出。</p><p>向上溢出就是计数器计数到了1557、1558、1559，然后清零，0。</p><p>向下就是4,3,2,1,0，然后CNT=arr，1559,1558,1557。这叫向下溢出。</p><p>向下溢出代表电机转过的圈数减了一圈，圈数计数-1，向上溢出就+1，这个地方你们可以自己根据下面的速度计算去领会，circle_cunt与超声波测距那一节的overcount是同一个作用。</p><p>好了，最后看定时器3的中断服务函数，定时器3中断我们是当多线程任务用：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YTA5NDA3ZjJlMTZmMzY1MWE2OGJmNmYxMjI2OGRlMDNfMzNVVXRKVzJhYjBpQk5CbVJiSDBraFdMaUx5TlNPV1pfVG9rZW46VG5LdGJGM2dqb0dmWkZ4ZmFmZWNMQUdMbnJnXzE3NTg1OTM3MTU6MTc1ODU5NzMxNV9WNA" alt="img"></p><p>第一句长的式子就是计算速度的代码，就这一句，speed就是速度，单位是转每秒。</p><p>TIM4-&gt;CNT的值就是定时器4计数器当前时刻的值，范围是0-1559。</p><p>Last_num变量存着上次采样时TIM4-&gt;CNT的值，last_count存着上次采样的圈数，这次的和上次的一减，就是△X，△X/△t就是速度，△t是通过定时器3的psc和arr决定的，我们配置的是0.1秒，△t=0.1s。</p><p>我们用到的三个定时器都是用作了不同的功能：</p><p>定时器1用于生成PWM控制电机。</p><p>定时器3用于多线程任务，计算电机转速。</p><p>定时器4用于编码器正交解码。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——直流有刷电机控制</title>
      <link href="/2023/09/01/lesson-1-11/"/>
      <url>/2023/09/01/lesson-1-11/</url>
      
        <content type="html"><![CDATA[<h1 id="十、直流有刷电机控制"><a href="#十、直流有刷电机控制" class="headerlink" title="十、直流有刷电机控制"></a>十、直流有刷电机控制</h1><p>从这一节开始将是本章的重难点。</p><p>首先我们想想我们本章的暗线——平衡小车，我们按照bom表准备平衡小车结构框架，然后把它组装起来是这样：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/e7d246e073f1cd5f.png" alt="img"></p><p>架子和轮子我们就不讲了，主要是这上面有两个银白色的电机。</p><p>包括第八节的寻迹小车车模：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/ca842de8bfee4b05.png" alt="img"></p><p>上图除去轮子和车架以及那个我们用不到的电池槽，也有两个黄色的电机。</p><p>所以电机控制会是机器人设计制作的<strong>核心。</strong></p><p><strong>作为一个机器人，它总要会动才能叫机器人吧，那什么东西可以让机器人动呢？</strong></p><p><strong>只有电机。</strong></p><p>舵机呢？舵机只是基于电机改进的一种机电一体化产品，舵机本身就是个小机器人而已，它的pwm控制方法是人为规定的；</p><p>而电机（电动机），这是我们初中物理就已经学过的东西，它是目前工业生产中唯一能让电能转化为机械能的元件，电机的学问非常庞大，它基于《电磁学》、《电机学》等基础学科。</p><p>对于对电机的深层探讨：直流有刷电机相关的基础可以移步第五章第一节。</p><p>而本节意义在于快速上手直流有刷电机的原理和控制，如果你想认真详细学习深入的电机控制，请看第五章。</p><p>本节实验效果：按下key1，电机以最大速度的1/2正转；按下key2，电机以最大速度的1/2反转。</p><p><strong>且本节的接线适合所有的直流电机（直流有刷电机）。</strong></p><p>直流电机的特点就是伸出两条线（不分正负，这两条线谁正谁负都行，人为规定）：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ZTlhYzNjYTUyMjQ5MDgzYmQ3ZDg3NzVhYzk4ZTczNGFfeEhiblJuWkY2RGdWTHhzazlhc2dRU3RWQndYb0J5RzVfVG9rZW46QU5uTGJNUFN4b3JhQWd4R3lxa2NGaENsbmVjXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>这两条线有电压差，即有电流通过就会转；电压差反向接就反转。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YTRmZjM4ZjUxMjc2YTU3ZDMxYTZhZWQwYzAzOTA0ZDRfd3l5SXBqVUxMeHFHTzZ6Q3V5ODZEV3pRcXl3bFhKU1lfVG9rZW46SDRHMWIwamV4b2Jqc1N4U0pRc2NZQzg4bkRlXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>上图这种小黄电机也一样。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NDE1OGNlN2RlMGU2MGNkNGY4ODdhMmI0MThjY2Q2MDBfTFN0MmpqOTBXNVV6VlljWXdTbzZJeTk4b29IWTF5U2VfVG9rZW46TzkyUmJOSmJ6bzkxUTN4WnA0NGM3YTFEbmY2XzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>上图这种带编码器的电机也一样。编码器我们下一节再说，不使用编码器，就只接电机线+和电机线-，让电机转即可。</p><p><strong>本次实验接线表:</strong></p><div class="table-container"><table><thead><tr><th>电机线+</th><th>L298N_OUT1</th></tr></thead><tbody><tr><td>电机线-</td><td>L298N_OUT2</td></tr><tr><td>L298N_12V</td><td>12V锂电池正极</td></tr><tr><td>L298N_GND</td><td>12V锂电池负极 <strong>和</strong> STM32_GND</td></tr><tr><td>L298N_5V</td><td>STM32_5V</td></tr><tr><td>L298N_IN1</td><td>PA8</td></tr><tr><td>L298N_IN2</td><td>PA9</td></tr><tr><td>按键模块K1</td><td>PB4</td></tr><tr><td>按键模块K2</td><td>PB5</td></tr><tr><td>按键模块GND</td><td>GND</td></tr></tbody></table></div><p>其中：GND这一条，为什么要把所有的GND都跟负极连在一起？</p><p>这里是非常重要的一个概念：共地。</p><div class="table-container"><table><thead><tr><th>L298N_GND</th><th>12V锂电池负极 <strong>和</strong> STM32_GND</th></tr></thead><tbody><tr><td></td></tr></tbody></table></div><p>共地的问题在第二章第一节，感兴趣可以提前看看。</p><p><strong>接线时请注意！！</strong></p><p>这可能是大部分同学第一次使用锂电池进行实操，<strong>一定要注意用电安全！</strong></p><p>请详细阅读以下文字：</p><ol><li>初学者请使用较长的杜邦线进行接线，杜邦线过短会导致模块之间距离过近，一旦两个电路板相互接触就有可能发生电路的严重故障！</li><li>L298N的接线端子要先用一字头螺丝刀松开再插线，然后再紧固。</li><li>接入接线端子的线头必须完全伸入，自己用剥线钳拨开的裸线千万不要把细小的铜丝裸露在端子外，这样会极易造成短路，火星四射。</li></ol><p>部分接线图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NWRhOTczNjU4YjFmOThiY2E5YzUwMDA0MzcwNjI4Y2FfTWdSRnBEbTVlaWZkZjcyYWxKUGZLb1p3U1VZSzRrOVBfVG9rZW46VUFPYWJucEVDb0F6MTd4TjFiYmNvd1pQbktoXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>2p接线端子图</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=OTAzOTYzZjcxMGVhODI4ZmE5MzkwYjk0MzUwZmJjNjlfeEg4YVdRQ0NaMWZJMWlUbHpxWkpxWFRmaXR2cHhwRXpfVG9rZW46SjNRa2JaVUFmb1JUalV4cUVEMmN1MmF6bktiXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NTdjYTRjN2Y1ODY3NDQ4YTc0NzE4MDhmMGUwNzQ4ODZfU0J2ZE1UNUU0aE9qM05OUndmZWRSMmNtZlIzaVNxZGtfVG9rZW46WG9aa2JGR2xrb3RsQUx4N3ZNbGNkT2V5bk1kXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>我们先看看L298N这个模块。</p><p>L298N芯片内部集成有两个<strong>H桥电机驱动电路</strong>，我们又要学电路了。</p><p>何为H桥驱动电路？看下图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NjBkYzUxZDEwYjY4NDUyMmQyMTgwZGY2NjIyOGU1OGJfalBoZjJaQ2hEU3YyQm1QaUJhZHpWZjk2S0dla05CbmlfVG9rZW46R2loQ2JVeHZZbzdLM094aFI5NGNLU0tIbkZoXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>中间这个圆圈代表直流电机。</p><p>已知S8050型号的三极管是NPN型三极管；</p><p>已知S8550型号的三极管是PNP型三极管。</p><p>在此电路中，四个三极管均工作在饱和/截止状态下（说白了就是这四个三极管当开关用，对于NPN型三极管，IN端给高电平开关导通；给低电平开关关断。PNP型三极管完全相反）。整个电路的形状像一个字母“H”，这就是H桥名字的由来。</p><p><strong>深入学习三极管基础知识请学习《模拟电子技术》进行理论补充。</strong></p><p>如果你现在没空学模电，你就把这四个三极管完全看作四个电子开关就行了，已知8050三极管的基极（IN端）输入高电平则开关导通，输入低电平则关断；8550三极管则完全相反（高电平截止，低电平导通）。</p><p>分析：</p><p>当IN1=1，IN2=0时：</p><p>Q1,Q4导通，Q2,Q3关断，电流流向如下图：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YmM1OGEyMTVjNjFlYWNiOWY2YjM3NTlmYjU3MDkyMzBfaWdwM0tacEdYb1pSU3p3eUNPdTlQZGJmbFRCc29mU2hfVG9rZW46S2lWYWJGVGc0bzVoZnZ4R0ZkUWNRWmd2blJoXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>这里我们只要知道，直流电机都有两根线，这两根线不分正负，两根线只要有电压差，电机就有电流，它就会转。我们定义上图这个方向为正转。</p><p>当IN1=0，IN2=1时：电机电流与上图方向相反，所以电机反转。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NGVhY2Q3YzBmMDY2ZThiOTA3MzNmYjVmNDI0NGMwZGJfT1RvV0hmWkJWWmoxWXlpaFd5Tk9kNFhRUlZkc1phZVpfVG9rZW46VkdBU2JZWm5kb1FKbjV4bXBDcGNKMWlXbkNjXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>如此分析，我们已经实现了电机的正反转控制，只不过转速没法控制。</p><p>下一个问题，怎么实现转速控制呢？</p><p>如果把IN1和IN2换成两路PWM控制！相信一提到PWM大家就理解了。</p><p>比如当IN1占空比是0，IN2占空比是100%时：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=NGU4NTc3MjExMjU5ZTBlNzEwNWM1MzE5NTEyMGZhNzFfWGNtUGNqaDVsSWN6NVVHSVk5b3Jod3V3aFY0ZDBRd0ZfVG9rZW46R0VwbmIzYXF3b1liYUt4MmN1NGNHQkxJbkFjXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>电机按照上图方式全速转。</p><p>但是当IN1占空比是0，IN2占空比是50%时：</p><p>电机按照上图方式以全速的1/2转。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MGJmNmE1YWNkZjZkMGFiMTlmZDgzYTcxNTZmOGZiZmVfMlp3OVV3U3JBQWZzSFhkV1BWcFJ3Vmt2N2JuejRxMlZfVG9rZW46UE11aGIxVXhubzNoOEd4Yll4TmNLMGJHbkZkXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>根据H桥的分析我们就能把L298N的使用方法摸得大差不差，因为L298N是双H桥，也就是内部有两个H桥电路，所以一个L298N能分别控制两个电机。</p><p>控制一个电机需要两路PWM，所以控制两个电机就需要四路PWM，也就是使用一个定时器的四个通道就可以。</p><p>上图“通道A使能”、“通道B使能”、“板载5V使能”三个跳线帽我们都不能拔掉，否则，电机A/B通道无法使能的话，对应通道的电机就不会转；</p><p>板载5V跳线帽拔掉，5V输出就没有了，我们要用到这个5V输出，正好可以给单片机5V供电。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YjJhMTI1OTA2NWI0M2M4NDAxZTZiY2Y0MTc0NWZkNGVfREdVSDZTcmh1eEdTcE5lc0RQelZUaWU2SEk2RmlYQmNfVG9rZW46VktsZmIydzdsb3ZIeUh4enNVamNZem9UbkxlXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>再回到电路图，对于L298N的两个H桥电路来说，VCC=12V=电源电压，我们用12V锂电池供电。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ZjRiMWEzMDFkMzlkYzlmODA5ODI4NmZiZTI1ZmI3ZGZfV1hnVDc0QW91VXFXcXA1b1RIODZCR2hDRzlPc1pqYXdfVG9rZW46QXFadGJPTnZNb3dOcUd4SVdla2NKcU5FbmtZXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>模块上的逻辑输入从下到上分别是IN1 IN2 IN3 IN4。</p><p>本次实验我们只控制一个电机，所以只需要使用IN1和IN2。</p><p>关于硬件最后，我们尝试分析一下整个模块的电路：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=Yzc3MGMwODRiYTFjZjExMDg5YjJjNWQ3ZGUxM2YwMDFfMWF0SVBCd3kydm41bE9qZ2lJbjhFQlNlVFBFRkFGdlNfVG9rZW46U1Bvd2J5blY4bzZ6UFl4a21HVWNWUjlrbmtjXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>P1~P5都代表接口，可以是排针或者接线端子，用于外部接线。</p><p>右边蓝色的八个二极管有什么用呢？</p><p>这是四个钳位电路，将连接电机输出所有通道的电压值钳位在0-Vss（0-12V之间）为什么要这么做呢？</p><p>因为电机是一种特别容易产生干扰的电气设备，电动机反过来就是发电机，如果不通电，手摇电机，就会产生不小的<strong>反电动势</strong>；如果发生电机急停等，电路电压就会产生很大的尖峰等干扰，电压一下会波动高于12V，如果不做钳位，可能就会对L2998N芯片等产生损害。</p><p>好了，上面算是一点点电路的理论补充。</p><p>有的同学会问：为什么L298N会产生5V电源？这就不需要管了，芯片内部是这么设计的，也许IC设计师设计芯片电路的时候，里面正好有一个5V恒压源，放在那闲着也是闲着，引出来还能供个电用。</p><p>好了，看STM32控制代码。</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=MDI2NDEyOGI3NzVkNzIwMjc0M2EzMzc5MGU3N2RmYjlfejBkOERod0JBOFZlbE5jZHRHd1JMZkRTRlc3V3hRb2dfVG9rZW46U1RPc2J6OU9ib0JUb3B4NDhMNWNmZlNjbkZYXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>STM32部分没有任何新知识。</p><p>PWM频率怎么算出来是24KHz的？请复习前面的定时器中断和PWM。</p><p>那为什么是24khz呢？</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=YzgzZDM4MDc3NTM2NzQ0MzU5NzlhMGVjM2NjZWVmYjJfZklIQ3hqUmw5M2E5VHFvanRPNEpnN1ozZGI2Q1ppWFBfVG9rZW46U0FUdWJreFNsb2FLUzN4NnVPTGNNRUgxbkplXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>这是芯片推荐的PWM频率，一般电机的PWM控制频率在10K左右即可。</p><p>其他代码与PWM实验几乎完全一样。</p><p>效果验证：</p><p>按下key1，电机正转，按下key2，电机反转。</p><p>这里注意！不同的电机有不同的额定电压！</p><p>比如：</p><p><img src="https://vcnxmjs0vohu.feishu.cn/space/api/box/stream/download/asynccode/?code=ODJjYjZmMmYxZTkzZDg0NDliNjE1YTVmOGM2NThkNmVfWXNqSmEwWnpFaU9xazF4eXZ0VG0wenh0UDBYWlRPWk1fVG9rZW46SkJXbmJ3bXhqb0tBM1N4eDBnVmNrY1lZbk9iXzE3NTg1MDM3NTA6MTc1ODUwNzM1MF9WNA" alt="img"></p><p>这个我们选的额定电压是12V的电机，我们用12V电池供电，那我们的PWM占空比就可以开到100%，让电机两端电压在12V。</p><p>但是如果是我们买的平衡小车底盘+电机，它们给的电机额定电压是8V，也就是我们最多让电机两端电压是8V，大于8V会烧坏电机。所以如果我们还是使用12V电池供电，PWM控制占空比最大只能开到66.6%。</p><p>这一节，我们已经组装起平衡小车的框架，学会控制平衡小车的轮子动了，正反转和调速。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——超声波测距&amp;定时器计时</title>
      <link href="/2023/09/01/lesson-1-10/"/>
      <url>/2023/09/01/lesson-1-10/</url>
      
        <content type="html"><![CDATA[<h1 id="九、超声波测距-amp-定时器计时"><a href="#九、超声波测距-amp-定时器计时" class="headerlink" title="九、超声波测距&amp;定时器计时"></a>九、超声波测距&amp;定时器计时</h1><p>本节我们再讲一个传感器：超声波传感器</p><p>并用它来温习、提升我们对于STM32的定时器的操作和花活。</p><p>这一节的目标主要有三个：</p><ol><li>会使用超声波测距</li><li>会使用定时器进行计时</li><li>提升C语言算法功底</li></ol><p>实验效果：利用超声波传感器进行<strong>超声波测距</strong>：</p><p>将超声波传感器的“两只眼睛”对准一个待测点，在oled屏幕上会实时显示超声波传感器距目标的粗略距离。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/3b44250316e3aa38.png" alt="img"></p><p><strong>本次实验接线表：</strong></p><div class="table-container"><table><thead><tr><th>超声波模块Vcc</th><th>单片机3.3v口</th></tr></thead><tbody><tr><td>超声波模块GND</td><td>单片机GND口</td></tr><tr><td>超声波模块Trig</td><td>PA11</td></tr><tr><td>超声波模块Echo</td><td>PA12</td></tr><tr><td>OLED_GND</td><td>单片机GND口</td></tr><tr><td>OLED_VCC</td><td>单片机3.3v口</td></tr><tr><td>OLED_SCL</td><td>PA6</td></tr><tr><td>OLED_SDA</td><td>PA7</td></tr></tbody></table></div><p>由于超声波模块需要3.3V供电，所以使用Jlink供电即可。</p><p>超声波测距模块HC-SR04介绍：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/49e72c60571298b1.png" alt="img"></p><p>像不像两个“眼睛”：</p><p>👀</p><p>但其实这是超声波的发射和接收器。</p><p>VCC：电源线，3-5.5V宽电压输入（一定不要买成固定5V输入的，不然我们用3.3V供电不能正常工作）。</p><p>GND：地线，连接单片机的接地（GND）</p><p>TRIG：触发控制信号输入</p><p>ECHO：回响信号输出</p><p>HC-SR04 超声波测距模块可提供2cm-400cm 的非接触式距离感测功能，测距精度可达高到 3mm；</p><p>模块包括超声波发射器和接收器（两只“眼睛”）与控制电路。</p><p><strong>HC-SR04的工作原理</strong></p><p>(1)TRIG口 触发测距，给TRIG口最少 10us 的高电平。</p><p>(2)模块内部自动发送 8 个 40khz 的方波，自动检测是否有声波返回；（这一步我们了解即可，这是超声波传感器内部在干的事，无需我们操作）</p><p>(3)若有信号返回，经过模块内部运算后，通过 ECHO口 输出一个高电平，高电平持续的时间就是超声波从发射到返回的时间。</p><p><strong>测量距离=(高电平时间*声速)/2</strong></p><p>声速是340m/s，除以2是因为：声波发射再反射回来，要一来一回，是要走待测距离的两倍。</p><p>以下是示意图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/18f7403d994d80aa.png" alt="img"></p><p>上图红框的模块内部的信号我们并不用管，那是传感器内部的事。</p><p>我们只需要知道：</p><ol><li>我们只需要给TRIG口一个10us以上的高电平，去触发测量任务。</li><li>传感器的测量任务进行完之后，ECHO会发出一段时间的高电平，这段高电平的持续时间经过换算就能得到待测距离。</li></ol><p>那么我们用之前学到的知识去完成这两条。第一条很简单，把随便一个IO口搞成推挽输出，接到TRIG上去，然后电平置高，delay_us(11)，延时十微秒以上即可。</p><p>第二条需要测量高电平持续时间，这个难度大一些。首先我们怎么测高电平？</p><p>当然是IO口的输入模式，我们选择上一节刚学到的浮空输入，然后使用上一节也提到的GPIO_ReadInputDataBit函数去判断电平即可。</p><p>那就剩怎么精准测量高电平的持续时间了。这个我们之前没有具体讲过相似的计时的方法，你能通过之前的所学，先自己想想怎么完成计时功能么？</p><p>答案：</p><p>单片机计时当然就用定时器了，不然也没有别的可以定时的东西了。我们可以在高电平到来的瞬间开始打开定时器，开始计数，定时器的计数器CNT开始从0开始计数；等到高电平结束，将定时器关闭，那计数器也停止计数，此时计数器CNT的计数值经过换算之后就是高电平时间。 那么上面的方案牵扯两个问题：TIMx_CNT的值达到ARR之后不是要自动清零么，清零了咋办？我们怎么检测高低电平转换的那一瞬间？ 先解决第一个问题：CNT清零的同时会进定时器更新中断，我们可以在定时器中断里记录，每进一次定时器中断，记录清零次数+1。再就是把ARR的值设置得尽量大一点，降低定时器更新中断的触发频率，比如arr=10和arr=65535，如果arr=10，程序会不停进入定时器更新中断以至于大量资源被占用，main函数while(1)的东西可能都执行不了了。 再解决第二个问题：那就要使用GPIO_ReadInputDataBit函数不断检测ECHO口电平，一旦电平变化，就开始计时。</p><p>好了，来看代码：</p><p>Main函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> text[<span class="number">10</span>];</span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    TIM4_Init(<span class="number">65536</span> - <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_Clear();</span><br><span class="line">    HC_SR04_Init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        a = Senor_Using();</span><br><span class="line">        <span class="built_in">sprintf</span>(text, <span class="string">&quot;%.2fcm        &quot;</span>, a);</span><br><span class="line">        OLED_ShowString(<span class="number">0</span>, <span class="number">0</span>, (u8*)text, <span class="number">16</span>);</span><br><span class="line">        delay_ms(<span class="number">100</span>);  <span class="comment">// 延时1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们选用定时器4来进行定时任务。</p><p>注意定时器4参数：psc=0=1-1，也就是计数频率是72MHz，不分频，这是为了让计数器的计数精度足够高；arr=65535，arr能取到的最大值就是65535。</p><p>先看HC_SR04_Init函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">HC_SR04_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    GPIO_ResetBits(GPIOA,GPIO_Pin_11);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Trig口推挽，echo口浮空，跟我们之前说的一样。</p><p>最后一句置低trig口，保持trig口是低电平，因为trig置高是开始测距的信号。</p><p>再看Senor_Using函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> overcount;</span><br><span class="line"><span class="type">float</span> <span class="title function_">Senor_Using</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> length = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    u16 tim;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//测五次数据计算一次平均值</span></span><br><span class="line">    <span class="keyword">while</span>(i != <span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        GPIO_SetBits(GPIOA,GPIO_Pin_11); <span class="comment">//拉高信号，作为触发信号</span></span><br><span class="line">        delay_us(<span class="number">20</span>); <span class="comment">//高电平信号超过10us</span></span><br><span class="line">        GPIO_ResetBits(GPIOA,GPIO_Pin_11); <span class="comment">//等待回响信号</span></span><br><span class="line">        <span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12) == RESET);</span><br><span class="line">        <span class="comment">//回响信号到来，开启定时器计数</span></span><br><span class="line">        overcount = <span class="number">0</span>;</span><br><span class="line">        TIM4-&gt;CNT = <span class="number">0</span>;</span><br><span class="line">        TIM_Cmd(TIM4,ENABLE);</span><br><span class="line">        i += <span class="number">1</span>; <span class="comment">//每收到一次回响信号+1,收到5次就计算均值</span></span><br><span class="line">        <span class="keyword">while</span>(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12) == SET);<span class="comment">//回响信号消失</span></span><br><span class="line">        TIM_Cmd(TIM4,DISABLE);<span class="comment">//关闭定时器</span></span><br><span class="line">        tim = TIM_GetCounter(TIM4); <span class="comment">//获取计TIM2数寄存器中的计数值</span></span><br><span class="line">        length = <span class="number">100</span>*(tim+overcount*<span class="number">63336</span>)*(<span class="number">1.0</span>/<span class="number">72000000.0</span>)*<span class="number">340.0</span>/<span class="number">2</span>; <span class="comment">//通过回响信号计算距离</span></span><br><span class="line">        sum = length+sum;</span><br><span class="line">        TIM4-&gt;CNT = <span class="number">0</span>; <span class="comment">//将TIM2计数寄存器的计数值清零</span></span><br><span class="line">        overcount = <span class="number">0</span>; <span class="comment">//中断溢出次数清零</span></span><br><span class="line">        delay_ms(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    length = sum/<span class="number">5</span>;</span><br><span class="line">    <span class="keyword">return</span> length; <span class="comment">//距离作为函数返回值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先找找第一句extern int overcount变量是哪里来的。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> overcount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>  <span class="comment">// TIM4中断服务函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (TIM_GetITStatus(TIM4, TIM_IT_Update) != RESET) <span class="comment">// 判断是否为定时器更新中断</span></span><br><span class="line">    &#123;</span><br><span class="line">        TIM_ClearITPendingBit(TIM4, TIM_IT_Update); <span class="comment">// 清除中断标志位</span></span><br><span class="line">        overcount++; <span class="comment">// 中断溢出次数加1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>overcount来自TIM4的中断服务函数，每进一次定时器4更新中断，overcount的值就会+1，所以按照之前讲的，overcount代表TIM4_CNT清零的次数。</p><p>回到Senor_Using函数，先看前半段：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> <span class="title function_">measureDistance</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> length = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line">    u16 tim;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i != <span class="number">5</span>) <span class="comment">// 采集5次数据求平均</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 触发HC-SR04：拉高高电平触发信号</span></span><br><span class="line">        GPIO_SetBits(GPIOA, GPIO_Pin_11);</span><br><span class="line">        delay_us(<span class="number">20</span>); <span class="comment">// 高电平持续时间超过10us</span></span><br><span class="line">        GPIO_ResetBits(GPIOA, GPIO_Pin_11); <span class="comment">// 拉低，等待回响信号</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待回响信号到来（输入引脚由低变高）</span></span><br><span class="line">        <span class="keyword">while</span> (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_12) == RESET);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 回响信号到来，启动定时器计数</span></span><br><span class="line">        overcount = <span class="number">0</span>;       <span class="comment">// 重置溢出次数</span></span><br><span class="line">        TIM4-&gt;CNT = <span class="number">0</span>;       <span class="comment">// 重置TIM4计数值</span></span><br><span class="line">        TIM_Cmd(TIM4, ENABLE); <span class="comment">// 使能TIM4计数</span></span><br></pre></td></tr></table></figure><p>前三句用于操作trig口触发超声波开始测距。</p><p>while(GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_12) == RESET);</p><p>这一句很重要：</p><p>RESET就是0，0就是低电平，所以这句代码的意思是只要PA12是低电平，循环就一直进行。所以也就是PA12（ECHO）一旦变成高电平，马上跳出这个循环。这一下就实现了我们之前说的检测电平跳变瞬间。</p><p>然后给相关变量清零：overcount=0;</p><p>还有TIM4-&gt;CNT=0，这就是给TIM4的计数器清0；<strong>这是我们第一次在程序中直接操作定时器的计数器</strong>！需要写TIM4-&gt;CNT，而不是TIM4_CNT，那么“-&gt;”这个符号是什么意思呢？这就要去学c语言指针了，这里如果不知道可以先跳过，记住这样写就行，<strong>但是这是本手册第二次提醒要学c语言指针了</strong>。</p><p>相关计数量清零后，再TIM_Cmd(TIM4,ENABLE);开启定时器，定时器计数器就会开始递增，CNT到最大值清零并触发中断，中断内通过overcount记录清零次数。</p><p>开始计录超声波往返时间。</p><p>再看后半段程序：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    i += <span class="number">1</span>; <span class="comment">// 计数本次有效测量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 等待回响信号结束（输入引脚由高变低）</span></span><br><span class="line">    <span class="keyword">while</span> (GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_12) == SET);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 停止定时器，读取计数值</span></span><br><span class="line">    TIM_Cmd(TIM4, DISABLE); <span class="comment">// 关闭TIM4计数</span></span><br><span class="line">    tim = TIM_GetCounter(TIM4); <span class="comment">// 获取TIM4当前计数值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计算距离：</span></span><br><span class="line">    <span class="comment">// tim + overcount*63336 是总计数（含溢出）</span></span><br><span class="line">    <span class="comment">// 1.0/72000000.0 是时钟周期（TIM4时钟为72MHz）</span></span><br><span class="line">    <span class="comment">// 340.0/2 是声波单程传播距离（声速340m/s，往返所以除以2）</span></span><br><span class="line">    <span class="comment">// *100 是单位相关的转换（如转换为cm等）</span></span><br><span class="line">    length = <span class="number">100</span> * (tim + overcount * <span class="number">63336</span>) * (<span class="number">1.0</span> / <span class="number">72000000.0</span>) * <span class="number">340.0</span> / <span class="number">2</span>;</span><br><span class="line">    sum += length; <span class="comment">// 累加本次距离值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 重置定时器和溢出计数，为下一次测量做准备</span></span><br><span class="line">    TIM4-&gt;CNT = <span class="number">0</span>;</span><br><span class="line">    overcount = <span class="number">0</span>;</span><br><span class="line">    delay_ms(<span class="number">100</span>); <span class="comment">// 延时稳定，避免频繁触发</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量i是记录这是第几次测量距离了，因为超声波测距只能测个大体的距离，不是很准，所以要采用多次测量取平均数的方法，测五次取平均（这就是均值滤波）。</p><p>下一句又是一个while循环，程序一直卡在while循环里不断检测echo口的电平，如果echo是高电平，循环就一直进行，换句话说，一旦检测到echo口变低，说明返回的超声波已经接收到了，就跳出循环，进行下一句：</p><p>TIM_Cmd(TIM4,DISABLE);//关闭定时器，计数器也会停止计数。</p><p>使用TIM_GetCounter函数得到定时器4计数器目前的值，这句代码与：</p><p>tim=TIM4-&gt;CNT; 的作用是一模一样的，或者说完全是一样的，因为go to definition一下TIM_GetCounter函数就知道了。</p><p>之后是一个长公式，将结果存到变量length中，这个公式就是上文中的测距公式，这里解释一下该公式：</p><p>首先看定时器4，</p><p>```c<br>TIM4_Init(65536-1,0);</p><p>psc=1-1=0，所以定时器4的一个计数频率是1/72000000秒。</p><p>其次，推理可得：在echo变高电平到echo变低电平这期间，计数器清零了多少次，也就是经过了多少次定时器中断，那么overcount就等于几，tim+overcount*65536就是定时器这段时间总共计了多少个数。</p><p>综上，高电平时间=总计数值<em>计数周期= (tim+overcount</em>65536)*( 1/72000000)</p><p>其他的公式量参考下面的公式：</p><p><strong>测量距离=(高电平时间*声速)/2</strong></p><p>最后测量的距离单位是cm。初中数学题，请认真推导，我不答疑初中数学题。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——循迹小车之红外寻迹传感器</title>
      <link href="/2023/09/01/lesson-1-9/"/>
      <url>/2023/09/01/lesson-1-9/</url>
      
        <content type="html"><![CDATA[<h1 id="八、循迹小车之红外寻迹传感器"><a href="#八、循迹小车之红外寻迹传感器" class="headerlink" title="八、循迹小车之红外寻迹传感器"></a>八、循迹小车之红外寻迹传感器</h1><p>本节我们还是不讲单片机，再讲一个传感器的使用。</p><p>在各种比赛中，我们总会看到下图这种顺着黑线走的小车，我们称之为“寻迹小车”，大家第一次看到它应该会觉得很神奇。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/f9285b28a9324c7a.png" alt="img"></p><p>想要做出上图这种寻迹小车，需要的材料和技术有：</p><p><strong>小车结构设计**</strong>+<strong><strong>电机控制</strong></strong>+<strong><strong>红外寻迹传感器</strong></strong>+<strong>**PID算法</strong></p><p>这四个东西，电机控制和pid算法都在本章后面讲。</p><p>小车结构设计可以通过购买：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/ca644c5fe4b7fe52.png" alt="img"></p><p>tb搜索“小车车模”，即可买到上面这种带着电机的小车模型，省下了很多结构设计的任务。</p><p>那本节就讲红外寻迹传感器。</p><p>红外寻迹传感器是我们做寻迹小车的必备传感器，红外寻迹传感器的安装方法如下图所示：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/8ed59196f64484bf.png" alt="img"></p><p>用不同高度的铜柱和或者塑料柱，以及螺栓和螺母去固定住寻迹传感器，并且寻迹传感器距离地面5mm左右。寻迹模块一定保持水平！不能歪了！</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/7d70796c12259c1c.png" alt="img"></p><p>本次实验效果：通过<strong>五路红外循迹传感器</strong>实时的五种状态，舵机分别旋转至五个不同角度。</p><p>本次实验只是为了学会使用寻迹传感器，并使用舵机旋转这种比较明显的现象去做演示。实际的寻迹小车是使用寻迹传感器来控制电机的。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/256e3b0f5cfe7cde.png" alt="img"></p><p><strong>本次实验接线表：</strong></p><div class="table-container"><table><thead><tr><th>红外循迹VCC</th><th>单片机3.3V口</th></tr></thead><tbody><tr><td>红外循迹GND</td><td>单片机GND口</td></tr><tr><td>红外循迹OUT1</td><td>PA4</td></tr><tr><td>红外循迹OUT2</td><td>PA5</td></tr><tr><td>红外循迹OUT3</td><td>PA6</td></tr><tr><td>红外循迹OUT4</td><td>PA7</td></tr><tr><td>红外循迹OUT5</td><td>PB0</td></tr><tr><td>舵机VCC</td><td>单片机3.3V口</td></tr><tr><td>舵机GND</td><td>单片机GND口</td></tr><tr><td>舵机SIG</td><td>PA8</td></tr></tbody></table></div><p>由于红外寻迹传感器可以使用3.3V供电，Jlink提供的电压是3.3V，所以使用Jlink给整体电路供电即可。</p><p><strong>红外循迹传感器的原理：</strong></p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/78148ae273b5e8d0.png" alt="img"></p><p>五路红外传感器，那就是上图这个长条形的传感器模块上面集成了五个单独的红外传感器。</p><p>五路中的每一路红外传感器都由一个红外发射管和一个红外接收管组成。</p><p>红外发射管不断发射红外线，红外接收管不断接收是否有红外线反射回来。</p><p>当红外线没有被反射回来，红外接收管关断，此时模块的输出端为<strong>低电平</strong>。</p><p>当红外线被反射回来，红外接收管导通，此时对应的输出端就是<strong>高电平</strong>。</p><p>什么叫红外线被反射回来呢？因为寻迹模块是水平向下放置的，所以红外线是垂直地面向下发射的，然后会被水平的地面反方向反射回来：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/a79181851eda93af.png" alt="img"></p><p>红外线能不能被反射回来，取决于地面的颜色、材料等。</p><p>如果我们想让红外线尽可能少反射回来，那就是黑色地面最合适，众所周知，黑色的吸收光的能力最强，所以循迹小车循的黑线就是：黑色电工胶带：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/b6817afa6881477c.png" alt="img"></p><p>而且背景地板一定要选择足够白的地板，因为白色的反射光的能力最强。一般的大理石地板可能还是会反射不充足，还要把寻迹赛道铺上纯白色的背景。</p><p>纯白色地面上，用黑色胶带作为循迹路线。</p><p><strong>循迹的原理：</strong></p><p>我们用的五路寻迹模块是五个上述的传感器平行排列的，把传感器装在小车最前面，像是扫雷一样探测前方的寻迹路线。</p><p>我用黑色钳子代替了黑线，模拟寻迹：</p><p>这五个寻迹传感器，上图，当中间这一个传感器是探测到黑线，其他四个都是白色背景时，说明小车是在寻迹路线上的，没有偏离路线；</p><p>当传感器是其他四种情况时：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/24/d6b95899d33956f9.png" alt="img"></p><p>都说明寻迹小车不同程度、不同方向偏离了寻迹路线，有偏差。</p><p>那寻迹传感器的信号，就是高低电平。</p><p>如果某个传感器检测到白色，那就输出高电平“1”；</p><p>如果某个传感器检测到黑色，那就输出低电平“0”；</p><p>所以我们需要5个IO口，分别检测五个传感器的状态。</p><p>接下来我们看代码。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="type">int</span> track_error;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    TIM1_PWM_Init(<span class="number">20000</span> - <span class="number">1</span>, <span class="number">72</span> - <span class="number">1</span>); <span class="comment">//舵</span></span><br><span class="line">    track_Init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        track_scan();</span><br><span class="line">        servo_control(track_error);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只讲一个问题：extern关键字。</p><p>extern的用处就是外部调用：比如我在track.c里定义了一个int类型的变量：</p><p>int track_err=0; </p><p>但是我想在main函数中也能直接使用这个变量。所以我们就用到了这个extern。在track.c里我们也会看见这个变量：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//B0口，循迹OUT5口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> track_error = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">track_scan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>      (OUT1 == <span class="number">0</span> &amp;&amp; OUT2 == <span class="number">1</span> &amp;&amp; OUT3 == <span class="number">1</span> &amp;&amp; OUT4 == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1 == <span class="number">1</span> &amp;&amp; OUT2 == <span class="number">0</span> &amp;&amp; OUT3 == <span class="number">1</span> &amp;&amp; OUT4 == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1 == <span class="number">1</span> &amp;&amp; OUT2 == <span class="number">1</span> &amp;&amp; OUT3 == <span class="number">0</span> &amp;&amp; OUT4 == <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1 == <span class="number">1</span> &amp;&amp; OUT2 == <span class="number">1</span> &amp;&amp; OUT3 == <span class="number">1</span> &amp;&amp; OUT4 == <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1 == <span class="number">1</span> &amp;&amp; OUT2 == <span class="number">1</span> &amp;&amp; OUT3 == <span class="number">1</span> &amp;&amp; OUT4 == <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 省略后续未完全显示的代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们发现这个变量没有定义在任何一个函数里，所以它是一个全局变量。</p><p>只有全局变量才能用extern，然后我们在main.c里，在main函数上方，也就是不在任何一个函数里，添加一句：</p><p>extern int track_error;</p><p>即可在main.c里使用track.c里的全局变量。</p><p>Main函数就是这样，除了新的track_Init函数还有while(1)里的应用函数，其余的代码我们全部介绍过。我们直接看track.c和track.h。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">track_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA | RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//A4口，循迹OUT1口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;       <span class="comment">//浮空输入</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//A5口，循迹OUT2口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;       <span class="comment">//浮空输入</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//A6口，循迹OUT3口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;       <span class="comment">//浮空输入</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//A7口，循迹OUT4口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;       <span class="comment">//浮空输入</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//B0口，循迹OUT5口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;       <span class="comment">//浮空输入</span></span><br><span class="line">    <span class="comment">// 注：截图中B0口初始化的后续GPIO_Init等操作若有，需补充，此处按显示内容提取</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>track_Init函数初始化了五个GPIO，浮空输入，用于检测循迹传感器的OUT1-OUT5。</p><p>浮空输入是我们用到的第四个GPIO模式了，之前介绍了推挽输出、上拉输入、复用推挽输出，这次第四个叫做浮空输入。</p><p>浮空输入比上拉输入更简单，浮空输入完全取决于外部输入信号，外部输入是1那就是1，外部输入是0就是0，外部输入是高阻态那就电平不确定。</p><p>track.h中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">运行</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUT1 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_4)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUT2 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_5)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUT3 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_6)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUT4 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_7)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OUT5 GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0)</span></span><br></pre></td></tr></table></figure><p>库函数GPIO_ReadInputDataBit的作用就是读取一个IO口电平的高低，高电平即1，低电平即0，这个函数在按键那一节就讲过。</p><p>#define OUT1 GPIO_ReadInputDataBit(GPIOA,GPIO_Pin_4)</p><p>#define OUT1 PAin(4)</p><p>以上两句是功能完全一样的，两种不同写法。</p><p>然后看track.c中的track_scan函数和servo_control函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">track_Init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">track_scan</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">servo_control</span><span class="params">(<span class="type">int</span> t_error)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">track_scan</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>      (OUT1==<span class="number">0</span> &amp;&amp; OUT2==<span class="number">1</span> &amp;&amp; OUT3==<span class="number">1</span> &amp;&amp; OUT4==<span class="number">1</span> &amp;&amp; OUT5==<span class="number">1</span>) track_error=<span class="number">-2</span>;   <span class="comment">//01111</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1==<span class="number">1</span> &amp;&amp; OUT2==<span class="number">0</span> &amp;&amp; OUT3==<span class="number">1</span> &amp;&amp; OUT4==<span class="number">1</span> &amp;&amp; OUT5==<span class="number">1</span>) track_error=<span class="number">-1</span>;   <span class="comment">//10111</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1==<span class="number">1</span> &amp;&amp; OUT2==<span class="number">1</span> &amp;&amp; OUT3==<span class="number">0</span> &amp;&amp; OUT4==<span class="number">1</span> &amp;&amp; OUT5==<span class="number">1</span>) track_error= <span class="number">0</span>;   <span class="comment">//11011</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1==<span class="number">1</span> &amp;&amp; OUT2==<span class="number">1</span> &amp;&amp; OUT3==<span class="number">1</span> &amp;&amp; OUT4==<span class="number">0</span> &amp;&amp; OUT5==<span class="number">1</span>) track_error= <span class="number">1</span>;   <span class="comment">//11101</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (OUT1==<span class="number">1</span> &amp;&amp; OUT2==<span class="number">1</span> &amp;&amp; OUT3==<span class="number">1</span> &amp;&amp; OUT4==<span class="number">1</span> &amp;&amp; OUT5==<span class="number">0</span>) track_error= <span class="number">2</span>;   <span class="comment">//11110</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">servo_control</span><span class="params">(<span class="type">int</span> t_error)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_SetCompare1(TIM1,<span class="number">1500</span>+<span class="number">500</span>*t_error);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>track_scan函数就是用于计算寻迹的偏移误差。</p><p>OUT3就是五路寻迹最中间那一路，所以在第三种情况的时候误差值track_error=0。</p><p>servo_control函数就是控制舵机的执行函数，根据输入的误差值确定舵机转到什么位置。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——OLED显示</title>
      <link href="/2023/09/01/lesson-1-8/"/>
      <url>/2023/09/01/lesson-1-8/</url>
      
        <content type="html"><![CDATA[<h1 id="七、OLED显示"><a href="#七、OLED显示" class="headerlink" title="七、OLED显示"></a>七、OLED显示</h1><p>实验效果：</p><p>按下key1，OLED屏幕如下显示：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/66a19ab164f0d661.png" alt="img"></p><p>随便显示点东西：“You have 100 yuan!”</p><p>按下key2，屏幕如下显示：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/9ebc2d4fb688335b.png" alt="img"></p><p><strong>本次实验接线表</strong></p><div class="table-container"><table><thead><tr><th>OLED_GND</th><th>单片机GND口</th></tr></thead><tbody><tr><td>OLED_VCC</td><td>单片机3.3V口</td></tr><tr><td>OLED_SCL</td><td>PA6</td></tr><tr><td>OLED_SDA</td><td>PA7</td></tr><tr><td>按键模块K1</td><td>PB4</td></tr><tr><td>按键模块K2</td><td>PB5</td></tr><tr><td>按键模块GND</td><td>单片机GND口</td></tr></tbody></table></div><p>本次实验，最大的目的是让我们掌握一个得力的外设工具：OLED屏幕。</p><p>本节没有任何新的单片机外设方面以及库函数方面的讲解，也就是单片机内外设都是以前讲过的，没有新东西。</p><p><strong>注意：</strong></p><p>Oled屏幕的底层驱动函数涉及iic通信协议，这个技术在本章后面会讲，但是现在还不是讲iic通信的时候，所以本节就更不会讲什么oled点阵图的生成原理，这一节非常简单，只有一个目的：</p><p><strong>会用oled显示信息。</strong>不要忘了第一章的初衷是做平衡小车，不要逮到什么就使劲深钻，根本学不完。</p><p>首先看本次添加的.c文件和.h文件， OLED屏幕的库函数，复制过来直接使用即可。</p><p>一共有三个新文件，其中oledfont.h里存放了一个很长很长的大数组，里面存了oled的ASCII字库：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">unsigned</span> <span class="type">char</span> F6x8[][<span class="number">6</span>] =</span><br><span class="line">&#123;</span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// sp</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x2f</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// !</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="comment">// &quot;</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span>, <span class="number">0x7f</span>, <span class="number">0x14</span>, <span class="comment">// #</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x2a</span>, <span class="number">0x7f</span>, <span class="number">0x2a</span>, <span class="number">0x12</span>, <span class="comment">// $</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x62</span>, <span class="number">0x64</span>, <span class="number">0x08</span>, <span class="number">0x13</span>, <span class="number">0x23</span>, <span class="comment">// %</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x49</span>, <span class="number">0x55</span>, <span class="number">0x22</span>, <span class="number">0x50</span>, <span class="comment">// &amp;</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// &#x27;</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1c</span>, <span class="number">0x22</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="comment">// (</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x22</span>, <span class="number">0x1c</span>, <span class="number">0x00</span>, <span class="comment">// )</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x14</span>, <span class="comment">// *</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x3E</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="comment">// +</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA0</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="comment">// ,</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="comment">// -</span></span><br><span class="line">    <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x60</span>, <span class="number">0x60</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="comment">// .</span></span><br><span class="line">    <span class="comment">// 此处可根据实际完整代码补充后续内容</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>这里面就包含了几乎全部的ASCII字符，但是并没有汉字。因为汉字有几万个，如果添加汉字字库内存就占太大了，添加汉字字库在很久之后，我们详细讲底层原理的时候会讲到。</p><p>之后我们看程序：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 a;</span><br><span class="line">    <span class="type">int</span> your_money = <span class="number">100</span>;</span><br><span class="line">    <span class="type">char</span> text[<span class="number">20</span>];</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    KEY_Init();</span><br><span class="line">    OLED_Init();</span><br><span class="line">    OLED_Clear();    <span class="comment">// 清屏</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        a = KEY_Scan(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a == KEY1_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            OLED_Clear(); <span class="comment">// 清屏</span></span><br><span class="line">            <span class="built_in">sprintf</span>(text, <span class="string">&quot;you have %d yuan!&quot;</span>, your_money);</span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">2</span>, (u8 *)text, <span class="number">8</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a == KEY2_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            OLED_Clear(); <span class="comment">// 清屏</span></span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">0</span>, (u8 *)<span class="string">&quot;Hello!&quot;</span>, <span class="number">16</span>);</span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">2</span>, (u8 *)<span class="string">&quot;This is small size.&quot;</span>, <span class="number">8</span>);</span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">3</span>, (u8 *)<span class="string">&quot;HAHAHA!!!&quot;</span>, <span class="number">8</span>);</span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">4</span>, (u8 *)<span class="string">&quot;The big size.&quot;</span>, <span class="number">16</span>);</span><br><span class="line">            OLED_ShowString(<span class="number">8</span>, <span class="number">6</span>, (u8 *)<span class="string">&quot;last row&quot;</span>, <span class="number">16</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面多了几个oled字样的函数。</p><p>作为初学者，我们现在不需要详细看oled的函数，只需要会使用即可。</p><p>OLED_Init是oled初始化函数，我们最后再看。</p><p>首先看OLED_Clear函数，它的作用就是清屏，让屏幕中什么都不显示：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/8c7d23769296eb19.png" alt="img"></p><p>为什么左边有一道杂光呢？因为买的屏幕比较劣质。。。正常应该是全黑。</p><p>说到这里，你购买此手册支付的时候应该在哪里见过陶喆吧，他是作者的偶像hhh，作者也很喜欢人文社科。如果你支付时没见过陶吉吉，那你应该是买到盗版了。</p><p>先看按下按键2的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a==KEY2_PRESS)</span><br><span class="line">&#123;</span><br><span class="line">    OLED_Clear();<span class="comment">//清屏</span></span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">0</span>,(u8 *)<span class="string">&quot;Hello!&quot;</span>,<span class="number">16</span>);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">2</span>,(u8 *)<span class="string">&quot;This is small size.&quot;</span>,<span class="number">8</span>);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">3</span>,(u8 *)<span class="string">&quot;HAHAHA!!!&quot;</span>,<span class="number">8</span>);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">4</span>,(u8 *)<span class="string">&quot;The big size.&quot;</span>,<span class="number">16</span>);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">6</span>,(u8 *)<span class="string">&quot;last row&quot;</span>,<span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先清屏。（为什么要先清屏？因为不清屏的话屏幕上一次显示的东西并不会去除，显示会重叠。）</p><p>OLED_ShowString这个函数就是显示字符串，最常用。</p><p>四个参数的意思分别是：OLED_ShowString（x，y，内容，字体大小）</p><p>首先x和y代表坐标值：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/23/b968a8aa43a8c400.png" alt="img"></p><p>我买的屏幕大小是0.96寸，分辨率是128*64，所以x的范围就是0-127。</p><p>但是y的范围却是{0,1,2,3,4,5,6,7}或{0,2,4,6}。为什么y的范围不是0~63呢？</p><p>因为文字符号都是有高度的，比如我们紧贴着左上角写第一行文字，文字的高度是8个像素，那么写下一行就要从高度8开始了，y方向只有64个像素，只能塞下八行，所以y不妨理解为行数。</p><p>如果字体高度为8，行数的范围是0到7。</p><p>如果文字高度为16，那只能塞下四行，对应的行数就只有0,2,4,6这四个值。</p><p>第三个参数是内容，内容即你要显示的字符串，注意输入格式：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">OLED_ShowString(<span class="number">8</span>,<span class="number">0</span>,(u8 *)<span class="string">&quot;Hello!&quot;</span>,<span class="number">16</span>);</span><br></pre></td></tr></table></figure><p>注意上图这个转换。 </p><p>字符串前面要加个(u8 *)，为啥要这样本节最后说。</p><p>最后第四个参数是字体大小，只有8和16两个选择，因为oledfont.h里的字库就只有高度为8和16的两种字模。</p><p>最后来看看OLED_Init函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">OLED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 | GPIO_Pin_6;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz; <span class="comment">// 速度</span></span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);           <span class="comment">// 初始化GPIOA</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是接oled屏幕上SCL和SDA的两个IO，推挽输出。</p><p>而且SCL和SDA这两根线对应的IO口是可以随意更换的：你只要把OLED_Init里的GPIO初始化换成任意其他的两个IO，然后打开oled.h：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SCLK_Clr() GPIO_ResetBits(GPIOA,GPIO_Pin_6)<span class="comment">//SCL IIC接口的时钟信号</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SCLK_Set() GPIO_SetBits(GPIOA,GPIO_Pin_6)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SDIN_Clr() GPIO_ResetBits(GPIOA,GPIO_Pin_7)<span class="comment">//SDA IIC接口的数据信号</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> OLED_SDIN_Set() GPIO_SetBits(GPIOA,GPIO_Pin_7)</span></span><br></pre></td></tr></table></figure><p>把上图这两个宏定义改成你指定的IO号即可。</p><p>注意OLED_SCLK对应着SCL，OLED_SDIN对应着SDA。</p><p>然后我们看一下main函数里，key1按下的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(a==KEY1_PRESS)</span><br><span class="line">&#123;</span><br><span class="line">    OLED_Clear();<span class="comment">//清屏</span></span><br><span class="line">    <span class="built_in">sprintf</span>(text,<span class="string">&quot;you have %d yuan!&quot;</span>,your_money);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">2</span>,(u8 *)text,<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="sprintf函数"><a href="#sprintf函数" class="headerlink" title="sprintf函数"></a>sprintf函数</h2><p>这里主要是让大家学会一个重要的C标准库的函数：sprintf函数。</p><p>想用sprintf函数，我们需要#include “stdio.h”：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br></pre></td></tr></table></figure><p>Sprintf的作用就是：</p><p>比如我用温度传感器测到一个float类型的温度值t，t=23.6，</p><p>那么我想用oled显示这样一段话：“Temperature is 23.6 oC.”</p><p>但是OLED_ShowString函数只能输入字符串呀，我怎么把这个float类型的23.6插入字符串里？当然就是用sprintf。</p><p>利用sprintf可以轻松处理一个的字符串，<strong>让一些变量值插入字符串</strong>。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">char</span> text[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(a==KEY1_PRESS)</span><br><span class="line">&#123;</span><br><span class="line">    OLED_Clear();<span class="comment">//清屏</span></span><br><span class="line">    <span class="built_in">sprintf</span>(text,<span class="string">&quot;you have %d yuan!&quot;</span>,your_money);</span><br><span class="line">    OLED_ShowString(<span class="number">8</span>,<span class="number">2</span>,(u8 *)text,<span class="number">8</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上图中此函数的作用就是将your_money变量的值插入字符串，并且将加工好的字符串赋值给text变量，text[20]是一个字符串。</p><p>接下来我们介绍OLED_ShowString 函数里那个(u8 <em>)的意思，注意！如果你想理解这里，你的c语言就要继续学习了，我们c语言的水平不能只是停留在基础语法了，之前空下的<em>*c语言的指针你就可以详细去学了</em></em>：</p><p>text[20]是一个char类型的字符串，那代码中单写一个数组名text，无后缀，那text就是这个字符串的首地址。(u8 <em>)text的意思：先执行</em>操作，取字符串的内容，得到完整的字符串；再(u8)强制转换，把char类型的字符串（字符数组）转换为u8类型的数组。并且之前我说，你可以把u8当int来用，比如u8 a=1;  u8 b=2;c=a+b; 那c=3。这里你还是这样理解即可，u8当int用，但是这里我会明确说，u8的详细含义我会在本章的iic通信这一节讲，学过iic通信这一节，oled库函数你也都能看懂了。</p><p>学完这一节，你的平衡小车上就可以装个屏幕了，显示你想看的信息。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——仿真&amp;实物debug</title>
      <link href="/2023/09/01/lesson-1-7/"/>
      <url>/2023/09/01/lesson-1-7/</url>
      
        <content type="html"><![CDATA[<h1 id="六、仿真-amp-实物debug"><a href="#六、仿真-amp-实物debug" class="headerlink" title="六、仿真&amp;实物debug"></a>六、仿真&amp;实物debug</h1><p>工欲善其事，必先利其器。（第一次强调）</p><p><strong>注意！本节课有视频！这一节的图文没那么重要了，文字不看都可以，看视频吧！</strong></p><p>这节讲了如何做pwm生成的仿真simulate，但是没有实际的带你们debug。</p><p>看的时候一定实操先完成仿真，看到下面这个图的波形，然后再改成debug模式重新尝试debug！！</p><p>Debug非常非常重要，后期你写代码查错就全靠debug了，没有debug就像在摸黑拆炸弹。</p><p>只能用上面这种极端的图来吸引你们的眼球，如果说PWM、定时器中断、跑马灯这些是做一道菜的原料，那这一节的debug就是第一件“厨具”。</p><p>没有厨具你做个锤子菜！</p><p><strong>本节文字部分</strong>（看视频就好了，文字可以不看了）：</p><p>我们通过keil软件的程序仿真功能，进行一些逻辑分析，数值查看与波形检查。</p><p>首先我们打开keil的魔术棒，对以下界面进行设置，与图中完全一样即可。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/3206fa1a766e2697.png" alt="img"></p><p>上图蓝色部分Xtal为STM32使用外部晶振的频率，我们要改为8MHz，因为我们使用的STM32最小系统板上使用的外部晶振频率一般为8MHz：</p><p>晶振即这个银白色的椭圆，其震荡的物理原理如果感兴趣的话请自学。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/e1566ea4ac5162a4.png" alt="img"></p><p>可以看见上面刻着8.000，即震荡频率是8MHz。</p><p>晶振用于给STM32提供主时钟频率，比如STM32F1系列的72MHz，就是8MHz九倍频之后得到的，具体为什么是8MHz九倍频，第三章就知道了，现在不用管就行了，你现在只需要记准确最终的主频是72Mhz即可。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/de8af2137ca786a7.png" alt="img"></p><p>上面这一页要配置得跟图片一模一样。</p><p>注意勾选。</p><p><strong>关于DEBUG的补充说明：</strong></p><p>注意！这里我们仿真选的是左边的黑点，simulator是仿真器的意思，仿真仿真，也就是假装是真的，所以左边的仿真只能调试代码逻辑，还有检查外设功能代码是否正常；</p><p>而真正的debug就要勾选右边的黑点了，如下图，使用调试器jlink进行真实的调试。</p><p>Debug非常非常重要，以后做项目90%以上的代码逻辑问题都是要通过debug解决的。</p><p>配置完毕后，看本次的代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    KEY_Init();</span><br><span class="line">    TIM1_PWM_Init(<span class="number">20000</span> - <span class="number">1</span>, <span class="number">72</span> - <span class="number">1</span>);</span><br><span class="line">    TIM_SetCompare1(TIM1, <span class="number">5000</span>);</span><br><span class="line">    TIM_SetCompare2(TIM1, <span class="number">10000</span>);</span><br><span class="line">    TIM_SetCompare3(TIM1, <span class="number">15000</span>);</span><br><span class="line">    TIM_SetCompare4(TIM1, <span class="number">19000</span>);</span><br><span class="line">    <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">20</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        a++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没有新东西。</p><p>不用插JLINK和单片机。</p><p>首先我们先进行逻辑分析：</p><p>先编译一下。然后点击放大镜开始debug。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/80cf48f7b9d26b37.png" alt="img"></p><p>页面变成了这样。现在程序是不运行的，卡在最初始的位置（黄蓝箭头的位置）。</p><p>开始吧，我们点击Set up按钮：</p><p>这个按钮的作用就是执行黄蓝箭头所指的这一句程序，也就是上图；延时的初始化，点击之后变成下图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/c7e4f4c1a397a0ac.png" alt="img" style="zoom: 50%;" /></p><p>也就是成功执行到了下一步。</p><p>接下来我们点这个按钮：其作用是进到这个函数里面去，也就是进到目前箭头所指的LED_Init中：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/3b1363f778cea002.png" alt="img" style="zoom:33%;" /></p><p>成功进入。下一个按钮就是跳出目前这个函数</p><p>跳出成功。</p><p>好，现在我们设个断点：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/45e5b18e908c1b18.png" alt="img"></p><p>点击图片上红圆圈这个地方就可以设一个断点，这一句涂上一个红圆圈。</p><p>接下来我们点 Run(F5)：</p><p>Run，顾名思义，按原计划执行程序，但是遇到断点会停下来。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/b983ef5eeeed0e61.png" alt="img"></p><p>按了之后如上图，程序并没有停下来，说明程序未经过断点。（原因显然）</p><p>这时我们 Stop</p><p>先按下这个圆叉，再按下 Reset</p><p>reset，复位，程序便又回到了起点。</p><p>回到main函数中，我们把断点取消，换个位置：再点击run按钮。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/b82f9829f79278b9.png" alt="img" style="zoom:50%;" /></p><p>程序卡在这里了！成功。</p><p>第二步，我们进行数值查看。</p><p>我们想看变量a的值随着时间是怎么变化的。</p><p>于是我们右击变量a：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/21/b167a7694c13e6ed.png" alt="img" style="zoom: 50%;" /></p><p>第三行：Add ‘a’ to…</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/5fe25bbac1d28c4d.png" alt="img"></p><p>点击Watch1。</p><p>变量a出现在了右下角。</p><p>最后点击左上角view：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/e0be3ee893d657d1.png" alt="img"></p><p>勾选最后一项。</p><p>然后run。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/a595d2289a84b98a.png" alt="img"></p><p>看到右下角a的值不断变大。数值查看成功。</p><p>最后是波形检查，我们检查定时器1生成的四路PWM波形。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/fbbca81a873f317b.png" alt="img"></p><p>点击debug。</p><p>点击逻辑分析仪。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/62555a337029d164.png" alt="img"></p><p>点击左上角setup</p><p>点击New，创建新的观察口。</p><p>定时器1的四路PWM四个口分别是A8 A9 A10 A11，</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/5c225e44f97b5ba1.png" alt="img"></p><p>输入PORTA.8，注意全部大写。其他以此类推。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/614aa90a3d00b56a.png" alt="img"></p><p>然后分别右击四路波形输出，改成bit（高低数字电平）。改完如右边所示。</p><p>RUN!</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/22/971669753b3bb60b.png" alt="img"></p><p>波形很完美，很正确。</p><p>结束。</p><p>注意：退出仿真也是点那个debug按钮，只不过退出之前你最好是取消所有的断点，否则keil可能卡住。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——PWM控制舵机</title>
      <link href="/2023/09/01/lesson-1-6/"/>
      <url>/2023/09/01/lesson-1-6/</url>
      
        <content type="html"><![CDATA[<h1 id="五、PWM控制舵机"><a href="#五、PWM控制舵机" class="headerlink" title="五、PWM控制舵机"></a>五、PWM控制舵机</h1><p>舵机是我们接触到的第一个会动的器件，舵机可以做机械臂、做机器人的各种活动关节等，而且舵机的单片机控制非常简单。</p><p>实验效果：按键模块按下key1，舵机快速旋转至0°位置；按下key2，舵机快速旋转至180°位置。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/b0cd3fca3b400187.png" alt="img"></p><p>首先使用Jlink给stm32供电，实验接线：</p><div class="table-container"><table><thead><tr><th>舵机红色线</th><th>单片机3.3V口</th></tr></thead><tbody><tr><td>舵机黑色线</td><td>单片机GND口</td></tr><tr><td>舵机黄色线</td><td>PA8</td></tr><tr><td>按键模块K1</td><td>PB4</td></tr><tr><td>按键模块K2</td><td>PB5</td></tr><tr><td>按键模块GND</td><td>单片机GND口</td></tr></tbody></table></div><p>PWM（脉冲宽度调制Pulse-width modulation）以及占空比等概念是学前班学习arduino阶段就要求自学的东西，但是当时我们对PWM的认知还是停留在表层，所以先精进一下PWM、占空比相关的内容：</p><p>之前我们自学到的东西就是使用PWM控制普通模拟舵机，普通模拟舵机需要用周期为20ms的PWM波控制，PWM的高电平时间从0.5ms~2.5ms分别代表舵机旋转至0~180°位置，假如我要让舵机转到45°位置，需要让PWM高电平时间为1ms，也就是占空比是(1/20)*100%=5%</p><p>学前班就学了上面这些东西。那么这一节，我们将深入下去，PWM的具体产生方法是什么？我们实际应该怎么让STM32输出PWM？</p><p>首先PWM并不是一个单片机外设的名字，PWM是上一节讲的<strong>定时器</strong>的延伸，PWM是利用定时器做出的一种“<strong>花活</strong>”。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/cbbf2c5fece0d28e.png" alt="img"></p><p>我们<strong>基于</strong>上一节定时器中断的图进行进一步的升级，上图很清晰地展示了定时器是怎么整出PWM波形的；</p><p>详细讲解一下：首先TIMx_ARR、TIMx_CNT都是什么意思就不再重复了，这幅图在上一节的基础上，又加了一个新参数：TIMx_CCRx。</p><p>CCR寄存器的全称是CCR(Capture/Compare Register)的缩写，即：</p><p>捕获/比较寄存器。什么又是捕获又是比较乱七八糟的？！我现在不详细解释CCR这个参数的名字是什么意思 ，直接体会它的实际用法就行了。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/cbbf2c5fece0d28e.png" alt="img"></p><p>很容易得出，PWM的频率就是计数器更新的频率，计数器更新的频率，上一节已经讲得很明白了，与TIMx_ARR和TIMx_PSC有关（arr和psc）；然后三段式得出：<strong>PWM的频率与arr和psc有关。</strong></p><p>再观察上图发现：CNT&lt;CCR时，PWM是高电平；</p><p>CNT&gt;CCR时，PWM是低电平。</p><p>所以我们就知道CCR寄存器有比较的功能！</p><p><strong>CCR寄存器确定了PWM的占空比</strong>。就这么简单。占空比英文是“duty”：</p><script type="math/tex; mode=display">duty = \frac</script><p>综上总结：</p><p>PWM的频率由arr和psc决定；</p><p>PWM的占空比由CCR决定。</p><p>好了，pwm生成原理介绍完了，我们回到舵机控制：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/3f86a49d0f74f293.png" alt="img"></p><p>一般的舵机（特指模拟舵机）有三根线，VCC，GND和SIG（signal信号）</p><p>分别是电源线，地线和信号线。</p><p>电源和地很好理解，一般市面上舵机的额定VCC都是5V，但是我们买的这个sg90舵机驱动电流特别小，因此使用3.3V也可以看到很好的效果。</p><p>所以我们本次实验接线：VCC=3.3V，接STM32F103C8T6最小系统板引脚标 “3.3”字样的口。</p><p>GND当然就接标“G”的口。</p><p>这里的SIG信号口，接的就是PWM了。那PWM从哪个口出呢？</p><p>这就要看STM32F103C8T6的芯片引脚功能图了：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/8bf89b5829211fc9.png" alt="img"></p><p>这张引脚功能图非常重要，以后我们开发项目要经常看，因为这上面标注了每个引脚常用的特殊功能，也就是上表的默认复用功能。</p><p>什么叫“复用”呢？这里解释一下：正常的IO口都受GPIO外设支配，GPIO一共有8种输入输出模式，比如之前已经见过了推挽输出和上拉输入；但是有一些外设，比如定时器输出的PWM波，pwm不属于GPIO外设，所以pwm也当然不属于GPIO 8种输入输出模式中的一种，而是属于TIM外设，所以GPIO会把对应的IO口分给TIM用，所以这个分出去的IO口既可以作普通GPIO使用，又可以作定时器的PWM输出通道使用，<strong>简称“复用”</strong>。</p><p>我们这次计划使用定时器1来输出PWM波，所以我们去上图引脚功能图找，找TIM1相关的默认复用功能：</p><p>找到这四个IO口：PA8、PA9、PA10、PA11</p><p>发现：</p><p>PA8有TIM1_CH1，定时器1的通道1；</p><p>PA9有TIM1_CH2，定时器1的通道2；</p><p>PA10有TIM1_CH3，定时器1的通道3；</p><p>PA11有TIM1_CH4，定时器1的通道4；</p><p>TIM1有四路PWM通道，分别是channel1~channel4，简称CH1~CH4。</p><p>所以定时器1的PWM就从这四个指定好的IO口输出！不可以自己指定IO口！ </p><p>且由于定时器1~定时器4都是一样使用的，所以这四个定时器 每个都能输出4路PWM，总共就是可以输出16路pwm。</p><p>再讲具体的波形产生，定时器1可以输出4路频率相同、占空比各不相同的PWM波；为什么是这样呢？我们再回到下面这个图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/cbbf2c5fece0d28e.png" alt="img"></p><p>上图中，为什么TIMx_CCRx参数，CCR后面要跟个“x”？为什么CNT和ARR后面不跟“x”？为什么不写“TIMx_ARRx”？</p><p>因为CCR是控制PWM占空比的参数呀，定时器1能输出四路占空比不同的PWM，所以就有四个CCR寄存器：TIM1_CCR1、TIM1_CCR2、TIM1_CCR3、TIM1_CCR4。</p><p>而每个定时器只有一个计数器CNT和一个自动重装载值ARR，以及一个psc。</p><p>好的，前置知识讲完了，我们看代码：</p><p>控制一个舵机只需要一路PWM，我们就选TIM1_CH1，也就是PA8口接舵机信号线SIG，但是我主要是为了更好演示库函数代码，我就把四路pwm全部输出，做演示。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 a;</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    KEY_Init();</span><br><span class="line">    TIM1_PWM_Init(<span class="number">20000</span> - <span class="number">1</span>, <span class="number">72</span> - <span class="number">1</span>); <span class="comment">//舵机的arr值为500-2500</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        a = KEY_Scan(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a == KEY1_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            TIM_SetCompare1(TIM1, <span class="number">500</span>);</span><br><span class="line">            TIM_SetCompare2(TIM1, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a == KEY2_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            TIM_SetCompare1(TIM1, <span class="number">2500</span>);</span><br><span class="line">            TIM_SetCompare2(TIM1, <span class="number">2500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟上一节相比，程序有一个新变化：多了一类不认识的函数TIM_SetComparex。我们先看TIM1_PWM_Init函数，我们使用TIM1输出PWM，TIM1_PWM_Init函数的两个形参还是跟上一节一样，是arr自动重装载值和psc预分频系数。</p><p>舵机的PWM周期必须为20ms（50Hz），所以我们先配置arr和psc这两个参数，让PWM的周期正好是20ms。</p><p>设置自动重装载值arr=20000，预分频系数psc=72：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM1_PWM_Init(<span class="number">200000</span> - <span class="number">1</span>, <span class="number">72</span> - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>则定时器自动装载一次的周期为：1/(72000000/72)*20000 = 0.02s = 20ms，符合要求。注意这里，arr设置得越大，PWM占空比的精度越高，因为：</p><script type="math/tex; mode=display">duty = \frac</script><p>公式说明了一切，如果arr只取个10，那上式分母只有10，一目了然。</p><p>然后我们打开TIM1_PWM_Init函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM1_PWM_Init</span><span class="params">(u16 arr, u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">    TIM_OCInitTypeDef  TIM_OCInitStructure;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);<span class="comment">//</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置该引脚为复用输出功能,输出TIM1 CH1的PWM脉冲波形</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; <span class="comment">//TIM1_CH1</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//复</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; <span class="comment">//TIM1_CH2</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//复</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10; <span class="comment">//TIM1_CH3</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//复</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11; <span class="comment">//TIM1_CH4</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//复</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">//设置在下一个更新事件</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Prescaler = psc; <span class="comment">//设置用来作为TIMx时</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">//设置时钟分割:TD</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="comment">//</span></span><br><span class="line">    TIM_TimeBaseInit(TIM1, &amp;TIM_TimeBaseStructure); <span class="comment">//根据TIM_Time</span></span><br><span class="line"></span><br><span class="line">    TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; <span class="comment">//选择定时器</span></span><br><span class="line">    TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">    TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>; <span class="comment">//设置待装入捕获比较寄存器的</span></span><br><span class="line">    TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">//输</span></span><br><span class="line">    TIM_OC1Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">    TIM_OC2Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">    TIM_OC3Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">    TIM_OC4Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line">    TIM_CtrlPWMOutputs(TIM1, ENABLE);     <span class="comment">//MOE 主输出使能</span></span><br><span class="line"></span><br><span class="line">    TIM_OC1PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">//CH1预装载</span></span><br><span class="line">    TIM_OC2PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">//CH1预装载</span></span><br><span class="line">    TIM_OC3PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">//CH1预装载</span></span><br><span class="line">    TIM_OC4PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">//CH1预装载</span></span><br><span class="line"></span><br><span class="line">    TIM_ARRPreloadConfig(TIM1, ENABLE); <span class="comment">//使能TIMx在ARR上的预装载</span></span><br><span class="line"></span><br><span class="line">    TIM_Cmd(TIM1, ENABLE);  <span class="comment">//使能TIM1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数很长。</p><p>首先我们与上一节定时器中断的TIM配置函数作对比，发现：</p><p>少了中断服务函数TIMx_IRQHandler，也没有了NVIC的相关配置。</p><p>main函数内也少了中断优先级分组的这一句：</p><p>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</p><p>因为生成个PWM用不到中断，没有中断，NVIC就用不到，不需要调用。</p><p>还发现：TIM_OCInitTypeDef  TIM_OCInitStructure;多了这个新的结构体，多了很多OC字样的配置，以及几个新函数。</p><p>对此的解释：</p><p>TIM_OCInitTypeDef 是定时器输出通道配置结构体，带OC字样的都是其相关的配置，OC（Output Channel），输出通道。</p><p>我们把代码分成几个部分来看：</p><p>首先：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM1_PWM_Init</span><span class="params">(u16 arr, u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</span><br><span class="line">    TIM_OCInitTypeDef  TIM_OCInitStructure;</span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);<span class="comment">//</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA , ENABLE);</span><br></pre></td></tr></table></figure><p>三个结构体：GPIO配置、定时器配置、定时器输出通道配置。</p><p>两个RCC外设时钟使能：使能TIM1和GPIOA的外设。TIM1和GPIOA都在APB2总线上，要看外设在哪个总线，找下面这个图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/0c7a7b1329f384f9.png" alt="img"></p><p>接着相应的IO使能： </p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; <span class="comment">//TIM1_CH1</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9; <span class="comment">//TIM1_CH2</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10; <span class="comment">//TIM1_CH3</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11; <span class="comment">//TIM1_CH4</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;  <span class="comment">//复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure><p>A8~A11，TIM1的四个PWM通道。</p><p>注意GPIO模式：GPIO_Mode_AF_PP这是复用推挽输出模式，这是我们见到的第三个GPIO输入输出模式；</p><p>推挽输出和复用推挽输出的不同在于：</p><p>推挽输出是GPIO自己通过函数控制电平高低，比如PCout(13)=1;</p><p>复用推挽输出是GPIO把电平高低的控制权给了外设，这里就是给了TIM1，GPIO不管了，电平高还是低让TIM1自己去控制。</p><p>然后是定时器参数配置：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_TimeBaseStructure.TIM_Period = arr; <span class="comment">// 设置在下一个更新事件相关周期</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc; <span class="comment">// 设置TIMx的预分频值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>; <span class="comment">// 设置时钟分割</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_TimeBaseInit(TIM1, &amp;TIM_TimeBaseStructure); <span class="comment">// 根据配置初始化TIM1时间基</span></span><br></pre></td></tr></table></figure><p>没有可说的。</p><p>然后是输出通道参数配置：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1; <span class="comment">// 选择定时器PWM模式1</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;</span><br><span class="line">TIM_OCInitStructure.TIM_Pulse = <span class="number">0</span>; <span class="comment">// 设置待装入捕获比较寄存器的值</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High; <span class="comment">// 输出极性配置</span></span><br><span class="line">TIM_OC1Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC2Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC3Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC4Init(TIM1, &amp;TIM_OCInitStructure);</span><br></pre></td></tr></table></figure><p>第一个参数TIM_OCMode，我们配置为PWM模式1：TIM_OCMode_PWM1。</p><p>我们go to definition 一下TIM_OCMode_PWM1：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_OCMode_PWM1                  ((uint16_t)0x0060)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_OCMode_PWM2                  ((uint16_t)0x0070)</span></span><br></pre></td></tr></table></figure><p>发现有两个PWM模式：PWM模式1和PWM模式2</p><p>PWM模式1：</p><p>递增计数时，当TIMx_CNT（计数值）&lt;TIMx_CCR（捕获/比较值）时，输出为有效电平，否则为无效电平。</p><p>PWM模式2：</p><p>递增计数时，当TIMx_CNT（计数值）&lt; TIMx_CCR（捕获/比较值）时，输出为无效电平，否则为有效电平。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/20/1994e8034ab958a5.png" alt="img"></p><p>什么是有效/无效电平呢？我们要结合第四个参数TIM_OCPolarity一起看，TIM_OCPolarity是“输出极性”，设置的值是TIM_OCPolarity_High，也就是“输出极性高”，同样也有输出极性低：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_OCPolarity_High           ((uint16_t)0x0000)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_OCPolarity_Low            ((uint16_t)0x0002)</span></span><br></pre></td></tr></table></figure><p>输出极性高：有效电平为高电平。</p><p>输出极性低：有效电平为低电平。</p><p>所以，实际输出的电平是由输出极性和电平是否有效共同决定的。</p><p>第二个参数TIM_OutputState是输出模式是否开启，当然要开启才能输出PWM，参数填TIM_OutputState_Enable。</p><p>第三个参数是TIM_Pulse，意思是TIM_CCRx的初始值，一般我们都统一设为0。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_OC1Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC2Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC3Init(TIM1, &amp;TIM_OCInitStructure);</span><br><span class="line">TIM_OC4Init(TIM1, &amp;TIM_OCInitStructure);</span><br></pre></td></tr></table></figure><p>然后上面这四句就是输出通道1~4的配置参数上传函数。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_CtrlPWMOutputs(TIM1, ENABLE);  <span class="comment">// MOE 主输出使能</span></span><br></pre></td></tr></table></figure><p>然后这一句可以不管，写上即可，然后跳过。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_OC1PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">// CH1预装载使能</span></span><br><span class="line">TIM_OC2PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">// CH2预装载使能</span></span><br><span class="line">TIM_OC3PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">// CH3预装载使能</span></span><br><span class="line">TIM_OC4PreloadConfig(TIM1, TIM_OCPreload_Enable);  <span class="comment">// CH4预装载使能</span></span><br><span class="line">TIM_ARRPreloadConfig(TIM1, ENABLE); <span class="comment">// 使能TIMx在ARR上的预装载寄存器</span></span><br></pre></td></tr></table></figure><p>然后这五句是“影子寄存器”相关，也写上即可，可以不管，甚至删掉这四句都不影响PWM输出。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_Cmd(TIM1, ENABLE);  <span class="comment">// 使能TIM1</span></span><br></pre></td></tr></table></figure><p>最后一句，开启定时器。</p><p>到此，定时器配置已经全部分析完，我们再回到main函数去学</p><p>TIM_SetComparex这个函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 a;</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    KEY_Init();</span><br><span class="line">    TIM1_PWM_Init(<span class="number">20000</span> - <span class="number">1</span>, <span class="number">72</span> - <span class="number">1</span>); <span class="comment">//舵机的arr值为500-2500</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);</span><br><span class="line">        a = KEY_Scan(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a == KEY1_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            TIM_SetCompare1(TIM1, <span class="number">500</span>);</span><br><span class="line">            TIM_SetCompare2(TIM1, <span class="number">500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a == KEY2_PRESS)</span><br><span class="line">        &#123;</span><br><span class="line">            TIM_SetCompare1(TIM1, <span class="number">2500</span>);</span><br><span class="line">            TIM_SetCompare2(TIM1, <span class="number">2500</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TIM_SetCompare1(TIM1,500)的意思就是设置定时器1的通道1的CCR值为500。</p><p>TIM_SetCompare2(TIM1,500)的意思就是设置定时器1的通道2的CCR值为500。</p><p>因为我们只有TIM1_CH1也就是PA8接了舵机，TIM1_CH2也就是PA9什么都没接，所以TIM_SetCompare2函数只是演示作用，什么都没控制，你如果多买了一个舵机，你可以试试同时控制两个舵机。</p><p>计算占空比不要忘了此公式：<script type="math/tex">duty = \frac</script></p><p>结合定时器配置，arr=20000，</p><p>所以TIM_SetCompare1(TIM1,500);这句话的作用就是把TIM1_CH1的占空比改为：</p><p>500/20000=2.5%，对应舵机的0°位置；</p><p>同理，后面TIM_SetCompare1(TIM1,2500)就是把占空比改为：</p><p>2500/20000=12.5%，对应舵机的180°位置。</p><p>于是，通过while(1)中的代码，我们就通过按按钮，实现了对舵机角度的控制了！</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——（补）STM32标准库</title>
      <link href="/2023/09/01/lesson-1-5/"/>
      <url>/2023/09/01/lesson-1-5/</url>
      
        <content type="html"><![CDATA[<h1 id="四、（补）STM32标准库"><a href="#四、（补）STM32标准库" class="headerlink" title="四、（补）STM32标准库"></a>四、（补）STM32标准库</h1><p>STM32代码工程中，我们一直没讲一个文件夹：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/2ebc3441f63c13fc.png" alt="img"></p><p>FWlib文件夹，FW即Firmware，固件的意思。</p><p>也就是这个文件夹里就是我们当初学前班安装的那个“STM32F1固件库”。</p><p>“固件”是什么意思呢？</p><p>我们先介绍一下<strong>STM32标准库</strong>：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/05f501899eb2e450.png" alt="img"></p><p>里面有两个文件夹：</p><p>inc<br>src</p><p>“inc”就是include，头文件，“src”就是source，源文件。</p><p>我们打开看一眼：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/d18ea89051159f78.png" alt="img"></p><p>这里面就是所有的STM32标准库的库函数。</p><p>但是我们打开“1.跑马灯”程序：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/7d1023113178d3dc.png" alt="img"></p><p>里面只有这四个文件。因为我们就<strong>只用到了这四个库函数中的两个</strong>：</p><p>“stm32f10x_”这个前缀，代表这套库函数可用于STM32F1的所有系列，我们使用的是STM32F103C8T6，同样以后使用STM32F103RCT6、STM32F103ZET6等，这套库函数完全通用。</p><p>（1）“stm32f10x_gpio.c”</p><p>“stm32f10x_gpio.c”就是操作gpio相关的库函数，比如我们之前用的：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_InitTypeDef  GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_SetBits(GPIOC, GPIO_Pin_13);           <span class="comment">//PC.13 输出高</span></span><br><span class="line">GPIO_ResetBits(GPIOC, GPIO_Pin_13);         <span class="comment">//PC.13 输出低</span></span><br></pre></td></tr></table></figure><p>这些凡是操作GPIO的函数全是。</p><p>因为我们go to definition以上的任意一个函数，都会跳转到“stm32f10x_gpio.c”里去。</p><p>（2）“stm32f10x_rcc.c”</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);  <span class="comment">//使能PC端口时钟</span></span><br></pre></td></tr></table></figure><p>这句就是它的函数，RCC分配外设时钟。</p><p>（3）“stm32f10x_usart.c”</p><p>这是串口相关的库函数，跑马灯代码并没有用到，串口相关内容在手册第三章第一节，不着急。因为串口非常常用，所以预先加在基础例程中。</p><p>（4）“misc.c”</p><p>Misc是Miscellaneous（各种各样的）的缩写，杂项文件，里面主要装的是NVIC相关文件。也就是中断优先级分配相关，由于我们以后做项目几乎必用中断，所以提前加。</p><p>然后我们就以用到单片机的什么外设就加什么库的原则，这样可以节省单片机的内存。</p><p>比如我们打开上一节定时器中断的代码：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/cc6ccb7c696e3b3a.png" alt="img"></p><p>多了“stm32f10x_tim.c”，当然就是定时器相关的库函数了，如果这里不添加上，TIM相关的库函数全部报错。</p><p>那么库函数怎么添加？每一个库都有一个.c和一个对应的.h，其中.h是默认全部添加的，之前第三节就讲过怎么添加.c和.h文件到工程：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/27b8f46e96136e53.png" alt="img"></p><p>上图复习一下怎么添加.h，其中STM32F10x_FWLib\inc路径已经添加好了，所以我们如果需要添加某个外设库函数，就只需要添加.c文件即可。</p><p>最后一个问题，肯定会有人想问：</p><p><strong>这些库函数是谁写的？我们需要从头写库函数吗？</strong></p><p><a href="https://www.bilibili.com/video/BV16g4y1C7yM/?spm_id_from=333.999.0.0&amp;vd_source=572f6f20a1d3315e2340af4973f6d7c0">长期被忽视的库函数简史【洋桃电子大百科P010】_哔哩哔哩_bilibili</a></p><p>推荐这个视频，“我们要站在巨人的肩膀上”。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——定时器中断</title>
      <link href="/2023/09/01/lesson-1-4/"/>
      <url>/2023/09/01/lesson-1-4/</url>
      
        <content type="html"><![CDATA[<h1 id="四、定时器中断"><a href="#四、定时器中断" class="headerlink" title="四、定时器中断"></a>四、定时器中断</h1><p>实验现象：板载LED以一定频率闪烁。</p><p>可能会感觉很奇怪，这个现象不就跟跑马灯一模一样么？</p><p>对的，确实一模一样。</p><p>接下来我们看代码：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    TIM3_Init(<span class="number">20000</span><span class="number">-1</span>,<span class="number">720</span><span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>观察上面的代码，我们并没有找到控制led亮灭的代码！while(1)内就一直在delay，也就是单片机一直在“发呆”，但是板载LED灯却在闪。</p><p>难道还有第二个main函数？还有另外一个while(1)在同时进行？灯闪的程序写在那里面了？</p><p>其实你真的可以理解为还有另外一个while(1)在同时进行着，这个“while(1)”跟main函数里的while(1)双线运行。双线运行也就是双线程，也就是两件事情一起干。</p><p>通俗解释：正常人都是单线程的，只能认真干一件事，比如做数学题、打游戏、背单词。但是学了这一节，我们就可以让单片机做到“双线程”甚至“多线程”，也就相当于一个人可以同时做数学题和打游戏这两件事，或者更多事。</p><p>多线程任务就通过“定时器中断”这个东西来实现。</p><p>对于初学者的你，“定时器中断”这五个字都认识，拼在一起就迷了。</p><p>那么就开始一点点解惑了，开始代码的学习：</p><ol><li><p>Main函数中：</p></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    TIM3_Init(<span class="number">20000</span><span class="number">-1</span>,<span class="number">720</span><span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多了两句新的代码，第一句：</p><p>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</p><p>NVIC全称是Nested vectored interrupt controller，翻译是“嵌套向量中断控制器”。NVIC是stm32内的一个管理中断的设备。NVIC的作用主要是配置stm32各个中断的<strong>优先级</strong>。那么什么是中断？什么是优先级？我们依次解释：中断中断是单片机自动响应的一个请求信号，中断信号来到后，暂时停止当前程序的执行，转而进行为外部设备服务的程序，并且在执行完服务程序后自动返回原程序执行的过程（就是打断当前进行的事情，继而进行更为紧急的事情，做完更紧急的事情再回到原来的事情继续做）。其实上面的官方解释已经够明白了，我再更详细解释一下：STM32原本正常，一条一条执行main函数中的代码，但是这时候来了一个中断（中断请求信号），这时候main函数，也就是main函数while(1)里的内容就要马上停下来，这时候中断请求会把下一条程序执行的起点带到一个<strong>中断服务函数</strong>的开头，stm32就开始执行这个中断服务函数；进行完中断服务函数，下一条程序执行的起点会自动跳转回main函数while(1)里，回到停下的那里继续执行。不用管是什么中断服务函数，它终究就是个函数，我们可以在中断服务函数里放任何东西，比如放PCout(13)=1; 控制板载led亮灭，比如放个a=PBin(4); 检测IO口电平，也可以放几个运算函数，比如motor_pid();把电机控制算法放在这运行，我们下面几节就会这样做。 那么我们想一下，只要这个中断请求的频率足够快，比如1ms来一次，那一秒就执行1000次中断服务函数，这么快的执行速度我们用肉眼看上去就好像是另一个while(1)函数了，肉眼看上去就是双线程运行。我再详细讲一下中断服务函数的运行时间：stm32f103c8t6运行一条c语言代码大约是0.05us，所以我们可以尽情在中断服务函数里写自己的算法，我们假设在中断服务函数里添加了一个1000行代码的大算法，也不过是运行50-200us，不到1ms，运行完中断服务函数，剩下的800us留给main函数的while(1)去执行。所以这也引申出一点：<strong>中断服务函数里不允许写delay函数！如果是1ms来一次中断，中断服务函数里总共顶多只能delay_us(10)，不然会导致中断服务函数执行不完就跳出来了，程序故障。</strong> 优先级目前我们先记住，在手册的stm32的第一、第二部分章节里，<strong>优先级</strong>这个概念就是针对中断的。这里我举个例子，假设现在STM32有中断a和中断b两个不同的中断，中断a的请求1ms来一次，中断b的请求2ms来一次。那么肯定有那么一种情况：如果中断a的中断服务函数还没执行完，这时候来了中断b的请求了，那现在应该咋办？这就要比比这两个中断哪个更重要了。优先级的概念由此而生。优先级更高的中断更优先进行。那我们设置中断a的优先级为0，中断b的优先级为1。这里注意，0的优先级是最高的，其次是1，其次是2、3、4…所以中断a的优先级&gt;中断b的优先级。所以，当中断a的中断服务函数还没执行完中断b的请求就来了的话，因为中断a优先级&gt;中断b优先级，所以中断a的中断服务函数继续执行，直到执行完，再切换到中断b的中断服务函数，直到执行完，再切回main函数的while(1)。另一种情况，当中断b的中断服务函数还没执行完，中断a的请求就来了的话，因为中断a优先级&gt;中断b优先级，所以中断b的中断服务函数停下，先执行中断a的中断服务函数，直到执行完，再中断b的函数，再main函数</p><p>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</p><p>这句代码是设置中断优先级分组为分组2。什么意思呢？</p><p>我们go to definition一下“NVIC_PriorityGroup_2”：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NVIC_PriorityGroup_0         ((uint32_t)0x700) <span class="comment">/*!&lt; 0 bits for pre-emption priority</span></span></span><br><span class="line"><span class="comment"><span class="meta">                                                               4 bits for subpriority */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NVIC_PriorityGroup_1         ((uint32_t)0x600) <span class="comment">/*!&lt; 1 bits for pre-emption priority</span></span></span><br><span class="line"><span class="comment"><span class="meta">                                                               3 bits for subpriority */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NVIC_PriorityGroup_2         ((uint32_t)0x500) <span class="comment">/*!&lt; 2 bits for pre-emption priority</span></span></span><br><span class="line"><span class="comment"><span class="meta">                                                               2 bits for subpriority */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NVIC_PriorityGroup_3         ((uint32_t)0x400) <span class="comment">/*!&lt; 3 bits for pre-emption priority</span></span></span><br><span class="line"><span class="comment"><span class="meta">                                                               1 bits for subpriority */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NVIC_PriorityGroup_4         ((uint32_t)0x300) <span class="comment">/*!&lt; 4 bits for pre-emption priority</span></span></span><br><span class="line"><span class="comment"><span class="meta">                                                               0 bits for subpriority */</span></span></span><br></pre></td></tr></table></figure><p>发现一共有五个优先级分组，分别是优先级分组0~4，我们看上图，找到我们选择的“分组2”，代码右边的英文注释：2 bits for pre-emption priority, 2 bits for subpriority.，译文是：“优先级分组2的分配方式是： 2位抢占优先级，2位子优先级”。</p><p>2位抢占优先级的解释：<strong>2位指两个二进制位</strong>，两个二进制位能有多少种不同组合？也就是00 01 10 11，四种，转化成十进制：0 1 2 3。跟我们灰框里讲的一样，数值越小越优先，所以0的优先级最高，3最低。</p><p>优先级是数值越小优先级越高的。0&gt;1&gt;2&gt;3</p><p>同理，两位子优先级也是这样，两个二进制位，组成00 01 10 11，也就是0,1,2,3这四个数可选。</p><p><strong>STM32的每个中断都有自己的抢占优先级和子优先级</strong>，且，</p><p>抢占优先级和子优先级要组合使用的，用法如下：</p><p>两个中断比较谁的优先级更高，先比谁的抢占优先级数值更小，比如中断a的抢占优先级是0，中断b的抢占优先级是2，那就不管子优先级是多少，我们就已经可以断定中断a的优先级&gt;中断b的优先级。</p><p>但如果中断a和中断b的抢占优先级相等，那就再比子优先级数值，谁更小谁的优先级更高。</p><p>综上，凡是用到了中断，就要设置优先级的分组，就要写下面这句代码，哪怕这一节的程序就只有一个中断，也要分组：</p><p>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</p><p>就写在main函数的第一句就行。</p><p>有的同学在此处有疑问：“为什么要选“分组2”呢？我选其他四个分组有什么问题吗？</p><p>答案是没问题，只是在STM32F1系列中，我们习惯使用分组2，分组2中，抢占优先级可选4个，子优先级可选4个，4x4=16，也就是最多16种优先级，对应16个中断。STM32F1有60多个不同的中断，但是我们常用的就是十几个，所以分组2就够用了。</p><p>好了，“定时器中断”这五个字我们已经讲完了“中断”了，接下来说一下</p><p>“定时器”。</p><p>先复习一下，我们已经学了好几个单片机的片内设备和外设了，列举一下，外设有：GPIO、RCC，片内设备有NVIC。</p><p>接下来我们再学一个非常非常重要的STM32外设：定时器。</p><p>STM32F103C8T6有四个定时器可以用，TIM1，TIM2，TIM3，TIM4其中TIM2，TIM3，TIM4这三个是通用定时器，TIM1是高级定时器。为什么要这样区分呢？初学者就不需要管这个了，我们在STM32第一、第二部分里都不使用任何高级定时器TIM1的任何高级功能，所以我们把TIM1~TIM4一视同仁即可，四个定时器是完全一致的。 形象化记忆：定时器的核心就是计数器。比如我们让定时器计数，从0数到100，每隔1ms数一个数；那定时器内部就有个计数器，初始值是0，每过1ms，计数器+1，一直过了99ms，这时，定时器的计数器的值是99；紧接着到第100ms，计数器数到了100，但是计数器的值不是100，而是清零，然后继续从0开始数，同时触发定时器中断。终于知道定时器中断是怎么回事了！我们这一节讲的“定时器中断”就是由定时器触发的中断！再详细复述一下上面这个定时器从0数到100的例子：数到100之后，计数器清零并触发中断，又从0开始继续数到100，数到100然后再清零并触发中断，周而复始。所以很明显，这个中断是通过定时器的计数器清零触发的，所以我们使用的这个中断的官方全称是：<strong>定时器更新中断</strong>。利用这个中断，比如上面的例子，100ms就可以触发一次定时器更新中断，我们可以调整定时器相关参数，改成1ms触发一次定时器更新中断，这样我们就通过定时器更新中断，实现了我们之前的“双线程”的设想！</p><p>好了，我们懂了原理之后，就详细来看看代码是怎么写的吧。</p><p>然后，我们点进tim.c和tim.h，分析定时器的代码。</p><p>我们这份代码使用的是定时器3（TIM3）</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Init</span><span class="params">(u16 arr, u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;</span><br><span class="line">    NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class="comment">// 时钟使能</span></span><br><span class="line"></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Period = arr;              <span class="comment">// 自动重装值</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Prescaler = psc;           <span class="comment">// 预分频系数</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>;</span><br><span class="line">    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="comment">// TIM向上计数模式</span></span><br><span class="line">    TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure);</span><br><span class="line"></span><br><span class="line">    TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);           <span class="comment">// 定时器更新中断使能</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;      <span class="comment">// TIM3中断</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>; <span class="comment">// 抢占优先级0级</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;   <span class="comment">// 子优先级3级</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;      <span class="comment">// IRQ通道使能</span></span><br><span class="line">    NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">    TIM_Cmd(TIM3, ENABLE);                               <span class="comment">// 使能TIM3外设</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">// TIM3中断服务函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET) <span class="comment">// 判断是否为定时器更新中断</span></span><br><span class="line">    &#123;</span><br><span class="line">        TIM_ClearITPendingBit(TIM3, TIM_IT_Update); <span class="comment">// 清除中断标志位</span></span><br><span class="line">        LED = !LED; <span class="comment">// LED状态翻转</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Tim.c中出现了一个main中没出现过的函数：TIM3_IRQHandler函数</p><p>这就是定时器3的中断服务函数，里面的LED=!LED; 赫然在目。找到控制跑马灯的函数了！</p><p>我们先分析上面的TIM3_Init函数：</p><p>首先的两句：</p><p>TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;</p><p>NVIC_InitTypeDef NVIC_InitStructure;</p><p>上面这两句分别是定时器配置结构体 和中断配置结构体。</p><p>这两个结构体的名字是不是跟之前的：</p><p>GPIO_InitTypeDef  GPIO_InitStructure;</p><p>GPIO配置结构体非常相似呀，实际上它们都是一样的构造，typedef+struct{}这样，并且GPIO配置结构体配置完之后需要用GPIO_Init函数去上传到相关寄存器，同样定时器也需要这么一个类似的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure);</span><br></pre></td></tr></table></figure><p>同样，NVIC也需要这么一个类似的函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure><p>我们看TIM3_Init函数传入的参数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Init</span><span class="params">(u16 arr, u16 psc)</span></span><br><span class="line">&#123;</span><br></pre></td></tr></table></figure><p>u16 arr和u16 psc，跟之前的u8一样，你把u16也看作是int就行。</p><p>也就是配置定时器必须要传入arr和psc这两个参数，</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_TimeBaseStructure.TIM_Period = arr;        <span class="comment">//自动重装值</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc;     <span class="comment">//预分频系数</span></span><br><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br></pre></td></tr></table></figure><p>我们看到arr和psc两个参数被分别存在定时器配置结构体的TIM_Period和TIM_Prescaler里面，然后上传到相关寄存器去了。</p><p>好消息是：以下两个参数我们不用管，自己做机器人的时候，参数抄作业即可。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br></pre></td></tr></table></figure><p>其中TIM_CounterMode这个参数我们在第五章FOC电机控制的时候才会学，我们平时做项目的话，这俩参数就复制粘贴，不用看不用管。</p><p>那我们就只需要学下面这两个参数就行了：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_TimeBaseStructure.TIM_Period = arr;</span><br><span class="line">TIM_TimeBaseStructure.TIM_Prescaler = psc;</span><br></pre></td></tr></table></figure><p>我们可以看到main中：TIM3_Init(20000-1,720-1);</p><p>定时器初始化函数里面是有两个形参的，这两个就分别是自动重装载值arr和预分频系数psc。arr和psc这俩参数可太重要了，以后第一章我们会无数次见到。</p><p>本节代码中，我们设置arr=20000 - 1 = 19999，psc=720 - 1 = 719。</p><p>首先讲预分频系数psc。</p><p>之前我们举了个例子不是规定让计数器从0数到100嘛，1ms数一次，那么psc的意义就是规定这个“1ms数一次”。</p><p>psc的作用就是对总线时钟的频率进行分频，分频之后的频率就是定时器计数频率。</p><p>那总线时钟的频率是多少呢？从现在开始，我们就要记好，最好是背过：</p><p>我们使用的这个STM32F103C8T6最小系统板的STM32的系统总线时钟的频率是72Mhz，也就是72,000,000 Hz，这个数值要记住！</p><p>所以定时器的psc参数对系统总线时钟频率分频，psc=720 – 1，那意思就是720分频，也就是分频后的频率是之前的1/720，如下：</p><script type="math/tex; mode=display">\frac720 = 100000H</script><p>分频后的频率是100000Hz，也就是100KHz，也就是定时器3的计数器的计数频率是100KHz。</p><p>100KHz也就是一个周期0.00001秒，也就是定时器3的计数器每0.00001秒记一个数。</p><p>那为什么要psc=720 – 1，为什么要-1呢？这是内部寄存器规定的，规定0是不分频，1是二分频，2是三分频，依次类推，所以我们要减一，便于我们计算。比如：</p><p>如果我这样写：TIM3_Init(20000-1, 1-1);这样的话就是不分频喽。</p><p>然后我们再讲自动重装载值arr。</p><p>arr的作用就是规定“数到多少就触发定时器更新中断”，之前我们举了个例子不是规定让计数器从0数到100嘛，1ms数一次，那么“数到100”，这个“100”就是arr，arr=100。</p><p>所以自动重装载值arr的作用就是这个的计数器要记到多少才能进一次中断，arr=20000，那就是计数器计两万次才进一次中断，也就是0.00001*20000=0.2秒进一次中断。这就真相大白了。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/ca9bc29a836edacf.png" alt="img"></p><p>上图是一个非常直观的描述定时器中断的触发方式的图；</p><p>横坐标是t（时间），纵坐标是TIMx_CNT，CNT就是“count”的缩写，也就是“计数器”的意思，“TIM”代表定时器，TIMx，这个x代表这是定时器几，比如，定时器3就是TIM3，定时器4就是TIM4。在STM32F103C8T6中，TIMx中的x可以是1、2、3、4。</p><p>上图就清楚描述了：</p><p>定时器的计数器随着时间计数，然后计数器达到arr值（TIMx_ARR）时，触发定时器更新中断，然后计数器清零继续重新计数。</p><ol><li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);                   <span class="comment">//定时器更新中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;            <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;  <span class="comment">//抢占优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;         <span class="comment">//子优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;            <span class="comment">//IRQ通道使能</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure></li></ol><p>后面的就简单多了，紧接着我们来看关于中断的内容。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);</span><br></pre></td></tr></table></figure><p>首先，TIM_ITConfig函数，中断的英文是interrupt，简称it，所以单片机编程里见到“it”字样，就是中断相关的代码。</p><p>TIM_ITConfig英文翻译就是定时器中断配置函数：</p><p>TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE);</p><p>里面的参数就是TIM3，定时器3，ENABLE就是enable，使能的意思。</p><p>TIM_IT_Update这个参数就代表定时器更新中断，就是我们用到的中断。</p><p>我们go to definition一下TIM_IT_Update：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_Update                ((uint16_t)0x0001)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_CC1                   ((uint16_t)0x0002)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_CC2                   ((uint16_t)0x0004)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_CC3                   ((uint16_t)0x0008)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_CC4                   ((uint16_t)0x0010)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_COM                   ((uint16_t)0x0020)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_Trigger               ((uint16_t)0x0040)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> TIM_IT_Break                 ((uint16_t)0x0080)</span></span><br></pre></td></tr></table></figure><p>嗯，看来定时器也不只有<strong>定时器更新中断</strong>一个中断，还有乱七八糟的好多，这些其他中断我们暂时不管。</p><p>接着我们来看NVIC配置结构体的参数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;            <span class="comment">//TIM3中断</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>;  <span class="comment">//抢占优先级0级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;         <span class="comment">//子优先级3级</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;            <span class="comment">//IRQ通道被使能</span></span><br></pre></td></tr></table></figure><p>NVIC_IRQChannel是设置中断源，也就是中断服务函数的选择，这里填上：TIM3_IRQn，也就是指定是定时器3的中断服务函数。</p><p>NVIC_IRQChannelPreemptionPriority是设置抢占优先级，设为0。</p><p>NVIC_IRQChannelSubPriority是设置子优先级，设为3。</p><p>NVIC_IRQChannelCmd是中断请求通道的状态，设为ENABLE，开启这个中断。</p><p>由于只有一个中断，体现不出优先级的概念；但是抢占优先级和子优先级这两个参数一定要配置，并且如果你自己再添加一个TIM2的中断的话，这两个参数不能都跟这里TIM3配置的一样，比如定时器3是0和3，定时器2你可以配置成0和2，或者1和3，总之不能也是0和3。</p><ol><li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>  <span class="comment">//TIM3中断服务函数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)</span><br><span class="line">    &#123;</span><br><span class="line">        TIM_ClearITPendingBit(TIM3, TIM_IT_Update);</span><br><span class="line">        LED = !LED;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_Init</span><span class="params">(u16 arr, u16 psc)</span></span><br><span class="line">&#123;</span><br><span class="line">    TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;</span><br><span class="line">    NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE); <span class="comment">// 时钟使能</span></span><br><span class="line"></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Period = arr;              <span class="comment">// 自动重装值</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_Prescaler = psc;           <span class="comment">// 预分频系数</span></span><br><span class="line">    TIM_TimeBaseStructure.TIM_ClockDivision = <span class="number">0</span>;</span><br><span class="line">    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="comment">// TIM向上计数模式</span></span><br><span class="line">    TIM_TimeBaseInit(TIM3, &amp;TIM_TimeBaseStructure);</span><br><span class="line"></span><br><span class="line">    TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);                <span class="comment">// 定时器更新中断使能</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;          <span class="comment">// TIM3中断通道</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">0</span>; <span class="comment">// 抢占优先级0级</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">3</span>;       <span class="comment">// 子优先级3级</span></span><br><span class="line">    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;          <span class="comment">// 使能IRQ通道</span></span><br><span class="line">    NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">    TIM_Cmd(TIM3, ENABLE); <span class="comment">// 使能TIM3外设</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>上图，这是初始化函数最后一句，TIM_Cmd函数，Cmd就是command，函数的作用是命令定时器，参数ENABLE，这个函数显然是开启定时器的意思，只有写了这句代码，TIM3_CNT（也就是计数器）的值才能开始累加，同理：</p><p>TIM_Cmd(TIM3, DISABLE); 这句代码就是关闭定时器的意思。</p><p>最后是中断服务函数：</p><p>void TIM3_IRQHandler(void)</p><p><strong>这个函数名是不能改的</strong>。可以在里面运行各种代码，比如后续你的算法，你的传感器信息采集等。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET) <span class="comment">//中断为定时器更新中断</span></span><br><span class="line">&#123;</span><br></pre></td></tr></table></figure><p>上面这句if判断，我解释一下：</p><p>TIM_GetITStatus函数，翻译过来是获取定时器相关中断的状态，函数的参数是</p><p>TIM3和TIM_IT_Update，也就是获取定时器3的更新中断的状态：</p><p>!= RESET， RESET取反，当然就是SET，所以“不等于RESET”那就等于SET。</p><p>所以：</p><p>if (TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)</p><p>if (TIM_GetITStatus(TIM3, TIM_IT_Update) == SET)</p><p>这两句话等价。</p><p>当一个中断状态是RESET时证明这个中断还没准备好触发；</p><p>当一个中断状态是SET时证明这个中断已经准备好触发；</p><p>所以如果定时器3的更新中断已经准备好触发了，那就进入if里，执行LED=!LED;这句代码，也就是灯闪的代码了。</p><p>这个“！”是取反操作，0取反就是1，1取反是0。</p><p>本节最后的线索：</p><p>我们这一节了解到：定时器的核心就是一个计数器在不停计数。定时器主要由两个核心参数（arr和psc）分别对计数最大值和计数频率进行调整。之后我们可以根据上面这两条定时器的性质，整很多<strong>花活</strong>，定时器中断是第一个花活，还有，比如这一章之后的定时器计时、PWM、正交解码，再比如手册第三章的输入捕获等。定时器是单片机里“<strong>花活最多的外设，没有之一。</strong>” 最后我们理顺清楚：截至手册前四节，STM32的外设我们已经学习了：RCC、GPIO、TIM，片内设备有NVIC。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——如何自己添加代码文件</title>
      <link href="/2023/09/01/lesson-1-3/"/>
      <url>/2023/09/01/lesson-1-3/</url>
      
        <content type="html"><![CDATA[<h1 id="三、如何自己添加代码文件"><a href="#三、如何自己添加代码文件" class="headerlink" title="三、如何自己添加代码文件"></a>三、如何自己添加代码文件</h1><p>本节讲如何以跑马灯程序为起点，添加自己的硬件模块代码。</p><p>我解释一下这是什么意思：</p><p>打开STM32第一部分代码合集，有很多代码工程；</p><p>下面这些按键实验呀，定时器中断呀，都是我基于“1.跑马灯”程序写的，也就是我们平时如果要创建自己机器人的代码工程，最小的代码单元就是“1.跑马灯”程序，在这个程序的基础上进行开发。</p><p>我们可以对比一下“1.跑马灯”和“2.按键实验”两个文件夹里的东西：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/2d99bc8797026c7d.png" alt="img"></p><p>一模一样。唯一的区别在哪呢？在HARDWARE文件夹里：</p><p>“2.按键实验”比“1.跑马灯”多了个KEY文件夹：</p><p>里面自然是key.c和key.h。</p><p>本节课我们要教的就是如何自己通过修改“1.跑马灯”得到“2.按键实验”。</p><p>有了这个技能：</p><p>以后你比如做月球探测车，有一些专门控制电机的函数，还有一些专门控制硬盘存储的函数，另外还有一些LORA无线通信的函数，你如果把这些函数全混在一起，都放在main.c或者led.c里，那代码就显得特别混乱没条理，跟你合作的负责算法的人也会骂你。</p><p>正确做法是电机控制的函数单独在一个.c文件，硬盘存储的函数单独一个.c文件，LORA无线通信单独一个.c文件 … … 见下图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/40bd6f549b8cb9f1.png" alt="img"></p><p>这样每个部分的代码就分开了，调理清晰，高端大气。</p><p>好，详细说一下怎么做。首先打开“1.跑马灯”的工程：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/375d751229923df8.png" alt="img"></p><p>跑马灯初始程序。</p><h2 id="第一步：完成框架"><a href="#第一步：完成框架" class="headerlink" title="第一步：完成框架"></a>第一步：完成框架</h2><p>New两个文件，如下图。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/40d47122ab1167a5.png" alt="img"></p><p>保存所有：</p><p>弹出下方对话框，点是：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/250de5e6b4762ddd.png" alt="img"></p><p>文件存储路径，往回翻：</p><p>进入HARDWARE（hardware 硬件相关代码）文件夹</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/6daacb91a346ed57.png" alt="img"></p><p>在此目录下新建一个文件夹KEY</p><p>进入KEY内</p><p>文件名改为key.c</p><p>上图点击“保存”，key.c文件就创建好了。</p><p>创建的另一个Text2文件完全按照上面的步骤再来一遍，最后改名为key.h。</p><p>这样key.c对应的key.h也创建好了：</p><p>然后打开led.h，复制所有代码，复制到key.h中：</p><p>修改代码，删掉多余函数。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/59c1da6d9eae9729.png" alt="img"></p><p>打开key.c，输入#include “key.h”：</p><p>然后是编译器配置了：点这个三色块</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/e72e7ba87368dff7.png" alt="img"></p><p>添加.c源文件</p><p>找到，add。</p><p>点击OK：</p><p>点击魔术棒。</p><p>点击C/C++框，再点下图这个…，添加.h头文件：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/fd01c63b290d4cd0.png" alt="img"></p><p>点击new</p><p>点“…”</p><p>找到头文件所在路径，如下图，选择KEY文件夹。</p><p>最后一步，在main函数添加新的头文件。</p><p>修改前：</p><p>修改后，添加了key.h。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/18/408d5e8e3a611b03.png" alt="img"></p><p>第一步完成。</p><h2 id="第二步：写代码"><a href="#第二步：写代码" class="headerlink" title="第二步：写代码"></a>第二步：写代码</h2><p>打开key.c写按键相关的函数，你可以直接到“2.按键实验”里去复制粘贴。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">key_init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//这是很多行代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">key_scan</span><span class="params">(u8 key_bit)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//这是很多行代码</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Key.c的代码写完之后，想要main.c内可以调用key.c的函数，还需要把源文件：key.c内的所有函数在对应的头文件：key.h里声明出来，注意下图，头文件里函数的格式与源文件的稍有不同：</p><p>在源文件中你可以写void key_init()，</p><p>但是头文件里要写成void key_init(void)，也就是函数的括号里没有东西也要写个void。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __KEY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __KEY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">key_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">key_scan</span><span class="params">(u8 key_bit)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>好了，添加完成。之后你要做的就是在main函数中写按键相关的代码，完成你想实现的功能了：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;led.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 t;</span><br><span class="line">    delay_init();       <span class="comment">//延时函数初始化</span></span><br><span class="line">    LED_Init();         <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line">    key_init();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)    <span class="comment">//loop()</span></span><br><span class="line">    &#123;</span><br><span class="line">        PCout(<span class="number">13</span>)=<span class="number">0</span>;</span><br><span class="line">        delay_ms(<span class="number">100</span>);  <span class="comment">//延时300ms</span></span><br><span class="line">        PCout(<span class="number">13</span>)=<span class="number">1</span>;</span><br><span class="line">        delay_ms(<span class="number">100</span>);  <span class="comment">//延时300ms</span></span><br><span class="line">        t=key_scan(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如上图，按键的初始化和按键检测函数已经添加到main函数里去了，这份代码就完成了按键控制的功能了。</p><p>以后所有模块添加方法同理，举例：下图是我截的以前做的一个智能检测设备项目的文件图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/19/e1efc5a0c0a7e0c9.png" alt="img"></p><p>这么一堆.c文件，封装了不同功能的函数，都是这么添加的。</p><p>Main.c中的头文件：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;delay.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;key.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;usart3.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;adc.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;TP4059.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;SGM3002.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;beep.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dma.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;bmp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stmflash.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;st7789.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Oscilloscope.h&quot;</span></span></span><br></pre></td></tr></table></figure><p>一大堆功能，随着你学得越多，你做的机器人的功能也会越复杂。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——按键</title>
      <link href="/2023/09/01/lesson-1-2/"/>
      <url>/2023/09/01/lesson-1-2/</url>
      
        <content type="html"><![CDATA[<h1 id="二、按键"><a href="#二、按键" class="headerlink" title="二、按键"></a>二、按键</h1><p>实验效果：外接两个按钮，按下KEY1，板载led亮，按下KEY2，板载led灭。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/16/15399da3bf48f6ad.png" alt="img"></p><p>拿出我们准备好的<strong>按钮模块</strong>和<strong>杜邦线</strong>，接线如上图，按钮模块的K1和K2分别接单片机的B4和B5口，模块的GND要连接STM32的GND。</p><p>我们买的这个按钮模块的<strong>电路原理图</strong>如下图：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/16/c36dbee3023c4792.png" alt="img"></p><p>读此电路图：</p><p>K1~K4就是按钮模块伸出来的四根排针（排针就是杜邦线接口）：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/16/e93e539320758ee0.png" alt="img"></p><p>SW1~SW4就是四个按钮。</p><p>GND口是第五个排针接口：</p><p>GND是什么意思？</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/16/bc67e5e1502b5be4.png" alt="img"></p><p>这个符号高中应该学过，是接地的意思，GND也是“ground”，大地的缩写。这里规定：0V就是GND，“接地”的意思就是接0V。</p><p>比如K1按钮按下后，“K1→GND”这一路导通，K1的电平就变成了0V。</p><p>K1按钮松开，“K1→GND”这一路关断，那此时K1的电平是多少呢？答案是：未知电平。</p><p>因为K1处按钮关断后，K1端口与外界电路隔开，K1的电平没有任何参考了。</p><p>这怎么理解呢？肯定有很多同学觉得K1按钮关断后K1端口电位还是0，那假如我用手碰一下此时的K1引脚，由于静电等诸多因素，K1的电位一定会变化，所以K1电位究竟变成多少是未知的，K1是浮空的，K1此时就是<strong>高阻态</strong>。</p><p>高阻态是一个数字电路里常见的术语，指的是电路的一种输出状态，既不是高电平也不是低电平。</p><p>如果高阻态再输入电路的话，对电路无任何影响，和没接一样，如果用万用表测的话有可能是高电平也有可能是低电平，随它后面接的东西定。</p><p>好，理解了电路图，我们看程序：</p><p>程序解读：</p><ol><li><p>Main函数：</p></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    u8 a;</span><br><span class="line">    delay_init();</span><br><span class="line">    LED_Init();</span><br><span class="line">    KEY_Init();  <span class="comment">//按键初始化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        a = KEY_Scan(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(a == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LED = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LED = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先说个小点：第一句u8 a;是啥意思？</p><p>以目前你的水平，你完全把u8看作“int”即可，int a; ，明白了吧？</p><p>比上一节的跑马灯代码多了个key_init。while(1)里也有所不同。</p><p>前面与上个实验一样，key_init先留着，我们先看while(1)里的逻辑代码：</p><p>变量a被KEY_Scan函数的返回值赋了个值，如果是a=1就让灯亮，a=2灯灭，逻辑分析结束。</p><p>那现在的问题：</p><ol><li>KEY_Scan函数里面干了什么？</li><li>Key_Init函数里面干了什么？</li></ol><p>我们一一去看。打开key.c和key.h</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">KEY_Init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE); <span class="comment">// 使能GPIOB时钟</span></span><br><span class="line"></span><br><span class="line">    GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE); <span class="comment">// 引脚重映射配置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化PB4</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4; <span class="comment">// PB4</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">// 设置成上拉输入</span></span><br><span class="line">    GPIO_Init(GPIOB, &amp;GPIO_InitStructure); <span class="comment">// 初始化GPIOB4</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化PB5</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5; <span class="comment">// PB5</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">// 设置成上拉输入</span></span><br><span class="line">    GPIO_Init(GPIOB, &amp;GPIO_InitStructure); <span class="comment">// 初始化GPIOB5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看后发现：Key_Init与LED_Init高度相似，使能了B4和B5两个GPIO口，其中与跑马灯代码最大的不同就是：</p><p>GPIO模式配置成了GPIO_Mode_IPU上拉输入模式。</p><p>这是我们见到的第二个GPIO输入/输出模式了。我在下面灰框简单定性讲一下上拉输入模式是什么功能：</p><p>抱歉又来声明版权了，精进手册的时间是熠只猪在2023年年底做的，作者：熠只猪，QQ：2029285229。精进手册之后才有了下面这些灰色框，之前讲的挺乱的。</p><p>好了，继续：</p><p>之前的推挽输出功能还记得吧？我们可以使用函数控制推挽输出的IO口，选择置0还是置1。那这次的上拉输入呢？这个IO口既然是输入模式，那就不可以控制置0和置1，只能通过函数检测它是0还是1。上拉是什么意思呢？目前你没有基础的话可以这样记：上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为低电平时，IO口可以测到明确的低电平；上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为高电平时，IO口可以测到明确的高电平；上拉输入的IO口在外部接这个IO口的电路（外部输入电路）为高阻态时，IO口可以测到明确的高电平；这下明白为什么接按钮模块的B4和B5都要配置为上拉输入了吧！我们推导一下，假设K1按钮按下，那K1连接着B4，我们通过调用函数就会测得B4为0，也就是低电平；那我们松开K1按钮，B4成了高阻态，这时就是由于B4是上拉输入，我们通过调用函数还是能测得B4是1，也就是高电平。<strong>通过上述方法，我们就能实现判断按钮是否被按下！</strong></p><p>（关于上拉输入更多请见第二章：GPIO八种输入输出模式）。</p><p>细心的同学可能发现其中多了一句：</p><p>GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);</p><p>这句就请你真的不用细抠了，把下面讲的记住即可： </p><p>这句代码作用是：关闭JTAG调试模式，使能SWD调试模式。这就要说到我们程序的调试方式了，我们使用的Jlink的调试方式是SWD，Jlink需要四根线连单片机；但是还有一种JTAG调试方式，一般是STlink使用的，需要连20根线。这里之所以要写这句代码，是因为B4口被征用来做JTAG的调试了，我们调用这句代码把B4口解放出来，把它变成正常的IO口使用。 其实吧，大多数的GPIO口都不用调用这句代码，只有B3、B4、A15这三个口需要。</p><p>其实，用B4和B5两个口是我随便选的，你完全可以尝试用单片机上许多其他的GPIO口，也就是A0~A15，B0~B15！</p><p>但是特殊口除外：特殊IO包括PC14、PC15这俩用于连晶振；PB3、PB4、PA15这三个可以用，但是要加上面刚说完的那一句关闭JTAG的代码；PC13接了板载LED；其他的就没啥限制了，随便用，照着上面的代码改参数试试即可。</p><p>Key.h中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __KEY_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __KEY_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY1  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_4) <span class="comment">//读取按键1</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY2  GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_5) <span class="comment">//读取按键2</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY1_PRESS 1       <span class="comment">//KEY1</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> KEY2_PRESS 2       <span class="comment">//KEY2</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">KEY_Init</span><span class="params">(<span class="type">void</span>)</span>; <span class="comment">//IO初始化</span></span><br><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8 mode)</span>;   <span class="comment">//按键扫描函数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>上图是key.h里的东西，还记得上节讲的.h头文件的模板吗：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H       </span></span><br><span class="line">… …</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>led.h里，上面模板就是大写的“__LED_H”；</p><p>那这次的key.h里，上面模板就要改成“__KEY_H”，其他的所有.h都依此类推。</p><p>然后我们看KEY1和KEY2宏定义的这个函数：</p><p>GPIO_ReadInputDataBit( )这个函数就是检测IO口电平的核心函数，比如检测B4口的电平是高还是低：</p><p>int a;</p><p>a=GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_4);</p><p>如果a=1，那B4口就是高电平；</p><p>如果a=0，那B4口就是低电平。没有第三种情况。</p><p>所以我们通过代码的宏定义简化了：</p><p>if(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_4)==1)就可以简化为：</p><p>if(KEY1==1)</p><p>并且GPIO_ReadInputDataBit函数还能进一步简化：</p><p>就像第一节的PCout(13)一样：</p><p>int a;</p><p>a=PBin(4);  这个a如果为1那PB4就是高电平，0就是低电平。</p><p>这种简化的函数以后会在红外寻迹传感器那一节用到，也推荐大家使用。</p><p>看完了key.h，最后我们分析key.c</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//返回按键值</span></span><br><span class="line"><span class="comment">//mode:0,不支持连续按;1,支持连续按;</span></span><br><span class="line"><span class="comment">//返回值：</span></span><br><span class="line"><span class="comment">//0，没有任何按键按下</span></span><br><span class="line"><span class="comment">//KEY1_PRESS，KEY1按下</span></span><br><span class="line"><span class="comment">//KEY2_PRESS，KEY2按下</span></span><br><span class="line"><span class="comment">//注意此函数有响应优先级,KEY1&gt;KEY2</span></span><br><span class="line">u8 <span class="title function_">KEY_Scan</span><span class="params">(u8 mode)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> u8 key_up=<span class="number">1</span>;<span class="comment">//按键按松开标志</span></span><br><span class="line">    <span class="keyword">if</span>(mode)key_up=<span class="number">1</span>;  <span class="comment">//支持连按</span></span><br><span class="line">    <span class="keyword">if</span>(key_up&amp;&amp;(KEY1==<span class="number">0</span>||KEY2==<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        delay_ms(<span class="number">10</span>);<span class="comment">//去抖动</span></span><br><span class="line">        key_up=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(KEY1==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> KEY1_PRESS;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(KEY2==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> KEY2_PRESS;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(KEY1==<span class="number">1</span>&amp;&amp;KEY2==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        key_up=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">// 无按键按下</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Key_Scan函数就是纯逻辑分析了，考验的是C语言的功底，static关键字怎么用留给大家自学，非常简单，大家可以尝试先自己看懂代码，别看下面解析。</p><p>代码分析：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">  a = KEY_Scan(<span class="number">0</span>) ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数中，KEY_Scan函数 输入的参数是0，也就是函数形参mode=0，也就是“不支持连续按”的模式：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> ( key_up &amp;&amp; ( KEY1 == <span class="number">0</span> || key2 == <span class="number">0</span> ) )</span><br></pre></td></tr></table></figure><p>这句就在判断是否有任何按键被按下：没有按键被按下前，变量key_up一直都是1，所以符合条件；(KEY1==0)||(KEY2==0)就是判断B4和B5是否有低电平的情况，如果有，那就是有按键被按下了，这个if的条件就全部满足，就进入。进入if(key_up&amp;&amp;(KEY1==0||KEY2==0))之后：先延时10ms，这个延时你们够呛想得到：作用是消抖。<br><img src="https://s3.bmp.ovh/imgs/2025/09/16/ac7e68536bc2b9b5.png" alt="img"><br>按下按键之后，微观里电平并不是马上从高变低，真正是如上图一样有一个小波动，我们延时10ms就是为了跳过这个波动，从而避免一些按键误触或电路的冲击震荡造成的误触。然后key_up变成0，key_up=0代表现在是有按钮按下的状态，然后具体判断是K1，K2哪个按键被按下了，函数返回相应的值，函数结束。如果此时你一直按着按钮不放，while(1)程序会马上进行下一个循环，会再调用一次Key_Scan函数，但这时key_up是等于0的，所以就进不了if(key_up&amp;&amp;(KEY1==0||KEY2==0))判断语句了，只有松开按钮，key_up才能变回1，key_up=1代表现在是无按钮按下的状态，函数返回0。 连按的意思是一直按住按钮不放。支持连按的代码逻辑请自己推导，并不是你把这份代码的KEY_Scan(0)改成KEY_Scan(1)就能支持连按了，好好练习一下自己的C语言逻辑推理能力，仔细想想“支持连按”是什么意思，能用在什么地方，提示一下，之前用老式的，屏幕不可触摸的数码相机的时候，照片目录如果超过一百张，你如果要找到对应的照片预览是不是要一直按着一个按键不放。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32第一部分学习——跑马灯</title>
      <link href="/2023/09/01/lesson-1-1/"/>
      <url>/2023/09/01/lesson-1-1/</url>
      
        <content type="html"><![CDATA[<h1 id="一、跑马灯"><a href="#一、跑马灯" class="headerlink" title="一、跑马灯"></a>一、跑马灯</h1><p>实验效果：看到板载的小灯按一定的频率闪烁。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/cc4a039994e1c9cf.png" alt="img"></p><p>先<strong>解压群文件“stm32第一部分代码合集.zip”，</strong>代码包里所有代码！然后打开：</p><p>“1.跑马灯”例程代码，先编译，再烧录。即可看到灯闪烁的效果。</p><p>首先提醒：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/947880715f0d768c.png" alt="img"></p><p>因为我们重点在掌握STM32单片机的应用，所以“1.跑马灯”代码工程就是<strong>最小开发单元</strong>，也就是上图这些所有的文件框架我们都不需要再重新自己创建一遍，这就是最小的开发框架了，<strong>我们是要学习应用，是由表及里，不是先死抠底层细节，不要浪费时间！</strong></p><p>所以我们点击这个打开工程：<strong>LED.Projx</strong></p><p>然后直接从左边工程栏里打开main.c，直接看代码。</p><p>作为第一个实验，跑马灯很清晰地展现了代码的结构。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    delay_init();       <span class="comment">//延时初始化</span></span><br><span class="line">    LED_Init();         <span class="comment">//初始化与LED连接的硬件接口</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)       <span class="comment">//loop()</span></span><br><span class="line">    &#123;</span><br><span class="line">        GPIO_ResetBits(GPIOC, GPIO_Pin_13);       <span class="comment">//PC.13 输出低</span></span><br><span class="line">        delay_ms(<span class="number">100</span>);                           <span class="comment">//延时100ms</span></span><br><span class="line">        GPIO_SetBits(GPIOC, GPIO_Pin_13);         <span class="comment">//PC.13 输出高</span></span><br><span class="line">        delay_ms(<span class="number">100</span>);                           <span class="comment">//延时100ms</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是main函数全部的代码。</p><p>我们解读一个工程首先要看的是主函数（上图的main函数就是主函数），主函数就是程序员最表面的思路。先把最表面的思路读懂，才可以进到每个详细的函数中去研究更底层、更细节的实现。</p><p>代码解读，我们逐句看：</p><ol><li><p>第一句是delay_init函数，init即（initialization）初始化的意思。</p></li></ol><p>这个函数的内部对延时函数进行了底层的配置，写了这句代码，delay_ms（毫秒级延时）与delay_us（微秒级延时）才能够正常使用。</p><p>delay_ms和delay_us这两个函数有什么用呢？</p><p>作用就是延时，延时期间，单片机发呆，什么都不做。</p><p>delay_init函数的内部代码暂时不需要管，只需会使用delay_ms与delay_us两个函数即可。</p><p>delay_ms(100)就是延时100毫秒，也就是0.1秒。</p><p>delay_us(100)就是延时100微秒，也就是0.1毫秒，0.0001秒。</p><ol><li></li></ol><p>LED_Init函数，这个函数是LED灯的初始化函数。这个函数的内部我们就要好好研究研究了。这个函数内部的具体内容我们一会再看，先看完main函数。</p><ol><li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)       <span class="comment">//loop()</span></span><br><span class="line">&#123;</span><br><span class="line">    GPIO_ResetBits(GPIOC, GPIO_Pin_13);       <span class="comment">//PC.13 输出低</span></span><br><span class="line">    delay_ms(<span class="number">100</span>);                           <span class="comment">//延时100ms</span></span><br><span class="line">    GPIO_SetBits(GPIOC, GPIO_Pin_13);         <span class="comment">//PC.13 输出高</span></span><br><span class="line">    delay_ms(<span class="number">100</span>);                           <span class="comment">//延时100ms</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>While(1)这个语法可能你学习c语言的时候没有留意：</p><p>while(1)，括号里这个“1”就是“真”的意思，也就是“True”，所以while循环永远都符合条件，会一直进行下去，所以while(1)是一个会进行无数次的死循环。</p><p>那么很显然，如果是while(0)，0就代表“假”，“False”。</p><p>While(1)死循环内部：</p><p>我们要着重掌握GPIO_ResetBits和GPIO_SetBits两个函数。</p><p>作用就是控制某个GPIO口的电平为0还是1。（STM32中：0即0V，1即3.3V）</p><p>这里的0的意思是“逻辑电平0”，即<strong>低电平</strong>。</p><p>这里的1的意思是“逻辑电平1”，即<strong>高电平</strong>。这是数字电路里最基础的概念。</p><p>GPIO口就是我们学前班学的那个“I/O口”，GPIO就是General-purpose input/output，通用型输入输出接口的意思。</p><p>置0就用GPIO_ResetBits，置1就用GPIO_SetBits。</p><p>怎么这么抽象呢？我们实际开发怎么使用这两个函数？</p><p>那正好我们就来看这一节的跑马灯例子：</p><p>板载LED（就是板子上自带一个贴片LED灯）的电路图如图所示：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/f31fa57782b1d2c2.png" alt="img"></p><p>看了电路图，我们就明白为啥就控制C.13口的电平高低灯就能闪烁了。</p><p>上图的“PC13”的意思是pin GPIOC 13号的意思，pin就是引脚的英文，GPIOC就是C排引脚。</p><p>我们使用的这块单片机，我们仔细看下图，C排引脚只伸出来了3个：C13、C14、C15。所以这个C13引脚，就直接接了板子上的LED发光二极管的阴极，只不过内部走线藏在电路板里，我们看不见。</p><p>同样，下图这两排 排针 就是I/O口，主要由A0~A15，B0~B15，C13~C15组成，“G”就代表是GND，也就是0V，也就是低电平。</p><p>“3.3”也就是3.3V，高电平。</p><p>“R”就是reset，重启口，给这个口一个低电平，单片机重启。</p><p>“VB”可以先不管。</p><p>“5V”就是5V供电。</p><p>我们观察这个板子，现在着重要知道的就是：</p><p>下图的红框框起来的这个芯片才是单片机，这个芯片的名字叫做“STM32”。</p><p>STM32有很多版本，我们入门学的这一片全称是STM32F103C8T6，是最风靡的一款STM32。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/3a6eafeb814d6a79.png" alt="img"></p><p>除了这个小黑芯片以外，其他所有东西都是配合STM32的外部设备，比如按键、usb口、跳线帽、晶振、排针接口、降压芯片等。</p><p><strong>STM32主芯片+一系列外部设备 = 最小系统板</strong></p><p>左边这个是复位按钮，按下之后单片机重启。</p><p>上面是两个跳线帽，先不用管，只需要确保它们都是上图这样插（靠近0那一端即可）。</p><p><strong>这些介绍完了我们再回到跑马灯的讲解：</strong></p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/f31fa57782b1d2c2.png" alt="img"></p><p>R3是限流电阻，我们先忽略不管就行，反正就是个普通电阻。按照上图的电路图可知：</p><p>PC13处的电压为0V时，也就是PC13=0时，灯亮；</p><p>PC13处的电压为3.3V时，也就是PC13=1时，灯灭。</p><p>上面这个灯的亮灭，我们就使用代码控制，置0就用GPIO_ResetBits，置1就用GPIO_SetBits。这下明白了吧！</p><p>delay_ms函数进行100毫秒的延时，也就是单片机保持现状，发呆100毫秒。</p><p>While(1)内的代码讲完。</p><ol><li><p>现在就剩LED_Init内部没看了，我们go to definition一下：</p></li></ol><p>下图：<strong>单击</strong>LED_Init函数名，然后右键选择“go to definition of …”。</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/dcd457482604341b.png" alt="img"></p><p>就进到了下面这里：keil自动打开了led.c这个文件：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(<span class="type">void</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//（以下代码不需要死记硬背）</span></span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;      <span class="comment">//初始化GPIO配置结构体</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);</span><br><span class="line">    </span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">    GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>开始一个题外话：</p><p>如果你go to definition失败了：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/1c0d0d0ec44a06a0.png" alt="img"></p><p>那么，点击魔术棒：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/12/247ae2d9ae9f25f4.png" alt="img"></p><p>Browse information这里百分百没勾，勾上，再次编译就行了。</p><p>题外话结束。</p><p>这些代码对于初学者很难，因为这种c语言用法比较难，但是非常重要，请耐心学会。</p><p>第一句：GPIO_InitTypeDef  GPIO_InitStructure;</p><p>继续单击GPIO_InitTypeDef 去go to definition可知：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">uint16_t</span> GPIO_Pin;</span><br><span class="line"></span><br><span class="line">  GPIOSpeed_TypeDef GPIO_Speed;</span><br><span class="line"></span><br><span class="line">  GPIOMode_TypeDef GPIO_Mode;</span><br><span class="line">&#125;GPIO_InitTypeDef;</span><br></pre></td></tr></table></figure><p>这里比较难理解，不仅有一个结构体，还有一个“typedef”关键字。</p><p>首先学会typedef，typedef是一种类型修饰符，它的用法最简单的例子就是：</p><p>typedef int zheng_shu;</p><p>这样声明之后，你定义变量就不用写int a=0;了，可以直接写zheng_shu a=0;</p><p>typedef的本质意思就是给一个东西定义一个别名。</p><p>结构体的语法，要求学了，应该还记得吧：</p><p>普通的结构体是这么定义：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span>   //定义一个名为<span class="title">Student</span>的结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];  <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> id;  <span class="comment">//学号</span></span><br><span class="line">    <span class="type">char</span> sex;  <span class="comment">//性别（1：男  0：女）</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>;</span>  <span class="comment">//定义一个结构体变量</span></span><br></pre></td></tr></table></figure><p>用上面的语句可以定义一个名为Student的结构体框架，然后通过一句：</p><p>struct Student stu;使用这个框架定义一个具体的结构体变量。</p><p>但我们这里用的是匿名结构体，如下：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span>   //没有结构体名</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];  <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> id;  <span class="comment">//学号</span></span><br><span class="line">    <span class="type">char</span> sex;  <span class="comment">//性别（1：男  0：女）</span></span><br><span class="line">    <span class="type">int</span> age;  <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> score;  <span class="comment">//总成绩</span></span><br><span class="line">&#125;stu;  <span class="comment">//使用匿名结构体来定义一个结构体变量stu</span></span><br></pre></td></tr></table></figure><p>上面这样做就是没有给结构体框架起名，直接用struct{…}来直接定义了变量stu。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>   </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];  <span class="comment">//姓名</span></span><br><span class="line">    <span class="type">int</span> id;  <span class="comment">//学号</span></span><br><span class="line">    <span class="type">char</span> sex;  <span class="comment">//性别（1：男  0：女）</span></span><br><span class="line">    <span class="type">int</span> age;  <span class="comment">//年龄</span></span><br><span class="line">    <span class="type">int</span> score;  <span class="comment">//总成绩</span></span><br><span class="line">&#125;StuType_def;  <span class="comment">//使用typedef来压缩struct&#123;…&#125;这一堆，压缩成StuType_def</span></span><br><span class="line"></span><br><span class="line">StuType_def stu; <span class="comment">//最简最直观的结构体定义法</span></span><br></pre></td></tr></table></figure><p>所以，“GPIO_InitTypeDef”完全就是上图的“StuType_def”，是对这上图这一整个结构体框架（也就是struct{…}这一大堆）的别名，这样写的话以后定义这个结构体就不用声明struct{}里面的一大堆参数了，直接一句GPIO_InitTypeDef GPIO_InitStructure;即可完成对这个结构体框架的创建，GPIO_InitStructure就是具体的结构体变量名，相当于上图例子中的变量stu，没什么难的，就是名字长一点而已。</p><p>所以GPIO_InitTypeDef本质是一个<strong>结构体框架</strong>：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="type">uint16_t</span> GPIO_Pin;</span><br><span class="line"></span><br><span class="line">  GPIOSpeed_TypeDef GPIO_Speed;</span><br><span class="line"></span><br><span class="line">  GPIOMode_TypeDef GPIO_Mode;</span><br><span class="line">&#125;GPIO_InitTypeDef;</span><br></pre></td></tr></table></figure><p>跟示例代码一模一样，示例代码里面的成员变量有学号、年龄、性别等成员，而这个框架里面有GPIO_Pin、GPIO_Speed、GPIO_Mode三个成员变量。</p><p>GPIO_InitTypeDef翻译过来其实是“GPIO类框架”，GPIO_Pin、GPIO_Speed、GPIO_Mode这三个成员变量分别就是GPIO的相关参数，分别代表引脚号、引脚速度、引脚模式。</p><p>那回到led.c中：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure><p>学过结构体的人都知道这是啥意思了，给变量GPIO_InitStructure的内部成员挨个赋值。</p><p>前三句便是对结构体中这三个成员变量的赋值：</p><p>首先GPIO_Pin_13 是代表13号口，我们go to definition一下“GPIO_Pin_13”：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_0                 ((uint16_t)0x0001)  <span class="comment">/*!&lt; Pin 0 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_1                 ((uint16_t)0x0002)  <span class="comment">/*!&lt; Pin 1 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_2                 ((uint16_t)0x0004)  <span class="comment">/*!&lt; Pin 2 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_3                 ((uint16_t)0x0008)  <span class="comment">/*!&lt; Pin 3 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_4                 ((uint16_t)0x0010)  <span class="comment">/*!&lt; Pin 4 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_5                 ((uint16_t)0x0020)  <span class="comment">/*!&lt; Pin 5 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_6                 ((uint16_t)0x0040)  <span class="comment">/*!&lt; Pin 6 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_7                 ((uint16_t)0x0080)  <span class="comment">/*!&lt; Pin 7 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_8                 ((uint16_t)0x0100)  <span class="comment">/*!&lt; Pin 8 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_9                 ((uint16_t)0x0200)  <span class="comment">/*!&lt; Pin 9 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_10                ((uint16_t)0x0400)  <span class="comment">/*!&lt; Pin 10 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_11                ((uint16_t)0x0800)  <span class="comment">/*!&lt; Pin 11 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_12                ((uint16_t)0x1000)  <span class="comment">/*!&lt; Pin 12 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_13                ((uint16_t)0x2000)  <span class="comment">/*!&lt; Pin 13 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_14                ((uint16_t)0x4000)  <span class="comment">/*!&lt; Pin 14 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_15                ((uint16_t)0x8000)  <span class="comment">/*!&lt; Pin 15 selected */</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> GPIO_Pin_All               ((uint16_t)0xFFFF)  <span class="comment">/*!&lt; All pins selected */</span></span></span><br><span class="line">`</span><br><span class="line"></span><br><span class="line">发现它是一个宏定义，是一个具体的数值，后面的<span class="number">0</span>x开头的是十六进制数，这些代表什么意思呢？<span class="type">uint16_t</span>又是什么意思？打住！我们由表及里，到这就可以了，后续再了解！不然没完没了，平衡小车就做不出来了。</span><br><span class="line"></span><br><span class="line">第二个参数：</span><br><span class="line"></span><br><span class="line">GPIO_Mode_Out_PP代表推挽输出，又是一个新名词，并且我们go to definition：</span><br><span class="line"></span><br><span class="line">```c</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line">  GPIO_Mode_AIN = <span class="number">0x0</span>,</span><br><span class="line">  GPIO_Mode_IN_FLOATING = <span class="number">0x04</span>,</span><br><span class="line">  GPIO_Mode_IPD = <span class="number">0x28</span>,</span><br><span class="line">  GPIO_Mode_IPU = <span class="number">0x48</span>,</span><br><span class="line">  GPIO_Mode_Out_OD = <span class="number">0x14</span>,</span><br><span class="line">  GPIO_Mode_Out_PP = <span class="number">0x10</span>,</span><br><span class="line">  GPIO_Mode_AF_OD = <span class="number">0x1C</span>,</span><br><span class="line">  GPIO_Mode_AF_PP = <span class="number">0x18</span></span><br><span class="line">&#125;GPIOMode_TypeDef;</span><br></pre></td></tr></table></figure><p>enum是枚举类型，你看作结构体就行，你可以发现，推挽输出只是<strong>8</strong>种GPIO模式里的其中一种。</p><p>以前我们玩arduino，设置引脚模式，就一个“OUTPUT”参数就完事了，到了STM32咋这么多b事…</p><p>那你这里就认为推挽输出=arduino的OUTPUT就可以了，这种模式下IO口可以正常输出高电平和低电平。</p><p>（之后详细学推挽输出请见第二章：GPIO八种输入输出模式）</p><p>第三个参数：设置IO口速度GPIO_Speed_50MHz</p><p>设置GPIO频率为50MHZ（一般默认50MHZ，我们一直都用最大值，不用改不用管）。</p><p>然后看第四句：GPIO_Init(GPIOC, &amp;GPIO_InitStructure);</p><p>通过上面那句GPIO_InitTypeDef  GPIO_InitStructure;  ，我们知道：</p><p>GPIO_InitStructure是基于一个结构体框架生成的一个具体的变量（第n次强调），而且变量里面的三个成员变量已经进行了配置修改！也就是，GPIO_InitStructure变量里的参数都是我们配置好的了，引脚号13，模式是推挽输出，IO速度50MHz，如果我们不配置，这里面的参数默认都是0。</p><p>所以GPIO_Init这个函数就是要把这个配置好的变量输入进去，然后这个函数去对内部的寄存器进行配置。具体怎么配置我们就先不用管了，先到这一层就好。</p><p>最后是RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);</p><p>其作用是使能总线时钟。单片机运行的核心就靠内部的时钟，就像我们买电脑，都会看处理器的参数，一般会看到CPU的主频，比如2.5GHz啊，主频即CPU的时钟频率。这是配置内部时钟的一句核心代码，目前只需要记住，会使用即可。感兴趣的话可以继续看下面灰框的拓展：</p><p>RCC是Reset and Clock Control (复位和时钟控制)它的作用就是给STM32的各个外设分配时钟。<strong>因为STM32为了降低功耗，如果不用RCC功能使能相应外设的时钟，这个外设是不工作的。</strong>那APB1、APB2是什么意思呢？APB1、APB2是系统时钟的两条分支，下图是STM32芯片手册时钟树的部分截图：<img src="https://s3.bmp.ovh/imgs/2025/09/13/22aeed9b06d901c0.png" alt="img">上图我们现在只需要知道：APB1和APB2是两条分支，它们的主干是AHB也就是SYSCLK（系统时钟）我们再看芯片手册里的另一张图：<img src="https://s3.bmp.ovh/imgs/2025/09/13/29f39b7df4029a0f.png" alt="img">AHB分出了APB1和APB2，其中APB2里有我们需要的GPIOC外设，也就是C排引脚。所以RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);这句代码：函数“RCC_APB2PeriphClockCmd”代表使用RCC操作APB2总线；函数内参数“RCC_APB2Periph_GPIOC”代表APB2总线中的GPIOC外设；函数内参数“ENABLE”，小写是“enable”，使能的意思。使能就是“启用”的意思。同理，这里如果是“DISABLE”，那就是disable禁用的意思。</p><ol><li><p>然后我们停在led.c页面，在页面空白处右键，选择“toggle header”：</p></li></ol><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//（以下代码不需要死记硬背）</span></span><br><span class="line">    GPIO_InitTypeDef  GPIO_InitStructure;  <span class="comment">//初始化GPIO配置用的结构体，属于库函数</span></span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);  <span class="comment">//使能PC端口时钟</span></span><br><span class="line"></span><br><span class="line">    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;            <span class="comment">//LED0--&gt;PC.13 端口配置，13号口</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;      <span class="comment">//推挽输出</span></span><br><span class="line">    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;     <span class="comment">//IO口速度为50MHz，这个基本没改过，50MHz是最高</span></span><br><span class="line">    GPIO_Init(GPIOC, &amp;GPIO_InitStructure);                <span class="comment">//根据设定参数初始化GPIOC.13</span></span><br><span class="line"></span><br><span class="line">    GPIO_SetBits(GPIOC, GPIO_Pin_13);            <span class="comment">//PC.13 输出高</span></span><br><span class="line">    GPIO_ResetBits(GPIOC, GPIO_Pin_13);          <span class="comment">//PC.13 输出低</span></span><br><span class="line">    PCout(<span class="number">13</span>) = <span class="number">0</span>;                               <span class="comment">//PC.13 输出低（简化版库函数）</span></span><br><span class="line">    PCout(<span class="number">13</span>) = <span class="number">1</span>;                               <span class="comment">//PC.13 输出高（简化版库函数）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们就进到了led.h中，也就是led.c对应的头文件。</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED PCout(13) <span class="comment">// PC13</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>可以看到里面有个宏定义。</p><p>LED定义为PCout(13)，这有什么用呢？</p><p>其实还有比GPIO_ResetBits和GPIO_SetBits更好用的IO口置0和置1的方法：</p><p>PCout(13)=1; 这句就完全等于GPIO_SetBits(GPIOC,GPIO_Pin_13);</p><p>PCout(13)=0; 这句就完全等于GPIO_ResetBits(GPIOC,GPIO_Pin_13);</p><p>两者完全可替。</p><p>这样宏定义之后，控制PC13的电平就可以写得更简便：</p><p>LED=0，LED=1，这样不就简单到极致了嘛。（第二节就紧接着这样用了）</p><p>关于PCout函数内部是什么，我们go to definition：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> PCout(n) BIT_ADDR(GPIOC_ODR_Addr,n)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PCin(n) BIT_ADDR(GPIOC_IDR_Addr,n)</span></span><br></pre></td></tr></table></figure><p>BIT_ADDR又可以继续go to definition，连续几层下来，我们发现最底层是复杂的看不懂的寄存器操作，所以我们暂时只会使用这个库函数即可。</p><p>还剩最后一个问题：led.c和led.h的区别是什么？</p><p>在此我做一个生动的比喻：</p><p>源文件，也就是.c文件就像国家内部的工厂、农场这种实际生产资料存放的地方，也就是我们具体的算法、函数存放的地方；</p><p>头文件，也就是.h文件就像是国家外交部，声明了对应的.c文件中的函数，并且内部也可以定义一些宏定义等，甚至可以声明其他头文件，比如led.h中include了sys.h，那么“外交官”led.h就会把sys.h声明的函数接口带回自己的国家，也就是“led.c”，这样led.c内部就可以直接使用另一个国家外交官sys.h里声明的函数了。</p><p>插播一条垃圾邮件：本手册的作者：熠只猪，QQ：2029285229，外交官和工厂农场是我原创的内容哦~</p><p>插播结束，抱歉影响观感了。</p><p>所以led.h中有声明led.c中的LED_Init函数：</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;sys.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LED PCout(13) <span class="comment">// PC13</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span>;<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>我们还要把led.h分别在main.c和led.c函数中声明：</p><p>这样main函数中就可以调用led.c的函数了：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/13/15001ee6384e3161.png" alt="img"></p><p>并且我们自己规定：除了main.c函数外所有源文件都至少有一个对应的头文件，并且声明在.c文件开头，这样才算部署成功：</p><p><img src="https://s3.bmp.ovh/imgs/2025/09/13/57f2196bbeab2268.png" alt="img"></p><p>头文件中</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __LED_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __LED_H       </span></span><br><span class="line">… …</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>这一段是固定的，照着写即可。</p>]]></content>
      
      
      <categories>
          
          <category> 学习手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学术资源白皮书</title>
      <link href="/2022/10/06/pages/"/>
      <url>/2022/10/06/pages/</url>
      
        <content type="html"><![CDATA[<div class="note primary modern"><p>穷巷悄然车马绝，案头干死读书萤</p></div><h1 id="01-文献下载"><a href="#01-文献下载" class="headerlink" title="01. 文献下载"></a>01. 文献下载</h1><h2 id="1-1-中文数据库"><a href="#1-1-中文数据库" class="headerlink" title="1.1 中文数据库"></a>1.1 中文数据库</h2><p>很多省市的大型图书馆都免费对外提供中文数据库：</p><ol><li>如<a href="https://www.gslib.com.cn/szzy/xwlw">甘肃省图书馆</a>免费对外提供「万方」数据库</li><li>在<a href="http://www.gxlib.org.cn/">广西壮族图书馆</a>注册账号，登陆即可使用其所购数据库</li><li>打开支付宝搜索“浙江图书馆”，可以注册读者证以使用其所购数据库</li><li>某些省市的大型图书馆大厅可以办理用来访问其所购数据库的读者证</li></ol><h2 id="1-2-百度文库"><a href="#1-2-百度文库" class="headerlink" title="1.2 百度文库"></a>1.2 百度文库</h2><ul><li><strong>软件</strong>：<a href="http://www.daokeyuedu.com/">稻壳阅读器</a>、<a href="https://www.52pojie.cn/thread-1690024-1-1.html">xx文库下载器</a>、<a href="https://www.52pojie.cn/thread-1699941-1-1.html">BdDownload</a>、<a href="https://www.52pojie.cn/thread-1260205-1-1.html">冰点文库</a>、<a href="https://www.52pojie.cn/thread-1359358-1-1.html">文库下载器BY小叶</a></li><li><strong>网站</strong>：<a href="https://imwcr.cn/api/GetDocumentText/">文库下载助手</a>：支持百度文库、道客巴巴、豆丁网</li></ul><h2 id="1-3-文献传递"><a href="#1-3-文献传递" class="headerlink" title="1.3 文献传递"></a>1.3 文献传递</h2><ol><li>外文文献可前往 <code>SCI-hub</code> 搜索：<a href="https://sci-hub.se/mirrors">镜像发布-官方</a>、<a href="https://www.ooopn.com/tool/scihub/">镜像发布-国内</a></li><li>在学术论坛进行文献求助：<a href="http://bbs.99lb.net/">谷粉学术</a>、<a href="https://www.ablesci.com/">科研通</a> 等</li><li><a href="https://www.x-mol.com/">X-MOL 学术平台</a>：开放的科研学术平台，支持期刊文章的搜索，还提供了免费的科研管理工具。</li></ol><h2 id="1-4-电子书籍"><a href="#1-4-电子书籍" class="headerlink" title="1.4 电子书籍"></a>1.4 电子书籍</h2><ol><li><a href="https://annas-archive.org/">Anna’s Archive</a>：支持跨库检索Sci-Hub、LibGen、<a href="https://zh.wikipedia.org/wiki/Z-Library">Z-Library</a></li><li><a href="https://librarygenesis.net/">Library Genesis</a>：帮助全人类知识无版权传播</li><li><a href="https://www.jiumodiary.com/">鸠摩搜书</a> ：国内一众电子书网站最后的倔强</li></ol><h1 id="02-辅助工具"><a href="#02-辅助工具" class="headerlink" title="02. 辅助工具"></a>02. 辅助工具</h1><h2 id="2-1-文献阅读与分析"><a href="#2-1-文献阅读与分析" class="headerlink" title="2.1 文献阅读与分析"></a>2.1 文献阅读与分析</h2><ul><li><a href="https://scispace.com/">SciSpace</a>：基于 AI 的文献阅读和分析工具，对话式解答问题</li></ul><h2 id="2-2-文献翻译"><a href="#2-2-文献翻译" class="headerlink" title="2.2 文献翻译"></a>2.2 文献翻译</h2><h3 id="PDF-翻译软件"><a href="#PDF-翻译软件" class="headerlink" title="PDF 翻译软件"></a>PDF 翻译软件</h3><ul><li><strong>完全免费使用</strong>：<a href="https://copytranslator.github.io/">CopyTranslator</a>、<a href="https://pot.pylogmon.com/">Pot</a>、<a href="https://github.com/InkTimeRecord/TTime">TTime</a>、<a href="https://github.com/ripperhe/Bob">Bob</a></li><li><strong>基于 AI 完整保留排版</strong>：<a href="https://github.com/Byaidu/PDFMathTranslate">PDFMathTranslate</a>、<a href="https://deeppdf.ai/pdf-translator">DeepPDF</a>、<a href="https://github.com/funstory-ai/BabelDOC">BabelDOC</a></li></ul><h3 id="网页翻译插件"><a href="#网页翻译插件" class="headerlink" title="网页翻译插件"></a>网页翻译插件</h3><ul><li><strong>网页双语对照翻译</strong>：<a href="https://huiyiai.net/">会译</a>、<a href="https://github.com/immersive-translate/immersive-translate">沉浸式翻译</a>、<a href="https://github.com/fishjar/kiss-translator">简约翻译</a>、<a href="https://github.com/mengxi-ream/read-frog">陪读蛙</a>、<a href="https://github.com/chunibyocola/sc-translator-crx">可可翻译</a></li><li><strong>聚合词典划词翻译</strong>：<a href="https://saladict.crimx.com/">沙拉查词</a>、<a href="https://www.eudic.net/v4/en/app/plugins#downloadPlugins">欧陆翻译</a></li></ul><h3 id="在线翻译网站"><a href="#在线翻译网站" class="headerlink" title="在线翻译网站"></a>在线翻译网站</h3><ul><li><a href="https://www.deepl.com/translator">DeepL翻译</a>、<a href="https://fanyi.qq.com/">腾讯翻译君</a>、<a href="https://fanyi.weixin.qq.com/pages/explore">微信翻译</a></li></ul><h3 id="术语检索服务"><a href="#术语检索服务" class="headerlink" title="术语检索服务"></a>术语检索服务</h3><ul><li><a href="https://www.termonline.cn/">术语在线</a>、<a href="https://dict.cnki.net/index">CNKI学术翻译助手</a></li></ul><h2 id="2-3-文献复制"><a href="#2-3-文献复制" class="headerlink" title="2.3 文献复制"></a>2.3 文献复制</h2><ul><li><a href="https://windrunnermax.github.io/TKScript/">文本选中复制</a>：解除百度文库、中国知网等网站的复制限制</li><li><a href="https://github.com/CopyPlusPlus/CopyPlusPlus">CopyPlusPlus</a>：复制后自动合并多余换行，保留文献原有换行，自动合并空格</li><li><a href="https://automeris.io/WebPlotDigitizer/">WebPlotDigitizer</a>：从图像中提取数据，可用于<a href="https://www.jianshu.com/p/fd9713e49de2">散点图, 条形图</a>，极坐标图, 地图等</li><li><a href="https://doc2x.noedgeai.com/login?invite_code=QMYEGX">Doc2X</a>：上传图片/PDF 文件，OCR 识别后导出 MarkDown、LaTex、Docx 等格式文件</li><li><strong>OCR 公式识别</strong>：<a href="https://snip.mathpix.com/">Mathpix</a>、<a href="https://doc2x.noedgeai.com/">Doc2X</a>、<a href="https://simpletex.cn/ai/latex_ocr">SimpleTex</a>、<a href="https://github.com/OleehyO/TexTeller">TexTeller</a>、<a href="https://github.com/lukas-blecher/LaTeX-OCR">pix2tex</a>、<a href="https://github.com/xyTom/snippai">Snippai</a></li><li><a href="https://github.com/opendatalab/MinerU">MinerU</a>：一站式高质量数据提取工具，支持PDF/网页/多格式电子书</li></ul><h2 id="2-4-文献管理"><a href="#2-4-文献管理" class="headerlink" title="2.4 文献管理"></a>2.4 文献管理</h2><ul><li><a href="https://www.zotero.org/">Zotero</a>：免费、支持高度自定义，但是学习成本高 <a href="https://zotero-chinese.com/">[中文社区]</a></li><li><code>Endnote</code> <a href="http://xhslink.com/a/AMT5ucMk6gQ5">自行检索可用版本</a></li><li><code>NoteExpress</code> <a href="https://www.google.com/search?q=NoteExpress+免费使用">自行检索可用版本</a></li><li><a href="https://github.com/wanzhenchn/EndNote_Tutorial_Hand_by_Hand">手把手教你使用 EndNote X9/NoteExpress</a></li></ul><h1 id="03-检索导航"><a href="#03-检索导航" class="headerlink" title="03. 检索导航"></a>03. 检索导航</h1><h2 id="3-1-IF及分区查询"><a href="#3-1-IF及分区查询" class="headerlink" title="3.1 IF及分区查询"></a>3.1 IF及分区查询</h2><ul><li><a href="https://jcr.clarivate.com/jcr/">Journal Citation Reports</a></li><li><a href="https://www.fenqubiao.com/Default.aspx">中国科学院文献情报中心期刊分区表</a></li><li><a href="http://cssci.nju.edu.cn/">中文社会科学引文索引（CSSCI）</a></li><li>第三方期刊智能查询系统：<a href="http://www.letpub.com.cn/index.php?page=journalapp">LetPub</a></li></ul><h2 id="3-2-检索语言查询"><a href="#3-2-检索语言查询" class="headerlink" title="3.2 检索语言查询"></a>3.2 检索语言查询</h2><ul><li><a href="http://ztflh.com/">中图分类号查询</a></li></ul><h2 id="3-3-中文数据库"><a href="#3-3-中文数据库" class="headerlink" title="3.3 中文数据库"></a>3.3 中文数据库</h2><ul><li><a href="http://qikan.cqvip.com/">维普期刊</a>：支持「同义词扩展」功能</li><li><a href="https://g.wanfangdata.com.cn/">万方数据</a>：推荐检索词（输入一段文字提取检索词）</li></ul><h2 id="3-4-英文数据库"><a href="#3-4-英文数据库" class="headerlink" title="3.4 英文数据库"></a>3.4 英文数据库</h2><ul><li><a href="https://www.webofscience.com/">Web of Science</a>：从文献之间相互引证关系的角度检索</li><li>Google Scholar <a href="https://www.ooopn.com/tool/ggscholar/">镜像</a>：综合性学术搜索引擎</li></ul><h2 id="3-5-文献追踪助手"><a href="#3-5-文献追踪助手" class="headerlink" title="3.5 文献追踪助手"></a>3.5 文献追踪助手</h2><ul><li><a href="https://www.storkapp.me/">Stork</a>：根据「检索关键词」定期推送相关的最新文献至邮箱中</li></ul><h2 id="3-6-特色检索工具"><a href="#3-6-特色检索工具" class="headerlink" title="3.6 特色检索工具"></a>3.6 特色检索工具</h2><ul><li><a href="https://www.connectedpapers.com/">Connected Papers</a>：获得与所检索文献相关的论文知识图谱，追踪文献的引用和被引关系</li><li><a href="http://consensus.app/search/">Consensus</a>：输入文章信息（支持中文）检索匹配论文，参考文献查找神器🎯</li><li><strong>文献计量学可视化分析工具</strong>：<a href="https://citespace.podia.com/">Citespace</a>、<a href="https://www.vosviewer.com/">VOSviewer</a></li></ul><h1 id="04-统计作图"><a href="#04-统计作图" class="headerlink" title="04. 统计作图"></a>04. 统计作图</h1><h2 id="4-1-可视化分析平台"><a href="#4-1-可视化分析平台" class="headerlink" title="4.1 可视化分析平台"></a>4.1 可视化分析平台</h2><ul><li><a href="https://hiplot.cn/">Hiplot</a>：一站式科研可视化分析平台</li></ul><h2 id="4-2-R语言相关资源"><a href="#4-2-R语言相关资源" class="headerlink" title="4.2 R语言相关资源"></a>4.2 R语言相关资源</h2><ul><li><a href="https://cran.r-project.org/mirrors.html">CRAN 国内镜像站</a>：<a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/">清华</a>、<a href="https://mirrors.pku.edu.cn/CRAN/">北大</a>、<a href="https://mirrors.ustc.edu.cn/CRAN/">中科大</a>、<a href="https://mirrors.zju.edu.cn/CRAN/">浙大</a>、<a href="https://mirror.lzu.edu.cn/CRAN/">兰大</a>、<a href="https://mirrors.sjtug.sjtu.edu.cn/cran/">上交</a></li><li><a href="https://posit.co/download/rstudio-desktop/">RStudio</a>：一款使 R 语言编程变得更加直观和高效的工具</li><li><a href="https://r-graph-gallery.com/">The R Graph Gallery</a>：提供数百种图表的重现代码，主要基于 tidyverse 和 ggplot2 包</li><li><a href="https://bookdown.org/wangminjie/R4DS/">数据科学中的R语言</a>：四川师范大学研究生R语言公选课内容</li><li><code>package</code> <a href="https://github.com/tylermorganwall/rayshader">Rayshader</a>：生成 2D 及 3D 的统计地图 <a href="https://github.com/Pecners/rayshader_portraits">案例\</a></li></ul><h2 id="4-3-其他统计工具"><a href="#4-3-其他统计工具" class="headerlink" title="4.3 其他统计工具"></a>4.3 其他统计工具</h2><ul><li><a href="https://jasp-stats.org/">JASP</a>：基于R语言的统计分析软件，操作界面类似于 SPSS</li><li><a href="https://welcome.oda.sas.com/">SAS OnDemand for Academics</a>：网页版免费 SAS 应用平台</li></ul><h2 id="4-4-公式编辑"><a href="#4-4-公式编辑" class="headerlink" title="4.4 公式编辑"></a>4.4 公式编辑</h2><ul><li><a href="https://www.latexlive.com/">在线 LaTeX 公式编辑器</a>：支持输出为 Word 文档及 HTML 等格式代码</li></ul><h1 id="05-写作投稿"><a href="#05-写作投稿" class="headerlink" title="05. 写作投稿"></a>05. 写作投稿</h1><h2 id="5-1-查重降重"><a href="#5-1-查重降重" class="headerlink" title="5.1 查重降重"></a>5.1 查重降重</h2><ul><li><a href="https://chsi.wanfangtech.net/">学信网</a>：应届毕业生享万方免费查重一次</li><li><a href="https://www.bigan.net/">笔杆网</a>：连接校网的情况下可以每天免费查两次</li><li><a href="https://www.paperyy.com/">PaperYY</a>：创建班级可得一天10次免费查重</li><li><a href="https://xiezuocat.com/">秘塔写作猫</a>：对语句进行同义改写，降重可用，但请谨慎使用！</li></ul><h2 id="5-2-句子润色"><a href="#5-2-句子润色" class="headerlink" title="5.2 句子润色"></a>5.2 句子润色</h2><ul><li><a href="https://www.phrasebank.manchester.ac.uk/">Phrasebank</a>：学术写作语料库</li><li><strong>拼写及语法检查</strong>：<ul><li><code>Free</code> <a href="https://www.grammarly.com/">Grammarly</a>、<a href="https://wordvice.ai/cn">WORDVICE</a>、<a href="https://prowritingaid.com/">ProwritingAid</a></li><li><code>Premium</code> <a href="https://hemingwayapp.com/">Hemingway Editor</a>、<a href="https://quillbot.com/">Quillbot</a>、<a href="https://www.wordtune.com/">Wordtune</a></li></ul></li><li><a href="https://aimwriting.mtutor.engkoo.com/">微软爱写作-Aim Writing</a>：免费英语作文批改网站</li></ul><h3 id="ChatGPT-润色指令-by-Nature"><a href="#ChatGPT-润色指令-by-Nature" class="headerlink" title="ChatGPT 润色指令-by Nature"></a>ChatGPT 润色指令-by Nature</h3><blockquote><p>“I’m writing a paper on [topic] for a leading [discipline] academic journal. What I tried to say in the following section is [specific point]. Please rephrase it for clarity, coherence and conciseness, ensuring each paragraph flows into the next. Remove jargon. Use a professional tone.” <a href="https://www.nature.com/articles/d41586-024-01042-3">[1]</a></p></blockquote><h2 id="5-3-选刊网站"><a href="#5-3-选刊网站" class="headerlink" title="5.3 选刊网站"></a>5.3 选刊网站</h2><ul><li><a href="https://earlywarning.fenqubiao.com/">国际期刊预警名单-中国科学院文献情报中心</a></li></ul><blockquote><p>输入论文标题/摘要/关键词，设定筛选条件后给出推荐期刊 <a href="https://www.dxy.cn/bbs/newweb/pc/post/50466943">[1]</a> <a href="https://cloud.tencent.com/developer/article/1976111">[2]</a></p></blockquote><ul><li><a href="http://jane.biosemantics.org/">JANE</a>：可对高质量的期刊进行高亮标注</li><li><a href="https://journalfinder.elsevier.com/">Journal Finder</a>：提供期刊 IF、录用率、审稿周期、版面费等关键信息</li><li><a href="https://journalsuggester.springer.com/">Springer Journal Suggester</a>：主要搜索的是 Springer 和 BMC 旗下的杂志</li><li><a href="https://www.journalguide.com/">Journal Guide</a>：输入题目即可匹配目标期刊以及上面的类似文章</li><li><strong>其他</strong>：<a href="https://www.edanzediting.com/journal-selector">Edanz Journal Selector</a>、<a href="https://www.scimagojr.com/index.php">SJR</a>、<a href="http://cofactorscience.com/journal-selector">Cofactor</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学术资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学术资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub SSH 连接终极解决方案：443 端口修改 + 多场景故障排查指南</title>
      <link href="/2022/09/18/ssh_problem/"/>
      <url>/2022/09/18/ssh_problem/</url>
      
        <content type="html"><![CDATA[<h1 id="GitHub-SSH-连接终极解决方案：443-端口修改-多场景故障排查指南"><a href="#GitHub-SSH-连接终极解决方案：443-端口修改-多场景故障排查指南" class="headerlink" title="GitHub SSH 连接终极解决方案：443 端口修改 + 多场景故障排查指南"></a>GitHub SSH 连接终极解决方案：443 端口修改 + 多场景故障排查指南</h1><p><strong>发布时间</strong>：2025-04-18 13:04:44</p><h2 id="一、问题现象速查"><a href="#一、问题现象速查" class="headerlink" title="一、问题现象速查"></a>一、问题现象速查</h2><p>当执行 <code>ssh -T git@github.com</code> 时，常见报错：</p><h3 id="1-经典端口阻塞"><a href="#1-经典端口阻塞" class="headerlink" title="1. 经典端口阻塞"></a>1. 经典端口阻塞</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br></pre></td></tr></table></figure><h3 id="2-密钥验证失败"><a href="#2-密钥验证失败" class="headerlink" title="2. 密钥验证失败"></a>2. 密钥验证失败</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Permission denied (publickey)</span><br></pre></td></tr></table></figure><h3 id="3-反复提示确认"><a href="#3-反复提示确认" class="headerlink" title="3. 反复提示确认"></a>3. 反复提示确认</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">&#x27;github.com&#x27;</span> can<span class="string">&#x27;t be established</span></span><br></pre></td></tr></table></figure><h2 id="二、深度解决方案集合"><a href="#二、深度解决方案集合" class="headerlink" title="二、深度解决方案集合"></a>二、深度解决方案集合</h2><h3 id="▶-方案一：端口切换大法（推荐首选）"><a href="#▶-方案一：端口切换大法（推荐首选）" class="headerlink" title="▶ 方案一：端口切换大法（推荐首选）"></a>▶ 方案一：端口切换大法（推荐首选）</h3><ol><li><p><strong>定位 SSH 配置目录</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="built_in">cd</span> %USERPROFILE%\.ssh  </span><br><span class="line"><span class="comment"># macOS/Linux  </span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh  </span><br></pre></td></tr></table></figure></li><li><p><strong>创建 / 修改<code>config</code>文件</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">touch</span> config  <span class="comment"># 新建文件  </span></span><br><span class="line">code config   <span class="comment"># 使用VSCode编辑  </span></span><br></pre></td></tr></table></figure><p>添加以下内容（注意缩进）：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com  </span><br><span class="line">    Hostname ssh.github.com  </span><br><span class="line">    Port 443  </span><br><span class="line">    User git  </span><br><span class="line">    IdentityFile ~/.ssh/id_rsa  # 指定密钥路径（可选）  </span><br></pre></td></tr></table></figure><p><strong>Windows 手动配置</strong>：在<code>.ssh</code>目录新建文本文件，输入内容后删除后缀名<code>.txt</code>。</p></li><li><p><strong>权限加固（Linux/macOS 必做）</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 600 config  </span><br></pre></td></tr></table></figure></li><li><p><strong>实时验证测试</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com -v  <span class="comment"># -v显示详细过程  </span></span><br></pre></td></tr></table></figure><p><strong>成功示例</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hi LUOYu07! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.  </span></span><br></pre></td></tr></table></figure></li></ol><p>通过 HTTPS 端口（443）建立 SSH 隧道，绕过企业防火墙对 22 端口的限制。</p><h3 id="▶-方案二：密钥全链路检测（端口无效时）"><a href="#▶-方案二：密钥全链路检测（端口无效时）" class="headerlink" title="▶ 方案二：密钥全链路检测（端口无效时）"></a>▶ 方案二：密钥全链路检测（端口无效时）</h3><ol><li><p><strong>密钥指纹核对</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -lf ~/.ssh/id_rsa.pub  <span class="comment"># 本地指纹  </span></span><br></pre></td></tr></table></figure><p>对比 GitHub 后台：<code>Settings → SSH and GPG keys → Key fingerprint</code>。</p></li><li><p><strong>密钥加载检测</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-add -l  <span class="comment"># 查看已加载密钥  </span></span><br><span class="line">ssh-add ~/.ssh/id_rsa  <span class="comment"># 手动加载密钥  </span></span><br></pre></td></tr></table></figure></li><li><p><strong>多密钥管理</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># config文件示例（区分工作/个人密钥）  </span><br><span class="line">Host github-work  </span><br><span class="line">    Hostname github.com  </span><br><span class="line">    IdentityFile ~/.ssh/work_id_rsa  </span><br></pre></td></tr></table></figure></li></ol><h3 id="▶-方案三：网络环境整治（企业网）"><a href="#▶-方案三：网络环境整治（企业网）" class="headerlink" title="▶ 方案三：网络环境整治（企业网）"></a>▶ 方案三：网络环境整治（企业网）</h3><ol><li><p><strong>代理配置模板</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host github.com  </span><br><span class="line">    ProxyCommand connect -H proxy.example.com:8080 %h %p  </span><br></pre></td></tr></table></figure></li><li><p><strong>防火墙例外（Windows）</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=<span class="string">&quot;GitHub_SSH&quot;</span> <span class="built_in">dir</span>=<span class="keyword">in</span> action=allow protocol=TCP localport=443  </span><br></pre></td></tr></table></figure></li><li><p><strong>热点测试法</strong><br>切换手机热点后执行：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping ssh.github.com -t  </span><br></pre></td></tr></table></figure></li></ol><h2 id="三、高阶排查工具箱"><a href="#三、高阶排查工具箱" class="headerlink" title="三、高阶排查工具箱"></a>三、高阶排查工具箱</h2><h3 id="1-DEBUG-模式（连接显微镜）"><a href="#1-DEBUG-模式（连接显微镜）" class="headerlink" title="1. DEBUG 模式（连接显微镜）"></a>1. DEBUG 模式（连接显微镜）</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -Tvv git@github.com  </span><br></pre></td></tr></table></figure><p><strong>关键日志</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">debug1: Connecting to github.com [20.205.243.166] port 443.  </span><br><span class="line">debug1: Connection established.  </span><br><span class="line">debug1: identity file /c/Users/user/.ssh/id_rsa <span class="built_in">type</span> 0  </span><br></pre></td></tr></table></figure><h3 id="2-网络质量诊断"><a href="#2-网络质量诊断" class="headerlink" title="2. 网络质量诊断"></a>2. 网络质量诊断</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ping ssh.github.com -n 100 &gt; ping_log.txt  <span class="comment"># 持续Ping测试  </span></span><br><span class="line">telnet ssh.github.com 443  <span class="comment"># 端口连通性检测  </span></span><br></pre></td></tr></table></figure><h3 id="3-时间校准"><a href="#3-时间校准" class="headerlink" title="3. 时间校准"></a>3. 时间校准</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Windows  </span></span><br><span class="line">w32tm /resync  </span><br><span class="line"><span class="comment"># Linux  </span></span><br><span class="line"><span class="built_in">sudo</span> ntpdate pool.ntp.org  </span><br></pre></td></tr></table></figure><h2 id="四、替代方案备案库"><a href="#四、替代方案备案库" class="headerlink" title="四、替代方案备案库"></a>四、替代方案备案库</h2><h3 id="1-HTTPS-协议应急"><a href="#1-HTTPS-协议应急" class="headerlink" title="1. HTTPS 协议应急"></a>1. HTTPS 协议应急</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote set-url origin https://github.com/user/repo.git  </span><br></pre></td></tr></table></figure><p><strong>注</strong>：需使用 GitHub Personal Access Token（PAT）替代密码。</p><h3 id="2-第三方工具"><a href="#2-第三方工具" class="headerlink" title="2. 第三方工具"></a>2. 第三方工具</h3><div class="table-container"><table><thead><tr><th>工具</th><th>适用场景</th><th>官网</th></tr></thead><tbody><tr><td>Pageant</td><td>Windows 密钥管理</td><td><a href="https://putty.org/">putty.org</a></td></tr><tr><td>SSH-Agent</td><td>macOS 密钥管家</td><td>系统内置</td></tr></tbody></table></div><h2 id="五、防患未然指南"><a href="#五、防患未然指南" class="headerlink" title="五、防患未然指南"></a>五、防患未然指南</h2><h3 id="1-定期维护清单"><a href="#1-定期维护清单" class="headerlink" title="1. 定期维护清单"></a>1. 定期维护清单</h3><ul><li>密钥有效期检测</li><li>配置文件权限验证（600）</li><li>GitHub 访问 IP 更新监测</li></ul><h3 id="2-企业网预配置（Windows）"><a href="#2-企业网预配置（Windows）" class="headerlink" title="2. 企业网预配置（Windows）"></a>2. 企业网预配置（Windows）</h3><figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Set-ItemProperty</span> <span class="literal">-Path</span> <span class="string">&quot;HKLM:\System\CurrentControlSet\Control\Lsa&quot;</span> <span class="literal">-Name</span> <span class="string">&quot;disabledomaincreds&quot;</span> <span class="literal">-Value</span> <span class="number">0</span>  </span><br></pre></td></tr></table></figure><h2 id="六、实战问答精选"><a href="#六、实战问答精选" class="headerlink" title="六、实战问答精选"></a>六、实战问答精选</h2><h3 id="Q1：修改config后仍报错？"><a href="#Q1：修改config后仍报错？" class="headerlink" title="Q1：修改config后仍报错？"></a>Q1：修改<code>config</code>后仍报错？</h3><p>执行 <code>ssh -T git@github.com -v</code> 查日志，常见问题：</p><ul><li>密钥路径错误 → 检查<code>IdentityFile</code></li><li>代理冲突 → 临时关闭 VPN</li></ul><h3 id="Q2：公司禁用所有外联端口？"><a href="#Q2：公司禁用所有外联端口？" class="headerlink" title="Q2：公司禁用所有外联端口？"></a>Q2：公司禁用所有外联端口？</h3><p>方案：</p><ol><li>申请白名单</li><li>使用 Dev 容器开发</li><li>配置 SSH over HTTPS</li></ol><h3 id="Q3：多平台密钥管理？"><a href="#Q3：多平台密钥管理？" class="headerlink" title="Q3：多平台密钥管理？"></a>Q3：多平台密钥管理？</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 示例：区分Gitee和GitHub  </span><br><span class="line">Host gitee.com  </span><br><span class="line">    IdentityFile ~/.ssh/gitee_id  </span><br><span class="line">Host github.com  </span><br><span class="line">    Hostname ssh.github.com  </span><br><span class="line">    IdentityFile ~/.ssh/github_id  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pd-Ni合金薄膜测量氢气数据优化处理</title>
      <link href="/2022/09/03/H2/"/>
      <url>/2022/09/03/H2/</url>
      
        <content type="html"><![CDATA[<ul><li><a href="https://www.x-mol.com/paper/1612627542263545856/t?adv#:~:text=%E6%9C%AC%E7%A0%94%E7%A9%B6%E6%A3%80%E9%AA%8C%E4%BA%86%E9%92%AF%20%28Pd%29-%E9%95%8D%20%28Ni%29%20%E5%90%88%E9%87%91%E8%96%84%E8%86%9C%E5%9C%A8%E4%B8%8D%E5%90%8C%20Ni%20%E6%B5%93%E5%BA%A6%E4%B8%8B%E6%A3%80%E6%B5%8B%E6%B0%A2%20%28H%202,8%25%20%E7%9A%84%20Ni%20%E6%B5%93%E5%BA%A6%E6%97%B6%EF%BC%8CPd-Ni%20%E5%90%88%E9%87%91%E4%BC%A0%E6%84%9F%E5%99%A8%E7%9A%84%E5%93%8D%E5%BA%94%E7%BA%BF%E6%80%A7%E9%99%8D%E4%BD%8E%EF%BC%8C%E5%B9%B6%E4%B8%94%20Pd-Ni%20%E5%90%88%E9%87%91%E7%9A%84%E7%94%B5%E9%98%BB%E5%9C%A8%E6%9A%B4%E9%9C%B2%E4%BA%8E%E5%85%B7%E6%9C%89%E5%90%B8%E6%94%B6%E5%92%8C%E8%A7%A3%E5%90%B8%E7%89%B9%E6%80%A7%E7%9A%84H%202%E6%B0%94%E4%BD%93%E6%97%B6%E6%98%AF%E5%8F%AF%E9%80%86%E7%9A%84%E3%80%82">《Pd-Ni合金薄膜提高氢气传感性能》</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 毕设准备 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 毕设准备 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>example</title>
      <link href="/2022/09/01/example/"/>
      <url>/2022/09/01/example/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
